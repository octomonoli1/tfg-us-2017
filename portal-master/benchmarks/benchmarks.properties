##
## DO NOT EDIT THIS FILE.
##
## To update the properties of this file, create a separate properties file
## named "benchmarks.${user.name}.properties" with the properties to overwrite.
##

##
## Sample SQL
##

    #
    # Specify whether the generated asset publisher portlet instances should
	# query by asset categories or asset tags.
    #
    sample.sql.asset.publisher.query.name=assetCategories
	#sample.sql.asset.publisher.query.name=assetTags

	#
    # Specify the time zone.
    #
    sample.sql.db.time.zone=

    #
    # Specify the database type of the generated SQL files.
    #
    #sample.sql.db.type=db2
    #sample.sql.db.type=hypersonic
    sample.sql.db.type=mysql
    #sample.sql.db.type=oracle
    #sample.sql.db.type=postgresql
    #sample.sql.db.type=sqlserver
    #sample.sql.db.type=sybase

    #
    # Specify the number of asset categories to generate per asset vocabulary.
    #
    sample.sql.max.asset.category.count=0

    #
    # Specify the number of asset categories to associate per asset entry.
    #
    sample.sql.max.asset.entry.to.asset.category.count=4

    #
    # Specify the number of asset tags to associate per asset entry.
    #
    sample.sql.max.asset.entry.to.asset.tag.count=5

    #
    # Specify the number of asset publisher pages to generate per community.
    #
    sample.sql.max.asset.publisher.page.count=6

    #
    # Specify the number of asset tags to generate.
    #
    sample.sql.max.asset.tag.count=0

    #
    # Specify the number of asset vocabularies to generate.
    #
    sample.sql.max.asset.vocabulary.count=0

    #
    # Specify the number of comments to generate per blogs entry.
    #
    sample.sql.max.blogs.entry.comment.count=10

    #
    # Specify the number of blogs entries to generate per community.
    #
    sample.sql.max.blogs.entry.count=10

    #
    # Specify the number of custom fields to generate per structured dynamic
    # data lists record set.
    #
    sample.sql.max.ddl.custom.field.count=10

    #
    # Specify the number of records to generate per dynamic data lists record
    # set.
    #
    sample.sql.max.ddl.record.count=10

    #
    # Specify the number of dynamic data lists record sets to generate per
    # community.
    #
    sample.sql.max.ddl.record.set.count=1

    #
    # Specify the number of file entries to generate per document library
    # folder.
    #
    sample.sql.max.dl.file.entry.count=10

    #
    # Specify the size of the generated document library file entries.
    #
    sample.sql.max.dl.file.entry.size=10240

    #
    # Specify the number of document library folders to generate per depth in a
    # community.
    #
    sample.sql.max.dl.folder.count=10

    #
    # Specify the depth of document library folders to generate per community.
    #
    sample.sql.max.dl.folder.depth=3

    #
    # Specify the number of sites to generate.
    #
    sample.sql.max.group.count=10

    #
    # Specify the number of journal articles to generate per page per community.
    #
    sample.sql.max.journal.article.count=1

    #
    # Specify the number of page for journal articles to generate per community.
    #
    sample.sql.max.journal.article.page.count=6

    #
    # Specify the size of the generated journal articles.
    #
    sample.sql.max.journal.article.size=30

    #
    # Specify the number of journal article versions for each journal article.
    #
    sample.sql.max.journal.article.version.count=1

    #
    # Specify the number of message boards categories to generate per community.
    #
    sample.sql.max.mb.category.count=10

    #
    # Specify the number of messages to generate per message boards thread.
    #
    sample.sql.max.mb.message.count=10

    #
    # Specify the number of threads to generate per message boards category.
    #
    sample.sql.max.mb.thread.count=10

    #
    # Specify the number of users to generate per community.
    #
    sample.sql.max.user.count=10

    #
    # All generated users are associated with the Guest community. Set this
    # property to specify how many generated sites a user will be associated
    # with.
    #
    sample.sql.max.user.to.group.count=2

    #
    # Specify the number of wiki nodes to generate per community.
    #
    sample.sql.max.wiki.node.count=10

    #
    # Specify the number of comments to generate per wiki page.
    #
    sample.sql.max.wiki.page.comment.count=10

    #
    # Specify the number of pages to generate per wiki node.
    #
    sample.sql.max.wiki.page.count=10

    #
    # Specify the optimize buffer size.
    #
    sample.sql.optimize.buffer.size=8192

    #
    # Specify the CSV file names to generate.
    #
    sample.sql.output.csv.file.names=assetPublisher,blog,company,documentLibrary,dynamicDataList,layout,messageBoard,repository,wiki

    #
    # Specify the directory to output the generated SQL files.
    #
    sample.sql.output.dir=.

    #
    # Specify whether the output should be merged into a single SQL file.
    #
    sample.sql.output.merge=true

    #
    # Specify the FreeMarker template used to generate SQL files.
    #
    sample.sql.script=com/liferay/portal/tools/sample/sql/builder/dependencies/sample.ftl

    #
    # Specify the virtual host name.
    #
    sample.sql.virtual.hostname=localhost