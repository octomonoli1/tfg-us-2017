<?xml version="1.0"?>

<project
	basedir="."
	default="compile"
	name="portal-impl"
	xmlns:antelope="antlib:ise.antelope.tasks"
	xmlns:artifact="antlib:org.apache.maven.artifact.ant"
	xmlns:if="ant:if"
	xmlns:unless="ant:unless"
>
	<property name="test.properties" value="portal-test.properties" />

	<import file="../build-common-java.xml" />

	<property name="copy.jar" value="false" />
	<property name="deploy.dir" value="${app.server.lib.portal.dir}" />
	<property name="jar.file" value="${ant.project.name}" />
	<property name="manifest.bundle.name" value="Liferay Portal Impl" />
	<property name="manifest.bundle.symbolic.name" value="com.liferay.portal.impl;singleton:=true" />
	<property name="service.file" value="service.xml" />

	<target name="build-alloy-taglib-jar">
		<if>
			<not>
				<isset property="alloy.taglibs.dir" />
			</not>
			<then>
				<fail>
.

Please set the property "alloy.taglibs.dir" to point to a checked out version of
svn://svn.liferay.com/repos/public/alloy/trunk/sandbox/taglibs.
				</fail>
			</then>
		</if>

		<ant dir="${alloy.taglibs.dir}" inheritAll="false" target="clean" />
		<ant dir="${alloy.taglibs.dir}" inheritAll="false" target="start" />

		<copy preservelastmodified="true" todir="${project.dir}/lib/development">
			<fileset file="${alloy.taglibs.dir}/alloy-taglib/alloy-taglib.jar" />
		</copy>
	</target>

	<target name="build-db">
		<ant dir="../sql" target="build-db" />
	</target>

	<target name="build-ehcache-xsd">
		<mirrors-get dest="ehcache.xsd" src="http://ehcache.org/ehcache.xsd" />

		<xmltask dest="src/ehcache/ehcache.xsd" source="ehcache.xsd">
			<replace path="/xs:schema/xs:element[@name='ehcache']/xs:complexType/xs:attribute[@name='name']/@use" withText="required" />
		</xmltask>

		<replace file="src/ehcache/ehcache.xsd">
			<replacefilter>
				<replacetoken><![CDATA[<?xml encoding="UTF-8" standalone="no" version="1.0"?>]]></replacetoken>
				<replacevalue><![CDATA[<?xml encoding="UTF-8" standalone="no" version="1.0"?>

<!-- @generated -->
]]></replacevalue>
			</replacefilter>
		</replace>

		<delete file="ehcache.xsd" />
	</target>

	<target name="build-iw">
		<java
			classname="com.liferay.portal.tools.InstanceWrapperBuilder"
			classpathref="project.classpath"
			fork="true"
			newenvironment="true"
		>
			<jvmarg value="-Dexternal-properties=com/liferay/portal/tools/dependencies/portal-tools.properties" />
			<arg value="src/com/liferay/portal/tools/instance_wrappers.xml" />
		</java>
	</target>

	<target name="build-json-java-jar">
		<mirrors-get
			dest="json-java.zip"
			src="https://github.com/douglascrockford/JSON-java/zipball/master"
		/>

		<tstamp>
			<format pattern="yyyyMMddkkmmssSSS" property="tstamp.value" />
		</tstamp>

		<unzip
			dest="${tstamp.value}/org/json"
			src="json-java.zip"
		>
			<patternset
				includes="**/*.java"
			/>
			<flattenmapper />
		</unzip>

		<delete file="json-java.zip" />

		<antcall target="compile">
			<param name="javac.destdir" value="${tstamp.value}" />
			<param name="javac.srcdir" value="${tstamp.value}" />
		</antcall>

		<zip
			basedir="${tstamp.value}"
			destfile="${project.dir}/lib/portal/json-java.jar.new"
		/>

		<delete dir="${tstamp.value}" />
	</target>

	<target name="build-lang">
		<antcall target="build-lang-cmd">
			<param name="lang.dir" value="src/content" />
			<param name="lang.file" value="Language" />
		</antcall>
	</target>

	<target name="build-lang-cmd">
		<path id="lang.builder.classpath">
			<fileset dir="${sdk.dir}/dependencies/com.liferay.lang.builder/lib" includes="*.jar" />
		</path>

		<java
			classname="com.liferay.lang.builder.LangBuilder"
			classpathref="lang.builder.classpath"
			fork="true"
			newenvironment="true"
		>
			<jvmarg value="-Dfile.encoding=UTF-8" />
			<jvmarg value="-Duser.country=US" />
			<jvmarg value="-Duser.language=en" />
			<arg value="build.current.branch=${build.current.branch}" />
			<arg value="git.working.branch.name=${git.working.branch.name}" />
			<arg value="lang.dir=${lang.dir}" />
			<arg value="lang.file=${lang.file}" />
			<arg value="lang.plugin=false" />
			<arg value="lang.translate=true" />
			<arg value="lang.translate.client.id=${microsoft.translator.client.id}" />
			<arg value="lang.translate.client.secret=${microsoft.translator.client.secret}" />
		</java>
	</target>

	<target name="build-lang-current-branch">
		<antcall target="build-lang-cmd">
			<param name="build.current.branch" value="true" />
			<param name="lang.dir" value="src/content" />
			<param name="lang.file" value="Language" />
		</antcall>
	</target>

	<target name="build-lib-versions">
		<java
			classname="com.liferay.portal.tools.XSLTBuilder"
			classpathref="project.classpath"
			fork="true"
			newenvironment="true"
		>
			<jvmarg value="-Dexternal-properties=com/liferay/portal/tools/dependencies/portal-tools.properties" />
			<arg value="${project.dir}/lib/versions.xml" />
			<arg value="${project.dir}/lib/versions.xsl" />
			<arg value="${project.dir}/lib/versions.html" />
		</java>
	</target>

	<target if="release.info" name="build-releaseinfo">
		<java
			classname="com.liferay.portal.tools.ReleaseInfoBuilder"
			classpathref="project.classpath"
			fork="true"
			newenvironment="true"
		>
			<jvmarg value="-Dexternal-properties=com/liferay/portal/tools/dependencies/portal-tools.properties" />
		</java>
	</target>

	<target name="build-service">
		<path id="service.builder.classpath">
			<fileset dir="${sdk.dir}/dependencies/com.liferay.portal.tools.service.builder/lib" includes="*.jar" />
		</path>

		<java
			classname="com.liferay.portal.tools.service.builder.ServiceBuilder"
			classpathref="service.builder.classpath"
			fork="true"
			newenvironment="true"
			outputproperty="build-service.output"
		>
			<jvmarg if:true="${jvm.debug}" value="${jpda.settings}" />
			<jvmarg value="-Dfile.encoding=UTF-8" />
			<jvmarg value="-Xms512m" />
			<jvmarg value="-Xmx1024m" />
			<jvmarg value="-Xss2048k" />
			<jvmarg value="-XX:MaxPermSize=512m" />
			<arg value="-Dexternal-properties=com/liferay/portal/tools/dependencies/portal-tools.properties" />
			<arg value="-Dorg.apache.commons.logging.Log=org.apache.commons.logging.impl.Log4JLogger" />
			<arg value="service.api.dir=${basedir}/../portal-kernel/src" />
			<arg value="service.auto.import.default.references=true" />
			<arg value="service.auto.namespace.tables=false" />
			<arg value="service.bean.locator.util=com.liferay.portal.kernel.bean.PortalBeanLocatorUtil" />
			<arg value="service.build.number=1" />
			<arg value="service.build.number.increment=true" />
			<arg value="service.hbm.file=${basedir}/src/META-INF/portal-hbm.xml" />
			<arg value="service.impl.dir=${basedir}/src" />
			<arg value="service.input.file=${service.file}" />
			<arg value="service.model.hints.file=${basedir}/src/META-INF/portal-model-hints.xml" />
			<arg value="service.osgi.module=false" />
			<arg value="service.plugin.name=" />
			<arg value="service.props.util=com.liferay.portal.util.PropsUtil" />
			<arg value="service.resources.dir=${basedir}/src" />
			<arg value="service.spring.file=${basedir}/src/META-INF/portal-spring.xml" />
			<arg value="service.spring.namespaces=beans" />
			<arg value="service.sql.dir=${basedir}/../sql" />
			<arg value="service.sql.file=portal-tables.sql" />
			<arg value="service.sql.indexes.file=indexes.sql" />
			<arg value="service.sql.sequences.file=sequences.sql" />
			<arg value="service.target.entity.name=${service.target.entity.name}" />
			<arg value="service.test.dir=${basedir}/test/integration" />
		</java>

		<delete file="ServiceBuilder.temp" />

		<echo>${build-service.output}</echo>

		<if>
			<contains string="${build-service.output}" substring="Error" />
			<then>
				<fail>Service Builder generated exceptions.</fail>
			</then>
		</if>

		<ant dir="../portal-kernel" inheritAll="false" target="compile" />
	</target>

	<target name="build-service-counter">
		<antcall target="build-service">
			<param name="service.file" value="${basedir}/src/com/liferay/counter/service.xml" />
		</antcall>
	</target>

	<target name="build-service-portal">
		<antcall target="build-service">
			<param name="service.file" value="${basedir}/src/com/liferay/portal/service.xml" />
		</antcall>
	</target>

	<target name="build-service-portlet-announcements">
		<antcall target="build-service">
			<param name="service.file" value="${basedir}/src/com/liferay/portlet/announcements/service.xml" />
		</antcall>
	</target>

	<target name="build-service-portlet-asset">
		<antcall target="build-service">
			<param name="service.file" value="${basedir}/src/com/liferay/portlet/asset/service.xml" />
		</antcall>
	</target>

	<target name="build-service-portlet-blogs">
		<antcall target="build-service">
			<param name="service.file" value="${basedir}/src/com/liferay/portlet/blogs/service.xml" />
		</antcall>
	</target>

	<target name="build-service-portlet-documentlibrary">
		<antcall target="build-service">
			<param name="service.file" value="${basedir}/src/com/liferay/portlet/documentlibrary/service.xml" />
		</antcall>
	</target>

	<target name="build-service-portlet-expando">
		<antcall target="build-service">
			<param name="service.file" value="${basedir}/src/com/liferay/portlet/expando/service.xml" />
		</antcall>
	</target>

	<target name="build-service-portlet-exportimport">
		<antcall target="build-service">
			<param name="service.file" value="${basedir}/src/com/liferay/portlet/exportimport/service.xml" />
		</antcall>
	</target>

	<target name="build-service-portlet-messageboards">
		<antcall target="build-service">
			<param name="service.file" value="${basedir}/src/com/liferay/portlet/messageboards/service.xml" />
		</antcall>
	</target>

	<target name="build-service-portlet-ratings">
		<antcall target="build-service">
			<param name="service.file" value="${basedir}/src/com/liferay/portlet/ratings/service.xml" />
		</antcall>
	</target>

	<target name="build-service-portlet-social">
		<antcall target="build-service">
			<param name="service.file" value="${basedir}/src/com/liferay/portlet/social/service.xml" />
		</antcall>
	</target>

	<target name="build-service-portlet-trash">
		<antcall target="build-service">
			<param name="service.file" value="${basedir}/src/com/liferay/portlet/trash/service.xml" />
		</antcall>
	</target>

	<target name="build-service-portlets">
		<antcall target="build-service-portlet-announcements" />
		<antcall target="build-service-portlet-asset" />
		<antcall target="build-service-portlet-blogs" />
		<antcall target="build-service-portlet-documentlibrary" />
		<antcall target="build-service-portlet-expando" />
		<antcall target="build-service-portlet-exportimport" />
		<antcall target="build-service-portlet-messageboards" />
		<antcall target="build-service-portlet-ratings" />
		<antcall target="build-service-portlet-social" />
		<antcall target="build-service-portlet-trash" />
	</target>

	<target name="build-services">
		<antcall target="build-service-counter" />
		<antcall target="build-service-portal" />
		<antcall target="build-service-portlets" />

		<gradle-execute dir="../modules" task="buildService" />
	</target>

	<target name="build-upgrade-table">
		<if>
			<not>
				<equals arg1="${upgrade.table.dir}" arg2="" />
			</not>
			<then>
				<antcall target="prepare-upgrade-table" />

				<path id="upgrade.table.builder.classpath">
					<fileset dir="${sdk.dir}/dependencies/com.liferay.portal.tools.upgrade.table.builder/lib" includes="*.jar" />
				</path>

				<java
					classname="com.liferay.portal.tools.upgrade.table.builder.UpgradeTableBuilder"
					classpathref="upgrade.table.builder.classpath"
					fork="true"
					newenvironment="true"
				>
					<arg value="upgrade.base.dir=." />
					<arg value="upgrade.osgi.module=false" />
					<arg value="upgrade.release.info.file=../portal-kernel/src/com/liferay/portal/kernel/util/ReleaseInfo.java" />
					<arg value="upgrade.table.dir=${upgrade.table.dir}" />
				</java>
			</then>
		</if>
	</target>

	<target depends="compile" name="build-wsdd">
		<path id="wsdd.builder.classpath">
			<fileset dir="${sdk.dir}/dependencies/com.liferay.portal.tools.wsdd.builder/lib" includes="*.jar" />
			<path refid="project.classpath" />
		</path>

		<java
			classname="com.liferay.portal.tools.wsdd.builder.WSDDBuilder"
			classpathref="wsdd.builder.classpath"
			fork="true"
			maxmemory="512m"
			newenvironment="true"
			outputproperty="build-wsdd.output"
		>
			<jvmarg value="-Dorg.apache.commons.logging.Log=org.apache.commons.logging.impl.Log4JLogger" />
			<arg value="wsdd.output.path=src/" />
			<arg value="wsdd.server.config.file=${basedir}/../portal-web/docroot/WEB-INF/server-config.wsdd" />
			<arg value="wsdd.service.namespace=Portlet" />
			<arg value="wsdd.input.file=${service.file}" />
		</java>

		<echo>${build-wsdd.output}</echo>

		<if>
			<contains string="${build-wsdd.output}" substring="IOException" />
			<then>
				<fail>WSDD Builder generated exceptions.</fail>
			</then>
		</if>
	</target>

	<target name="build-wsdd-portal">
		<antcall target="build-wsdd">
			<param name="service.file" value="${basedir}/src/com/liferay/portal/service.xml" />
		</antcall>
	</target>

	<target name="build-wsdd-portlet-announcements">
		<antcall target="build-wsdd">
			<param name="service.file" value="${basedir}/src/com/liferay/portlet/announcements/service.xml" />
		</antcall>
	</target>

	<target name="build-wsdd-portlet-asset">
		<antcall target="build-wsdd">
			<param name="service.file" value="${basedir}/src/com/liferay/portlet/asset/service.xml" />
		</antcall>
	</target>

	<target name="build-wsdd-portlet-blogs">
		<antcall target="build-wsdd">
			<param name="service.file" value="${basedir}/src/com/liferay/portlet/blogs/service.xml" />
		</antcall>
	</target>

	<target name="build-wsdd-portlet-calendar">
		<antcall target="build-wsdd">
			<param name="service.file" value="${basedir}/src/com/liferay/portlet/calendar/service.xml" />
		</antcall>
	</target>

	<target name="build-wsdd-portlet-documentlibrary">
		<antcall target="build-wsdd">
			<param name="service.file" value="${basedir}/src/com/liferay/portlet/documentlibrary/service.xml" />
		</antcall>
	</target>

	<target name="build-wsdd-portlet-expando">
		<antcall target="build-wsdd">
			<param name="service.file" value="${basedir}/src/com/liferay/portlet/expando/service.xml" />
		</antcall>
	</target>

	<target name="build-wsdd-portlet-exportimport">
		<antcall target="build-wsdd">
			<param name="service.file" value="${basedir}/src/com/liferay/portlet/exportimport/service.xml" />
		</antcall>
	</target>

	<target name="build-wsdd-portlet-messageboards">
		<antcall target="build-wsdd">
			<param name="service.file" value="${basedir}/src/com/liferay/portlet/messageboards/service.xml" />
		</antcall>
	</target>

	<target name="build-wsdd-portlet-ratings">
		<antcall target="build-wsdd">
			<param name="service.file" value="${basedir}/src/com/liferay/portlet/ratings/service.xml" />
		</antcall>
	</target>

	<target name="build-wsdd-portlet-social">
		<antcall target="build-wsdd">
			<param name="service.file" value="${basedir}/src/com/liferay/portlet/social/service.xml" />
		</antcall>
	</target>

	<target name="build-wsdd-portlet-trash">
		<antcall target="build-wsdd">
			<param name="service.file" value="${basedir}/src/com/liferay/portlet/trash/service.xml" />
		</antcall>
	</target>

	<target name="build-wsdd-portlets">
		<antcall target="build-wsdd-portlet-announcements" />
		<antcall target="build-wsdd-portlet-asset" />
		<antcall target="build-wsdd-portlet-blogs" />
		<antcall target="build-wsdd-portlet-documentlibrary" />
		<antcall target="build-wsdd-portlet-expando" />
		<antcall target="build-wsdd-portlet-exportimport" />
		<antcall target="build-wsdd-portlet-messageboards" />
		<antcall target="build-wsdd-portlet-ratings" />
		<antcall target="build-wsdd-portlet-social" />
		<antcall target="build-wsdd-portlet-trash" />
	</target>

	<target name="build-wsdds">
		<antcall target="build-wsdd-portal" />
		<antcall target="build-wsdd-portlets" />

		<gradle-execute dir="../modules" task="buildWSDD" />
	</target>

	<target name="build-yui-compressor-jar">
		<jarjar jarfile="${project.dir}/lib/portal/liferay-yui-compressor.jar.new">
			<rule pattern="org.mozilla.**" result="com.yahoo.platform.yui.mozilla.@1" />
			<zipfileset src="${project.dir}/tools/yuicompressor-2.4.7.jar" />
		</jarjar>
	</target>

	<target depends="build-common-java.clean" name="clean">
		<if>
			<and>
				<equals arg1="${app.server.type}" arg2="tomcat" />
				<antelope:endswith string="${app.server.portal.dir}" with="/portal-web/docroot" />
			</and>
			<then>
				<delete dir="${app.server.classes.portal.dir}" />
			</then>
		</if>
	</target>

	<target depends="build-common-java.compile,init-compile" name="compile">
		<print-current-time />
	</target>

	<target name="compile-test">
		<ant dir="${project.dir}/portal-kernel" inheritAll="false" target="compile-test" />

		<antcall target="build-common.compile-test" />
	</target>

	<target name="compile-tools">
		<compile-dependencies />

		<javac
			classpathref="project.classpath"
			compiler="${javac.compiler}"
			debug="${javac.debug}"
			deprecation="${javac.deprecation}"
			destdir="${portal-impl.classes.dir}"
			includeAntRuntime="false"
			includes="**/portal/tools/**"
			nowarn="${javac.nowarn}"
			srcdir="src"
		/>
	</target>

	<target depends="build-common-java.deploy" name="deploy" unless="deploy.uptodate">
		<ant dir="../portal-kernel" inheritAll="false" target="deploy" />

		<deploy-properties />

		<if>
			<and>
				<equals arg1="${app.server.type}" arg2="tomcat" />
				<antelope:endswith string="${app.server.portal.dir}" with="/portal-web/docroot" />
			</and>
			<then>
				<delete failonerror="false" file="${deploy.dir}/${jar.file}" />

				<unjar dest="${app.server.classes.portal.dir}" src="portal-impl.jar" />
			</then>
			<else>
				<copy file="${jar.file}.jar" preservelastmodified="true" todir="${deploy.dir}" />

				<copy file="classes/log4j.properties" preservelastmodified="true" todir="${app.server.classes.portal.dir}" />
				<copy file="classes/logging.properties" preservelastmodified="true" todir="${app.server.classes.portal.dir}" />
			</else>
		</if>
	</target>

	<target name="format-source">
		<path id="source.formatter.classpath">
			<fileset dir="${sdk.dir}/dependencies/com.liferay.source.formatter/lib" includes="*.jar" />
			<path refid="project.classpath" />
		</path>

		<if>
			<not>
				<isset property="source.formatter.dir" />
			</not>
			<then>
				<property name="source.formatter.dir" value="${project.dir}" />
			</then>
		</if>

		<java
			classname="com.liferay.source.formatter.SourceFormatter"
			classpathref="source.formatter.classpath"
			dir="${source.formatter.dir}"
			fork="true"
			newenvironment="true"
		>
			<jvmarg if:true="${jvm.debug}" value="${jpda.settings}" />
			<jvmarg value="-Xmx512m" />
			<jvmarg value="-Xss2048k" />
			<jvmarg value="-Dsource.formatter.check.registry.in.test.classes=${source.formatter.check.registry.in.test.classes}" />
			<jvmarg value="-Dsource.formatter.check.unprocessed.exceptions=${source.formatter.check.unprocessed.exceptions}" />
			<jvmarg value="-Dsource.formatter.excludes=${source.formatter.excludes}" />
			<arg value="format.current.branch=${format.current.branch}" />
			<arg value="format.latest.author=${format.latest.author}" />
			<arg value="format.local.changes=${format.local.changes}" />
			<arg value="git.working.branch.name=${git.working.branch.name}" />
			<arg value="max.line.length=${source.formatter.max.line.length}" />
			<arg value="processor.thread.count=${source.formatter.processor.thread.count}" />
			<arg value="source.auto.fix=${source.auto.fix}" />
			<arg value="source.base.dir=${source.base.dir}" />
			<arg value="source.copyright.file=${source.copyright.file}" />
			<arg value="source.files=${source.files}" />
			<arg value="source.print.errors=${source.print.errors}" />
			<arg value="source.throw.exception=${source.throw.exception}" />
			<arg value="source.use.properties=${source.use.properties}" />
		</java>

		<delete file="ServiceBuilder.temp" />
	</target>

	<target name="format-source-current-branch">
		<antcall target="format-source">
			<param name="format.current.branch" value="true" />
		</antcall>
	</target>

	<target name="format-source-latest-author">
		<antcall target="format-source">
			<param name="format.latest.author" value="true" />
		</antcall>
	</target>

	<target name="format-source-local-changes">
		<antcall target="format-source">
			<param name="format.local.changes" value="true" />
		</antcall>
	</target>

	<target name="format-tld">
		<path id="tld.formatter.classpath">
			<fileset dir="${sdk.dir}/dependencies/com.liferay.tld.formatter/lib" includes="*.jar" />
		</path>

		<java
			classname="com.liferay.tld.formatter.TLDFormatter"
			classpathref="tld.formatter.classpath"
			dir="${project.dir}"
			fork="true"
			newenvironment="true"
		>
			<arg value="tld.base.dir=./util-taglib/src/META-INF/" />
			<arg value="tld.plugin=false" />
		</java>

		<delete file="ServiceBuilder.temp" />
	</target>

	<target depends="build-common-java.init-compile" name="init-compile">
		<copy preservelastmodified="true" todir="${portal-impl.classes.dir}/com/liferay/portal/definitions">
			<fileset dir="${project.dir}/definitions" />
		</copy>

		<copy preservelastmodified="true" todir="${portal-impl.classes.dir}/com/liferay/portal/deploy/dependencies">
			<fileset
				dir="${project.dir}/classes"
				includes="*.properties"
			/>
			<fileset
				dir="${project.dir}/portal-web/docroot/WEB-INF/tld"
				includes="*.tld"
			/>
		</copy>

		<copy preservelastmodified="true" todir="${portal-impl.classes.dir}/com/liferay/portal/tools/sql/dependencies">
			<fileset
				dir="${project.dir}/sql"
				includes="portal-data-common.sql,portal-data-counter.sql,portal-data-release.sql,portal-tables.sql,indexes.properties,indexes.sql,sequences.sql,update-*.sql"
			/>
		</copy>

		<copy file="${project.dir}/classes/log4j.properties" preservelastmodified="true" todir="${portal-impl.classes.dir}" />
		<copy file="${project.dir}/classes/logging.properties" preservelastmodified="true" todir="${portal-impl.classes.dir}" />

		<copy preservelastmodified="true" todir="${portal-impl.classes.dir}">
			<fileset dir="src" excludes="**/*.java,**/META-INF/javadocs-all*.xml" />
		</copy>
	</target>

	<target depends="build-common-java.init-jar" name="init-jar">
		<ant dir="../util-bridges" inheritAll="false" target="jar" />
		<ant dir="../util-java" inheritAll="false" target="jar" />
		<ant dir="../util-taglib" inheritAll="false" target="jar" />

		<property name="portal.deploy.dependencies.dir" value="${portal-impl.classes.dir}/com/liferay/portal/deploy/dependencies" />

		<for list="1,2,3,4,5,6,7,8,9" param="index">
			<sequential>
				<if>
					<available file="${portal.deploy.dependencies.dir}/plugins@{index}" />
					<then>
						<fileset dir="${portal.deploy.dependencies.dir}/plugins@{index}" id="plugins@{index}.wars">
							<include name="*.war" />
						</fileset>

						<pathconvert pathsep="," property="plugins@{index}.wars.list" refid="plugins@{index}.wars">
							<flattenmapper />
						</pathconvert>

						<if>
							<not>
								<uptodate targetfile="${jar.file}.jar">
									<srcfiles dir="${portal.deploy.dependencies.dir}/plugins@{index}" includes="**/*.*" />
								</uptodate>
							</not>
							<then>
								<echo file="${portal.deploy.dependencies.dir}/plugins@{index}/wars.txt">${plugins@{index}.wars.list}</echo>
							</then>
						</if>
					</then>
				</if>
			</sequential>
		</for>
	</target>

	<target name="prepare-upgrade-table">
		<for param="zip.file">
			<path>
				<fileset
					dir="${upgrade.table.dir}"
					includes="*.zip"
				/>
			</path>
			<sequential>
				<antelope:stringutil property="zip.version.beginindex" string="@{zip.file}">
					<indexof fromindex="0" string="src-" />
				</antelope:stringutil>

				<math
					datatype="int"
					operand1="${zip.version.beginindex}"
					operand2="4"
					operation="+"
					result="zip.version.beginindex"
				/>

				<antelope:stringutil property="zip.version.endindex" string="@{zip.file}">
					<indexof fromindex="0" string=".zip" />
				</antelope:stringutil>

				<antelope:stringutil property="zip.version" string="@{zip.file}">
					<substring beginindex="${zip.version.beginindex}" endindex="${zip.version.endindex}" />
				</antelope:stringutil>

				<if>
					<or>
						<not>
							<uptodate
								srcfile="@{zip.file}"
								targetfile="${upgrade.table.dir}/${zip.version}"
							/>
						</not>
						<not>
							<available file="${upgrade.table.dir}/${zip.version}/indexes.sql" />
						</not>
					</or>
					<then>
						<mkdir dir="${upgrade.table.dir}/${zip.version}" />

						<unzip
							dest="${upgrade.table.dir}/${zip.version}"
							src="@{zip.file}"
						>
							<patternset>
								<include name="**/*ModelImpl.java" />
								<include name="**/sql/indexes.sql" />
							</patternset>
							<mapper type="flatten" />
						</unzip>
					</then>
				</if>
			</sequential>
		</for>
	</target>

	<target name="rebuild-hypersonic">
		<ant dir="../sql" target="rebuild-hypersonic" />
	</target>

	<target name="sync-plugins-git-to-svn">
		<java
			classname="com.liferay.portal.tools.PluginsGitSvnSyncer"
			classpathref="project.classpath"
			fork="true"
			newenvironment="true"
		>
			<jvmarg value="-Dgit.plugins.dir=L:/projects/github/liferay-plugins" />
			<jvmarg value="-Dsvn.plugins.dir=L:/projects/liferay.public/plugins/trunk" />
			<jvmarg value="-Dsync.to=svn" />
		</java>
	</target>

	<target name="sync-plugins-svn-to-git">
		<java
			classname="com.liferay.portal.tools.PluginsGitSvnSyncer"
			classpathref="project.classpath"
			newenvironment="true"
			fork="true"
		>
			<jvmarg value="-Dgit.plugins.dir=L:/projects/github/liferay-plugins" />
			<jvmarg value="-Dsvn.plugins.dir=L:/projects/liferay.public/plugins/trunk" />
			<jvmarg value="-Dsync.to=git" />
		</java>
	</target>

	<target name="tcpmon">
		<java
			classname="org.apache.axis.utils.tcpmon"
			classpathref="project.classpath"
			fork="true"
			newenvironment="true"
		>
			<jvmarg value="-Xmx128m" />
		</java>
	</target>

	<target name="update-from-plugins-test-pacl-portlet">

		<!-- Copy Java files -->

		<copy overwrite="true" todir="test/integration/com/liferay/portal/security/pacl/test">
			<fileset
				dir="${lp.plugins.dir}/portlets/test-pacl-portlet/docroot/WEB-INF/src/com/liferay/testpacl"
				includes="hook/**,messaging/**"
			/>
			<filterchain>
				<tokenfilter>
					<replacestring from="com.liferay.testpacl" to="com.liferay.portal.security.pacl.test" />
				</tokenfilter>
			</filterchain>
		</copy>

		<!-- Update TestPACLMessageListener.java -->

		<replace file="test/integration/com/liferay/portal/security/pacl/test/messaging/TestPACLMessageListener.java">
			<replacetoken><![CDATA[import com.liferay.portal.security.pacl.test.util.TestPACLUtil;]]></replacetoken>
			<replacevalue><![CDATA[import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.service.PortalServiceUtil;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.test.util.TestPropsValues;

import java.util.HashMap;]]></replacevalue>
		</replace>

		<replace file="test/integration/com/liferay/portal/security/pacl/test/messaging/TestPACLMessageListener.java">
			<replacetoken><![CDATA[protected Map<String, Boolean> getResults(Message message) {]]></replacetoken>
			<replacevalue><![CDATA[protected Map<String, Object> getResults(Message message) throws Exception {
		Map<String, Object> results = new HashMap<String, Object>();

		try {
			int buildNumber = PortalServiceUtil.getBuildNumber();

			results.put("PortalServiceUtil#getBuildNumber", buildNumber);
		}
		catch (SecurityException se) {
		}

		try {
			User user = UserLocalServiceUtil.getUser(
				TestPropsValues.getUserId());

			results.put("UserLocalServiceUtil#getUser", user);
		}
		catch (SecurityException se) {
		}

		return results;
	}]]></replacevalue>
		</replace>

		<replaceregexp
			flags="s"
			file="test/integration/com/liferay/portal/security/pacl/test/messaging/TestPACLMessageListener.java"
			match="long userId = (.*)"
			replace="${line.separator}}"
		/>

		<!-- Copy WEB-INF files -->

		<copy overwrite="true" todir="test/integration/com/liferay/portal/security/pacl/test/dependencies">
			<fileset
				dir="${lp.plugins.dir}/portlets/test-pacl-portlet/docroot"
				includes="WEB-INF/liferay-hook.xml,WEB-INF/liferay-plugin-package.properties"
			/>
			<filterchain>
				<tokenfilter>
					<replacestring from="com.liferay.testpacl" to="com.liferay.portal.security.pacl.test" />
				</tokenfilter>
			</filterchain>
		</copy>

		<!-- Update liferay-plugin-package.properties -->

		<replace file="test/integration/com/liferay/portal/security/pacl/test/dependencies/WEB-INF/liferay-plugin-package.properties">
			<replacetoken>Test Portal Access Control List</replacetoken>
			<replacevalue>A Test</replacevalue>
		</replace>

		<replaceregexp
			flags="g"
			file="test/integration/com/liferay/portal/security/pacl/test/dependencies/WEB-INF/liferay-plugin-package.properties"
			match="(portal-dependency-jars|portal-dependency-tlds|required-deployment-contexts)=(\\\n[^\\\n]+)*\n\n"
			replace=""
		/>

		<replace file="test/integration/com/liferay/portal/security/pacl/test/dependencies/WEB-INF/liferay-plugin-package.properties">
			<replacetoken>security-manager-enabled=true</replacetoken>
			<replacevalue>security-manager-enabled=true

security-manager-awt-operations=\
    accessEventQueue</replacevalue>
		</replace>

		<replaceregexp
			flags="g"
			file="test/integration/com/liferay/portal/security/pacl/test/dependencies/WEB-INF/liferay-plugin-package.properties"
			match="security-manager-files-(delete|execute|write)=(\\\n[^\\\n]+)*(?=\n\n)"
			replace="security-manager-files-\1="
		/>

		<replace file="test/integration/com/liferay/portal/security/pacl/test/dependencies/WEB-INF/liferay-plugin-package.properties">
			<replacetoken>security-manager-files-delete=</replacetoken>
			<replacevalue>security-manager-files-delete=\
    ${liferay.home}${/}pacl-test${/}-</replacevalue>
		</replace>

		<replaceregexp
			flags="g"
			file="test/integration/com/liferay/portal/security/pacl/test/dependencies/WEB-INF/liferay-plugin-package.properties"
			match="security-manager-files-read=(\\\n[^\\\n]+)*(\\\n\s*\\)(?=\n[ ]{4}/bin/bash)"
			replace="security-manager-files-read=\2"
		/>

		<replace file="test/integration/com/liferay/portal/security/pacl/test/dependencies/WEB-INF/liferay-plugin-package.properties">
			<replacetoken>security-manager-files-read=</replacetoken>
			<replacevalue>security-manager-files-read=\
    ${env:JAVA_HOME}${/},\
    ${java.home}${/}bin${/}java,\
    ${java.home}${/}bin${/}java.exe,\
    ${liferay.home}${/}pacl-test${/},\
    ${liferay.home}${/}pacl-test${/}-,</replacevalue>
		</replace>

		<replace file="test/integration/com/liferay/portal/security/pacl/test/dependencies/WEB-INF/liferay-plugin-package.properties">
			<replacetoken>security-manager-files-write=</replacetoken>
			<replacevalue>security-manager-files-write=\
    ${liferay.home}${/}pacl-test${/},\
    ${liferay.home}${/}pacl-test${/}-</replacevalue>
		</replace>

		<replace file="test/integration/com/liferay/portal/security/pacl/test/dependencies/WEB-INF/liferay-plugin-package.properties">
			<replacetoken>security-manager-get-bean-property[portal]=</replacetoken>
			<replacevalue>security-manager-get-bean-property=</replacevalue>
		</replace>

		<replaceregexp
			flags="g"
			file="test/integration/com/liferay/portal/security/pacl/test/dependencies/WEB-INF/liferay-plugin-package.properties"
			match="(security-manager-get-bean-property=)([\s\S]*?)(,\\\n[ ]{4})(?=com.liferay.portal.kernel.util.PortalUtil)"
			replace="\1\2\3com.liferay.portal.kernel.util.InfrastructureUtil\3"
		/>

		<replace file="test/integration/com/liferay/portal/security/pacl/test/dependencies/WEB-INF/liferay-plugin-package.properties">
			<replacetoken>security-manager-hook-custom-jsp-dir-enabled=false</replacetoken>
			<replacevalue>security-manager-get-bean-property[portal]=\
    com.liferay.portal.kernel.xml.SAXReader

security-manager-get-bean-property[flash-portlet]=\
    com.liferay.portal.kernel.bean.PortletBeanLocatorUtil#liferayDataSource

security-manager-hook-custom-jsp-dir-enabled=false</replacevalue>
		</replace>

		<replaceregexp
			flags="g"
			file="test/integration/com/liferay/portal/security/pacl/test/dependencies/WEB-INF/liferay-plugin-package.properties"
			match="(security-manager-services\[portal\]=)([\s\S]*?)(,\\\n[ ]{4})(?=com.liferay.portal.kernel.service.ResourceLocalService)"
			replace="\1\2\3com.liferay.portal.kernel.service.PortletPreferencesLocalService#getStrictPreferences\3com.liferay.portal.kernel.service.UserLocalService#getDefaultUser\3"
		/>

		<replace file="test/integration/com/liferay/portal/security/pacl/test/dependencies/WEB-INF/liferay-plugin-package.properties">
			<replacetoken>security-manager-sockets-accept=\</replacetoken>
			<replacevalue>security-manager-set-bean-property[flash-portlet]=\
    com.liferay.portal.kernel.bean.PortletBeanLocatorUtil

security-manager-sockets-accept=\</replacevalue>
		</replace>

		<!-- Copy WEB-INF/classes files -->

		<copy overwrite="true" todir="test/integration/com/liferay/portal/security/pacl/test/dependencies/WEB-INF/classes">
			<fileset
				dir="${lp.plugins.dir}/portlets/test-pacl-portlet/docroot/WEB-INF/src"
				includes="portal.properties,content/**,META-INF/base-spring.xml,META-INF/hibernate-spring.xml,META-INF/infrastructure-spring.xml,META-INF/messaging-spring.xml"
			/>
			<filterchain>
				<tokenfilter>
					<replacestring from="com.liferay.testpacl" to="com.liferay.portal.security.pacl.test" />
				</tokenfilter>
			</filterchain>
		</copy>

		<!-- Update hibernate-spring.xml -->

		<replace file="test/integration/com/liferay/portal/security/pacl/test/dependencies/WEB-INF/classes/META-INF/hibernate-spring.xml">
			<replacetoken><![CDATA[<bean class="com.liferay.portal.kernel.spring.util.SpringFactoryUtil" factory-method="newBean" id="liferayHibernateSessionFactory">]]></replacetoken>
			<replacevalue><![CDATA[<bean class="com.liferay.portal.spring.hibernate.PortletHibernateConfiguration" id="liferayHibernateSessionFactory">
		<property name="dataSource" ref="liferayDataSource" />
	</bean>]]></replacevalue>
		</replace>

		<replaceregexp
			flags="s"
			file="test/integration/com/liferay/portal/security/pacl/test/dependencies/WEB-INF/classes/META-INF/hibernate-spring.xml"
			match="&lt;/bean(.*)&lt;bean id=&quot;liferaySessionFactory"
			replace="&lt;/bean>${line.separator}&#x9;&lt;bean id=&quot;liferaySessionFactory"
		/>
	</target>

	<target name="upgrade-db">
		<java
			classname="com.liferay.portal.tools.DBUpgrader"
			classpathref="project.classpath"
			fork="true"
			maxmemory="1024m"
			newenvironment="true"
		>
			<jvmarg value="-Dfile.encoding=UTF-8" />
			<jvmarg value="-Duser.country=US" />
			<jvmarg value="-Duser.language=en" />
			<jvmarg value="-Duser.timezone=GMT" />
		</java>
	</target>
</project>