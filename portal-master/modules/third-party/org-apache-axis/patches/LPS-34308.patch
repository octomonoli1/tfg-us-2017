diff --git a/org/apache/axis/AxisEngine.java b/org/apache/axis/AxisEngine.java
index 4cffe6c..56406ce 100644
--- a/org/apache/axis/AxisEngine.java
+++ b/org/apache/axis/AxisEngine.java
@@ -518,7 +518,12 @@ public abstract class AxisEngine extends BasicHandler
      * @return the class cache
      */
     public ClassCache getClassCache() {
+        // liferay: initialize cache if null
+        if (classCache == null) {
+            classCache = new ClassCache();
+        }
         return classCache;
     }
 
 }
+/* @generated */
\ No newline at end of file
diff --git a/org/apache/axis/description/JavaServiceDesc.java b/org/apache/axis/description/JavaServiceDesc.java
index b5c0b40..ba25268 100644
--- a/org/apache/axis/description/JavaServiceDesc.java
+++ b/org/apache/axis/description/JavaServiceDesc.java
@@ -381,6 +381,7 @@ public class JavaServiceDesc implements ServiceDesc {
     {
         operations.add(operation);
         operation.setParent(this);
+        // liferay init map if null
         if (name2OperationsMap == null) {
             name2OperationsMap = new HashMap();
         }
@@ -645,6 +646,11 @@ public class JavaServiceDesc implements ServiceDesc {
         
         for (int i = 0; i < methods.length; i++) {
             Method method = methods[i];
+
+            if (method2OperationMap == null) {
+                method2OperationMap = new HashMap();
+            }
+
             if (Modifier.isPublic(method.getModifiers()) &&
                     method.getName().equals(oper.getName()) &&
                     method2OperationMap.get(method) == null) {
@@ -1485,3 +1491,4 @@ public class JavaServiceDesc implements ServiceDesc {
         return implClass != null;
     }
 }
+/* @generated */
\ No newline at end of file
