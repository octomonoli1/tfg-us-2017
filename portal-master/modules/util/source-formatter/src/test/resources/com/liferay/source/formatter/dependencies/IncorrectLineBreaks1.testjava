/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.source.formatter.dependencies;

import com.liferay.portal.kernel.util.StringUtil;

import java.util.Arrays;
import java.util.Comparator;

/**
 * @author Hugo Huijser
 */
public class IncorrectLineBreaks1 {

	public void method1() {
		String thisIsAStringWithAVeryVeryVeryLongName = "";

		String thisIsAStringWithAVeryVeryVeryLongName2
			= thisIsAStringWithAVeryVeryVeryLongName;

		String test = "";

		if ((test == null) || StringUtil.contains(
				thisIsAStringWithAVeryVeryVeryLongName, test)) {

			test = thisIsAStringWithAVeryVeryVeryLongName;
		}

		boolean b = StringUtil.contains(
			StringUtil.replace(
				"Hello World", "Hello", "World"), "Hello World Hello World");

		boolean b1 = StringUtil.contains(
			"Hello World Hello World Hello World " +
				"Hello World Hello World Hello World", "Hello");

		String test2 = thisIsAStringWithAVeryVeryVeryLongName +
			thisIsAStringWithAVeryVeryVeryLongName2;

		String test3 = "Hello" + StringUtil.trim(
			thisIsAStringWithAVeryVeryVeryLongName);

		boolean booleanWithAVeryVeryVeryVeryVeryVeryLongName = StringUtil.
			contains(test2, test3);

		boolean booleanWithAVeryVeryVeryVeryVeryVeryLongName = StringUtil
			.contains(test2, test3);
	}

	public void method2(String test1, String test2, String test3) throws
		Exception {

		if (test1.equals(test2)) {
			System.out.println(test1);
		} else if (test1.equals("Hello World Hello World") ||
			test1.equals("World Hello World Hello")) {

			System.out.println(test2);
		} else {
			System.out.println(test3);
		}
	}

	public void method3(String testStringName1, String testStringName2,
			String[] testStringNames)
		throws Exception {

		methodWithASlightlyLongerName(testStringName1, testStringName2,
			testStringNames);
	}

	public void method4() {
		for (String number : _NUMBERS) {
			if (number !=
					null) {

				return;
			}
		}
	}

	public void method5() {
		String[] stringArray = new String[] {"One", "Two", "Three"};

		Arrays.sort(
			stringArray, new Comparator<String>() {

				@Override
				public int compare(String s1, String s2) {
					return s1.compareTo(s2);
				}

			});

		int i = StringUtil.lastIndexOfAny(
			"Hello",
			new String[] {
				"One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight"
			}, 5);
	}

	public void method6(
		String testStringName1, String testStringName2, String testStringName3,
		String testStringName4) throws Exception {

		return;
	}

	public void methodWithASlightlyLongerName(
		String test1, String test2, String[] testStringArray) throws Exception {

		for (String testStringWithAVeryVeryVeryVeryVeryVeryVeryLongName :
				testStringArray) {

			continue;
		}
	}

	private static final String[] _NUMBERS =
		new String[] {
			"One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight",
			"Nine", "Ten"
		};

}