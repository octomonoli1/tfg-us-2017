/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.source.formatter.dependencies;

import com.liferay.portal.kernel.json.JSONFactoryUtil;
import com.liferay.portal.kernel.json.JSONObject;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.kernel.util.StringUtil;

/**
 * @author Hugo Huijser
 */
public class FormatJSONObject {

	public JSONObject getRandomJSONObject() {
		JSONObject randomJSONObject = JSONFactoryUtil.createJSONObject();

		randomJSONObject.put(
			"hello",
			StringUtil.replace(
				"Hello World Hello World Hello World", "Hello", "World"));
		randomJSONObject.put("hello-world", "Hello-World");
		randomJSONObject.put(
			"helloworldhelloworldhelloworldhelloworldhelloworldhelloworld",
			StringUtil.lowerCase("HelloWorldHelloWorld"));
		randomJSONObject.put("world", "World");

		return randomJSONObject;
	}

	public JSONObject getUserJSONObject(User user) {
		JSONObject jsonObject = JSONFactoryUtil.createJSONObject();

		jsonObject.put("comments", user.getComments());
		jsonObject.put("digest", user.getDigest());
		jsonObject.put("displayEmailAddress", user.getDisplayEmailAddress());
		jsonObject.put("emailAddress", user.getEmailAddress());
		jsonObject.put(
			"fullName",
			user.getFirstName() + StringPool.SPACE + user.getMiddleName() +
				StringPool.SPACE + user.getLastName());
		jsonObject.put("reminderQueryAnswer", user.getReminderQueryAnswer());
		jsonObject.put(
			"reminderQueryQuestion", user.getReminderQueryQuestion());

		return jsonObject;
	}

}