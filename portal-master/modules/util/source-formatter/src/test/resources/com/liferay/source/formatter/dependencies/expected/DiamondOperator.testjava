/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.source.formatter.dependencies;

import java.lang.annotation.Annotation;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.concurrent.ConcurrentHashMap;

/**
 * @author Hugo Huijser
 */
public class DiamondOperator {

	public Set<Class<? extends Annotation>> getAnnotationClasses() {
		Set<Class<? extends Annotation>> annotationClasses = new HashSet<>();

		return annotationClasses;
	}

	public List<String> getList() {
		return _list;
	}

	public Map<Locale, String> getLocalesMap() {
		return new HashMap<>();
	}

	public Map<Long, Map<String, Map<String, String[]>>> getMap() {
		_map = new ConcurrentHashMap<>();

		return _map;
	}

	public Map<String, Object> getObjectMap() {
		Map<String, Object> objectMap = new HashMap<>();

		return objectMap;
	}

	private final List<String> _list = new ArrayList<>();
	private Map<Long, Map<String, Map<String, String[]>>> _map;

}