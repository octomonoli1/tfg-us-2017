/* @generated */package com.liferay.sass.compiler.jni.internal.libsass;
import java.util.Collections;
import java.util.Iterator;
import org.bridj.BridJ;
import org.bridj.CRuntime;
import org.bridj.Callback;
import org.bridj.FlagSet;
import org.bridj.IntValuedEnum;
import org.bridj.Pointer;
import org.bridj.TypedPointer;
import org.bridj.ann.Library;
import org.bridj.ann.Name;
import org.bridj.ann.Ptr;
import org.bridj.ann.Runtime;
import org.bridj.util.DefaultParameterizedType;
/**
 * Wrapper for library <b>liferaysass</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("liferaysass") 
@Runtime(CRuntime.class) 
public class LiferaysassLibrary {
	static {
		BridJ.register();
	}
	/**
	 * Different render styles<br>
	 * enum values<br>
	 * <i>native declaration : ./sass/base.h:37</i>
	 */
	public enum Sass_Output_Style implements IntValuedEnum<Sass_Output_Style > {
		SASS_STYLE_NESTED(0),
		SASS_STYLE_EXPANDED(1),
		SASS_STYLE_COMPACT(2),
		SASS_STYLE_COMPRESSED(3),
		SASS_STYLE_INSPECT(4),
		SASS_STYLE_TO_SASS(5);
		Sass_Output_Style(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<Sass_Output_Style > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static IntValuedEnum<Sass_Output_Style > fromValue(int value) {
			return FlagSet.fromValue(value, values());
		}
	};
	/**
	 * Type for Sass values<br>
	 * enum values<br>
	 * <i>native declaration : ./sass/values.h:11</i>
	 */
	public enum Sass_Tag implements IntValuedEnum<Sass_Tag > {
		SASS_BOOLEAN(0),
		SASS_NUMBER(1),
		SASS_COLOR(2),
		SASS_STRING(3),
		SASS_LIST(4),
		SASS_MAP(5),
		SASS_NULL(6),
		SASS_ERROR(7),
		SASS_WARNING(8);
		Sass_Tag(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<Sass_Tag > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static IntValuedEnum<Sass_Tag > fromValue(int value) {
			return FlagSet.fromValue(value, values());
		}
	};
	/**
	 * Tags for denoting Sass list separators<br>
	 * enum values<br>
	 * <i>native declaration : ./sass/values.h:24</i>
	 */
	public enum Sass_Separator implements IntValuedEnum<Sass_Separator > {
		SASS_COMMA(0),
		SASS_SPACE(1),
		SASS_HASH(2);
		Sass_Separator(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<Sass_Separator > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static IntValuedEnum<Sass_Separator > fromValue(int value) {
			return FlagSet.fromValue(value, values());
		}
	};
	/**
	 * Value Operators<br>
	 * enum values<br>
	 * <i>native declaration : ./sass/values.h:31</i>
	 */
	public enum Sass_OP implements IntValuedEnum<Sass_OP > {
		/** logical connectives */
		AND(0),
		/** logical connectives */
		OR(1),
		/** arithmetic relations */
		EQ(2),
		/** arithmetic relations */
		NEQ(3),
		/** arithmetic relations */
		GT(4),
		/** arithmetic relations */
		GTE(5),
		/** arithmetic relations */
		LT(6),
		/** arithmetic relations */
		LTE(7),
		/** arithmetic functions */
		ADD(8),
		/** arithmetic functions */
		SUB(9),
		/** arithmetic functions */
		MUL(10),
		/** arithmetic functions */
		DIV(11),
		/** arithmetic functions */
		MOD(12),
		/** so we know how big to make the op table */
		NUM_OPS(13);
		Sass_OP(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<Sass_OP > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static IntValuedEnum<Sass_OP > fromValue(int value) {
			return FlagSet.fromValue(value, values());
		}
	};
	/**
	 * Compiler states<br>
	 * enum values<br>
	 * <i>native declaration : sass/context.h:24</i>
	 */
	public enum Sass_Compiler_State implements IntValuedEnum<Sass_Compiler_State > {
		SASS_COMPILER_CREATED(0),
		SASS_COMPILER_PARSED(1),
		SASS_COMPILER_EXECUTED(2);
		Sass_Compiler_State(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<Sass_Compiler_State > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static IntValuedEnum<Sass_Compiler_State > fromValue(int value) {
			return FlagSet.fromValue(value, values());
		}
	};
	/** <i>native declaration : ./sass/functions.h</i> */
	public static abstract class Sass_Importer_Fn extends Callback<Sass_Importer_Fn > {
		public Pointer<Pointer<LiferaysassLibrary.Sass_Import > > apply(Pointer<Byte > url, LiferaysassLibrary.Sass_Importer_Entry cb, Pointer<LiferaysassLibrary.Sass_Compiler > compiler) {
			return (Pointer)Pointer.pointerToAddress(apply(Pointer.getPeer(url), Pointer.getPeer(cb), Pointer.getPeer(compiler)), DefaultParameterizedType.paramType(Pointer.class, LiferaysassLibrary.Sass_Import.class));
		}
		@Ptr 
		public long apply(@Ptr long url, @Ptr long cb, @Ptr long compiler) {
			return Pointer.getPeer(apply((Pointer)Pointer.pointerToAddress(url, Byte.class), new LiferaysassLibrary.Sass_Importer_Entry(cb), (Pointer)Pointer.pointerToAddress(compiler, LiferaysassLibrary.Sass_Compiler.class)));
		}
	};
	/** <i>native declaration : ./sass/functions.h</i> */
	public static abstract class Sass_Function_Fn extends Callback<Sass_Function_Fn > {
		public Pointer<LiferaysassLibrary.Sass_Value > apply(Pointer<LiferaysassLibrary.Sass_Value > Sass_ValuePtr1, LiferaysassLibrary.Sass_Function_Entry cb, Pointer<LiferaysassLibrary.Sass_Compiler > compiler) {
			return (Pointer)Pointer.pointerToAddress(apply(Pointer.getPeer(Sass_ValuePtr1), Pointer.getPeer(cb), Pointer.getPeer(compiler)), LiferaysassLibrary.Sass_Value.class);
		}
		@Ptr 
		public long apply(@Ptr long Sass_ValuePtr1, @Ptr long cb, @Ptr long compiler) {
			return Pointer.getPeer(apply((Pointer)Pointer.pointerToAddress(Sass_ValuePtr1, LiferaysassLibrary.Sass_Value.class), new LiferaysassLibrary.Sass_Function_Entry(cb), (Pointer)Pointer.pointerToAddress(compiler, LiferaysassLibrary.Sass_Compiler.class)));
		}
	};
	/**
	 * to allocate buffer to be filled<br>
	 * Original signature : <code>void* sass_alloc_memory(size_t)</code><br>
	 * <i>native declaration : ./sass/base.h:48</i>
	 */
	@Name("sass_alloc_memory") 
	public static Pointer<? > sassAllocMemory(@Ptr long size) {
		return Pointer.pointerToAddress(sassAllocMemory$2(size));
	}
	@Name("sass_alloc_memory") 
	@Ptr 
	protected native static long sassAllocMemory$2(@Ptr long size);
	/**
	 * to allocate a buffer from existing string<br>
	 * Original signature : <code>char* sass_copy_c_string(const char*)</code><br>
	 * <i>native declaration : ./sass/base.h:50</i>
	 */
	@Name("sass_copy_c_string") 
	public static Pointer<Byte > sassCopyCString(Pointer<Byte > str) {
		return (Pointer)Pointer.pointerToAddress(sassCopyCString(Pointer.getPeer(str)), Byte.class);
	}
	@Name("sass_copy_c_string") 
	@Ptr 
	protected native static long sassCopyCString(@Ptr long str);
	/**
	 * to free overtaken memory when done<br>
	 * Original signature : <code>void sass_free_memory(void*)</code><br>
	 * <i>native declaration : ./sass/base.h:52</i>
	 */
	@Name("sass_free_memory") 
	public static void sassFreeMemory(Pointer<? > ptr) {
		sassFreeMemory(Pointer.getPeer(ptr));
	}
	@Name("sass_free_memory") 
	protected native static void sassFreeMemory(@Ptr long ptr);
	/**
	 * Some convenient string helper function<br>
	 * Original signature : <code>char* sass_string_quote(const char*, const char)</code><br>
	 * <i>native declaration : ./sass/base.h:55</i>
	 */
	@Name("sass_string_quote") 
	public static Pointer<Byte > sassStringQuote(Pointer<Byte > str, byte quote_mark) {
		return (Pointer)Pointer.pointerToAddress(sassStringQuote(Pointer.getPeer(str), quote_mark), Byte.class);
	}
	@Name("sass_string_quote") 
	@Ptr 
	protected native static long sassStringQuote(@Ptr long str, byte quote_mark);
	/**
	 * Original signature : <code>char* sass_string_unquote(const char*)</code><br>
	 * <i>native declaration : ./sass/base.h:56</i>
	 */
	@Name("sass_string_unquote") 
	public static Pointer<Byte > sassStringUnquote(Pointer<Byte > str) {
		return (Pointer)Pointer.pointerToAddress(sassStringUnquote(Pointer.getPeer(str)), Byte.class);
	}
	@Name("sass_string_unquote") 
	@Ptr 
	protected native static long sassStringUnquote(@Ptr long str);
	/**
	 * Resolve a file via the given include paths in the include char* array<br>
	 * Original signature : <code>char* sass_resolve_file(const char*, const char*[])</code><br>
	 * <i>native declaration : ./sass/base.h:59</i>
	 */
	@Name("sass_resolve_file") 
	public static Pointer<Byte > sassResolveFile(Pointer<Byte > path, Pointer<Pointer<Byte > > incs) {
		return (Pointer)Pointer.pointerToAddress(sassResolveFile(Pointer.getPeer(path), Pointer.getPeer(incs)), Byte.class);
	}
	@Name("sass_resolve_file") 
	@Ptr 
	protected native static long sassResolveFile(@Ptr long path, @Ptr long incs);
	/**
	 * Get compiled libsass version<br>
	 * Original signature : <code>char* libsass_version()</code><br>
	 * <i>native declaration : ./sass/base.h:62</i>
	 */
	@Name("libsass_version") 
	public static Pointer<Byte > libsassVersion() {
		return (Pointer)Pointer.pointerToAddress(libsassVersion$2(), Byte.class);
	}
	@Name("libsass_version") 
	@Ptr 
	protected native static long libsassVersion$2();
	/**
	 * Get compiled libsass language<br>
	 * Original signature : <code>char* libsass_language_version()</code><br>
	 * <i>native declaration : ./sass/base.h:65</i>
	 */
	@Name("libsass_language_version") 
	public static Pointer<Byte > libsassLanguageVersion() {
		return (Pointer)Pointer.pointerToAddress(libsassLanguageVersion$2(), Byte.class);
	}
	@Name("libsass_language_version") 
	@Ptr 
	protected native static long libsassLanguageVersion$2();
	/**
	 * Check is needed before accessing specific values!<br>
	 * Original signature : <code>Sass_Tag sass_value_get_tag(Sass_Value*)</code><br>
	 * <i>native declaration : ./sass/values.h:40</i>
	 */
	@Name("sass_value_get_tag") 
	public static IntValuedEnum<LiferaysassLibrary.Sass_Tag > sassValueGetTag(Pointer<LiferaysassLibrary.Sass_Value > v) {
		return FlagSet.fromValue(sassValueGetTag(Pointer.getPeer(v)), LiferaysassLibrary.Sass_Tag.class);
	}
	@Name("sass_value_get_tag") 
	protected native static int sassValueGetTag(@Ptr long v);
	/**
	 * Can also be used before accessing properties!<br>
	 * Original signature : <code>bool sass_value_is_null(Sass_Value*)</code><br>
	 * <i>native declaration : ./sass/values.h:44</i>
	 */
	@Name("sass_value_is_null") 
	public static boolean sassValueIsNull(Pointer<LiferaysassLibrary.Sass_Value > v) {
		return sassValueIsNull(Pointer.getPeer(v));
	}
	@Name("sass_value_is_null") 
	protected native static boolean sassValueIsNull(@Ptr long v);
	/**
	 * Original signature : <code>bool sass_value_is_number(Sass_Value*)</code><br>
	 * <i>native declaration : ./sass/values.h:45</i>
	 */
	@Name("sass_value_is_number") 
	public static boolean sassValueIsNumber(Pointer<LiferaysassLibrary.Sass_Value > v) {
		return sassValueIsNumber(Pointer.getPeer(v));
	}
	@Name("sass_value_is_number") 
	protected native static boolean sassValueIsNumber(@Ptr long v);
	/**
	 * Original signature : <code>bool sass_value_is_string(Sass_Value*)</code><br>
	 * <i>native declaration : ./sass/values.h:46</i>
	 */
	@Name("sass_value_is_string") 
	public static boolean sassValueIsString(Pointer<LiferaysassLibrary.Sass_Value > v) {
		return sassValueIsString(Pointer.getPeer(v));
	}
	@Name("sass_value_is_string") 
	protected native static boolean sassValueIsString(@Ptr long v);
	/**
	 * Original signature : <code>bool sass_value_is_boolean(Sass_Value*)</code><br>
	 * <i>native declaration : ./sass/values.h:47</i>
	 */
	@Name("sass_value_is_boolean") 
	public static boolean sassValueIsBoolean(Pointer<LiferaysassLibrary.Sass_Value > v) {
		return sassValueIsBoolean(Pointer.getPeer(v));
	}
	@Name("sass_value_is_boolean") 
	protected native static boolean sassValueIsBoolean(@Ptr long v);
	/**
	 * Original signature : <code>bool sass_value_is_color(Sass_Value*)</code><br>
	 * <i>native declaration : ./sass/values.h:48</i>
	 */
	@Name("sass_value_is_color") 
	public static boolean sassValueIsColor(Pointer<LiferaysassLibrary.Sass_Value > v) {
		return sassValueIsColor(Pointer.getPeer(v));
	}
	@Name("sass_value_is_color") 
	protected native static boolean sassValueIsColor(@Ptr long v);
	/**
	 * Original signature : <code>bool sass_value_is_list(Sass_Value*)</code><br>
	 * <i>native declaration : ./sass/values.h:49</i>
	 */
	@Name("sass_value_is_list") 
	public static boolean sassValueIsList(Pointer<LiferaysassLibrary.Sass_Value > v) {
		return sassValueIsList(Pointer.getPeer(v));
	}
	@Name("sass_value_is_list") 
	protected native static boolean sassValueIsList(@Ptr long v);
	/**
	 * Original signature : <code>bool sass_value_is_map(Sass_Value*)</code><br>
	 * <i>native declaration : ./sass/values.h:50</i>
	 */
	@Name("sass_value_is_map") 
	public static boolean sassValueIsMap(Pointer<LiferaysassLibrary.Sass_Value > v) {
		return sassValueIsMap(Pointer.getPeer(v));
	}
	@Name("sass_value_is_map") 
	protected native static boolean sassValueIsMap(@Ptr long v);
	/**
	 * Original signature : <code>bool sass_value_is_error(Sass_Value*)</code><br>
	 * <i>native declaration : ./sass/values.h:51</i>
	 */
	@Name("sass_value_is_error") 
	public static boolean sassValueIsError(Pointer<LiferaysassLibrary.Sass_Value > v) {
		return sassValueIsError(Pointer.getPeer(v));
	}
	@Name("sass_value_is_error") 
	protected native static boolean sassValueIsError(@Ptr long v);
	/**
	 * Original signature : <code>bool sass_value_is_warning(Sass_Value*)</code><br>
	 * <i>native declaration : ./sass/values.h:52</i>
	 */
	@Name("sass_value_is_warning") 
	public static boolean sassValueIsWarning(Pointer<LiferaysassLibrary.Sass_Value > v) {
		return sassValueIsWarning(Pointer.getPeer(v));
	}
	@Name("sass_value_is_warning") 
	protected native static boolean sassValueIsWarning(@Ptr long v);
	/**
	 * Getters and setters for Sass_Number<br>
	 * Original signature : <code>double sass_number_get_value(Sass_Value*)</code><br>
	 * <i>native declaration : ./sass/values.h:55</i>
	 */
	@Name("sass_number_get_value") 
	public static double sassNumberGetValue(Pointer<LiferaysassLibrary.Sass_Value > v) {
		return sassNumberGetValue(Pointer.getPeer(v));
	}
	@Name("sass_number_get_value") 
	protected native static double sassNumberGetValue(@Ptr long v);
	/**
	 * Original signature : <code>void sass_number_set_value(Sass_Value*, double)</code><br>
	 * <i>native declaration : ./sass/values.h:56</i>
	 */
	@Name("sass_number_set_value") 
	public static void sassNumberSetValue(Pointer<LiferaysassLibrary.Sass_Value > v, double value) {
		sassNumberSetValue(Pointer.getPeer(v), value);
	}
	@Name("sass_number_set_value") 
	protected native static void sassNumberSetValue(@Ptr long v, double value);
	/**
	 * Original signature : <code>char* sass_number_get_unit(Sass_Value*)</code><br>
	 * <i>native declaration : ./sass/values.h:57</i>
	 */
	@Name("sass_number_get_unit") 
	public static Pointer<Byte > sassNumberGetUnit(Pointer<LiferaysassLibrary.Sass_Value > v) {
		return (Pointer)Pointer.pointerToAddress(sassNumberGetUnit(Pointer.getPeer(v)), Byte.class);
	}
	@Name("sass_number_get_unit") 
	@Ptr 
	protected native static long sassNumberGetUnit(@Ptr long v);
	/**
	 * Original signature : <code>void sass_number_set_unit(Sass_Value*, char*)</code><br>
	 * <i>native declaration : ./sass/values.h:58</i>
	 */
	@Name("sass_number_set_unit") 
	public static void sassNumberSetUnit(Pointer<LiferaysassLibrary.Sass_Value > v, Pointer<Byte > unit) {
		sassNumberSetUnit(Pointer.getPeer(v), Pointer.getPeer(unit));
	}
	@Name("sass_number_set_unit") 
	protected native static void sassNumberSetUnit(@Ptr long v, @Ptr long unit);
	/**
	 * Getters and setters for Sass_String<br>
	 * Original signature : <code>char* sass_string_get_value(Sass_Value*)</code><br>
	 * <i>native declaration : ./sass/values.h:61</i>
	 */
	@Name("sass_string_get_value") 
	public static Pointer<Byte > sassStringGetValue(Pointer<LiferaysassLibrary.Sass_Value > v) {
		return (Pointer)Pointer.pointerToAddress(sassStringGetValue(Pointer.getPeer(v)), Byte.class);
	}
	@Name("sass_string_get_value") 
	@Ptr 
	protected native static long sassStringGetValue(@Ptr long v);
	/**
	 * Original signature : <code>void sass_string_set_value(Sass_Value*, char*)</code><br>
	 * <i>native declaration : ./sass/values.h:62</i>
	 */
	@Name("sass_string_set_value") 
	public static void sassStringSetValue(Pointer<LiferaysassLibrary.Sass_Value > v, Pointer<Byte > value) {
		sassStringSetValue(Pointer.getPeer(v), Pointer.getPeer(value));
	}
	@Name("sass_string_set_value") 
	protected native static void sassStringSetValue(@Ptr long v, @Ptr long value);
	/**
	 * Original signature : <code>bool sass_string_is_quoted(Sass_Value*)</code><br>
	 * <i>native declaration : ./sass/values.h:63</i>
	 */
	@Name("sass_string_is_quoted") 
	public static boolean sassStringIsQuoted(Pointer<LiferaysassLibrary.Sass_Value > v) {
		return sassStringIsQuoted(Pointer.getPeer(v));
	}
	@Name("sass_string_is_quoted") 
	protected native static boolean sassStringIsQuoted(@Ptr long v);
	/**
	 * Original signature : <code>void sass_string_set_quoted(Sass_Value*, bool)</code><br>
	 * <i>native declaration : ./sass/values.h:64</i>
	 */
	@Name("sass_string_set_quoted") 
	public static void sassStringSetQuoted(Pointer<LiferaysassLibrary.Sass_Value > v, boolean quoted) {
		sassStringSetQuoted(Pointer.getPeer(v), quoted);
	}
	@Name("sass_string_set_quoted") 
	protected native static void sassStringSetQuoted(@Ptr long v, boolean quoted);
	/**
	 * Getters and setters for Sass_Boolean<br>
	 * Original signature : <code>bool sass_boolean_get_value(Sass_Value*)</code><br>
	 * <i>native declaration : ./sass/values.h:67</i>
	 */
	@Name("sass_boolean_get_value") 
	public static boolean sassBooleanGetValue(Pointer<LiferaysassLibrary.Sass_Value > v) {
		return sassBooleanGetValue(Pointer.getPeer(v));
	}
	@Name("sass_boolean_get_value") 
	protected native static boolean sassBooleanGetValue(@Ptr long v);
	/**
	 * Original signature : <code>void sass_boolean_set_value(Sass_Value*, bool)</code><br>
	 * <i>native declaration : ./sass/values.h:68</i>
	 */
	@Name("sass_boolean_set_value") 
	public static void sassBooleanSetValue(Pointer<LiferaysassLibrary.Sass_Value > v, boolean value) {
		sassBooleanSetValue(Pointer.getPeer(v), value);
	}
	@Name("sass_boolean_set_value") 
	protected native static void sassBooleanSetValue(@Ptr long v, boolean value);
	/**
	 * Getters and setters for Sass_Color<br>
	 * Original signature : <code>double sass_color_get_r(Sass_Value*)</code><br>
	 * <i>native declaration : ./sass/values.h:71</i>
	 */
	@Name("sass_color_get_r") 
	public static double sassColorGetR(Pointer<LiferaysassLibrary.Sass_Value > v) {
		return sassColorGetR(Pointer.getPeer(v));
	}
	@Name("sass_color_get_r") 
	protected native static double sassColorGetR(@Ptr long v);
	/**
	 * Original signature : <code>void sass_color_set_r(Sass_Value*, double)</code><br>
	 * <i>native declaration : ./sass/values.h:72</i>
	 */
	@Name("sass_color_set_r") 
	public static void sassColorSetR(Pointer<LiferaysassLibrary.Sass_Value > v, double r) {
		sassColorSetR(Pointer.getPeer(v), r);
	}
	@Name("sass_color_set_r") 
	protected native static void sassColorSetR(@Ptr long v, double r);
	/**
	 * Original signature : <code>double sass_color_get_g(Sass_Value*)</code><br>
	 * <i>native declaration : ./sass/values.h:73</i>
	 */
	@Name("sass_color_get_g") 
	public static double sassColorGetG(Pointer<LiferaysassLibrary.Sass_Value > v) {
		return sassColorGetG(Pointer.getPeer(v));
	}
	@Name("sass_color_get_g") 
	protected native static double sassColorGetG(@Ptr long v);
	/**
	 * Original signature : <code>void sass_color_set_g(Sass_Value*, double)</code><br>
	 * <i>native declaration : ./sass/values.h:74</i>
	 */
	@Name("sass_color_set_g") 
	public static void sassColorSetG(Pointer<LiferaysassLibrary.Sass_Value > v, double g) {
		sassColorSetG(Pointer.getPeer(v), g);
	}
	@Name("sass_color_set_g") 
	protected native static void sassColorSetG(@Ptr long v, double g);
	/**
	 * Original signature : <code>double sass_color_get_b(Sass_Value*)</code><br>
	 * <i>native declaration : ./sass/values.h:75</i>
	 */
	@Name("sass_color_get_b") 
	public static double sassColorGetB(Pointer<LiferaysassLibrary.Sass_Value > v) {
		return sassColorGetB(Pointer.getPeer(v));
	}
	@Name("sass_color_get_b") 
	protected native static double sassColorGetB(@Ptr long v);
	/**
	 * Original signature : <code>void sass_color_set_b(Sass_Value*, double)</code><br>
	 * <i>native declaration : ./sass/values.h:76</i>
	 */
	@Name("sass_color_set_b") 
	public static void sassColorSetB(Pointer<LiferaysassLibrary.Sass_Value > v, double b) {
		sassColorSetB(Pointer.getPeer(v), b);
	}
	@Name("sass_color_set_b") 
	protected native static void sassColorSetB(@Ptr long v, double b);
	/**
	 * Original signature : <code>double sass_color_get_a(Sass_Value*)</code><br>
	 * <i>native declaration : ./sass/values.h:77</i>
	 */
	@Name("sass_color_get_a") 
	public static double sassColorGetA(Pointer<LiferaysassLibrary.Sass_Value > v) {
		return sassColorGetA(Pointer.getPeer(v));
	}
	@Name("sass_color_get_a") 
	protected native static double sassColorGetA(@Ptr long v);
	/**
	 * Original signature : <code>void sass_color_set_a(Sass_Value*, double)</code><br>
	 * <i>native declaration : ./sass/values.h:78</i>
	 */
	@Name("sass_color_set_a") 
	public static void sassColorSetA(Pointer<LiferaysassLibrary.Sass_Value > v, double a) {
		sassColorSetA(Pointer.getPeer(v), a);
	}
	@Name("sass_color_set_a") 
	protected native static void sassColorSetA(@Ptr long v, double a);
	/**
	 * Getter for the number of items in list<br>
	 * Original signature : <code>size_t sass_list_get_length(Sass_Value*)</code><br>
	 * <i>native declaration : ./sass/values.h:81</i>
	 */
	@Name("sass_list_get_length") 
	@Ptr 
	public static long sassListGetLength(Pointer<LiferaysassLibrary.Sass_Value > v) {
		return sassListGetLength(Pointer.getPeer(v));
	}
	@Name("sass_list_get_length") 
	@Ptr 
	protected native static long sassListGetLength(@Ptr long v);
	/**
	 * Getters and setters for Sass_List<br>
	 * Original signature : <code>Sass_Separator sass_list_get_separator(Sass_Value*)</code><br>
	 * <i>native declaration : ./sass/values.h:83</i>
	 */
	@Name("sass_list_get_separator") 
	public static IntValuedEnum<LiferaysassLibrary.Sass_Separator > sassListGetSeparator(Pointer<LiferaysassLibrary.Sass_Value > v) {
		return FlagSet.fromValue(sassListGetSeparator(Pointer.getPeer(v)), LiferaysassLibrary.Sass_Separator.class);
	}
	@Name("sass_list_get_separator") 
	protected native static int sassListGetSeparator(@Ptr long v);
	/**
	 * Original signature : <code>void sass_list_set_separator(Sass_Value*, Sass_Separator)</code><br>
	 * <i>native declaration : ./sass/values.h:84</i>
	 */
	@Name("sass_list_set_separator") 
	public static void sassListSetSeparator(Pointer<LiferaysassLibrary.Sass_Value > v, IntValuedEnum<LiferaysassLibrary.Sass_Separator > value) {
		sassListSetSeparator(Pointer.getPeer(v), (int)value.value());
	}
	@Name("sass_list_set_separator") 
	protected native static void sassListSetSeparator(@Ptr long v, int value);
	/**
	 * Getters and setters for Sass_List values<br>
	 * Original signature : <code>Sass_Value* sass_list_get_value(Sass_Value*, size_t)</code><br>
	 * <i>native declaration : ./sass/values.h:86</i>
	 */
	@Name("sass_list_get_value") 
	public static Pointer<LiferaysassLibrary.Sass_Value > sassListGetValue(Pointer<LiferaysassLibrary.Sass_Value > v, @Ptr long i) {
		return (Pointer)Pointer.pointerToAddress(sassListGetValue(Pointer.getPeer(v), i), LiferaysassLibrary.Sass_Value.class);
	}
	@Name("sass_list_get_value") 
	@Ptr 
	protected native static long sassListGetValue(@Ptr long v, @Ptr long i);
	/**
	 * Original signature : <code>void sass_list_set_value(Sass_Value*, size_t, Sass_Value*)</code><br>
	 * <i>native declaration : ./sass/values.h:87</i>
	 */
	@Name("sass_list_set_value") 
	public static void sassListSetValue(Pointer<LiferaysassLibrary.Sass_Value > v, @Ptr long i, Pointer<LiferaysassLibrary.Sass_Value > value) {
		sassListSetValue(Pointer.getPeer(v), i, Pointer.getPeer(value));
	}
	@Name("sass_list_set_value") 
	protected native static void sassListSetValue(@Ptr long v, @Ptr long i, @Ptr long value);
	/**
	 * Getter for the number of items in map<br>
	 * Original signature : <code>size_t sass_map_get_length(Sass_Value*)</code><br>
	 * <i>native declaration : ./sass/values.h:90</i>
	 */
	@Name("sass_map_get_length") 
	@Ptr 
	public static long sassMapGetLength(Pointer<LiferaysassLibrary.Sass_Value > v) {
		return sassMapGetLength(Pointer.getPeer(v));
	}
	@Name("sass_map_get_length") 
	@Ptr 
	protected native static long sassMapGetLength(@Ptr long v);
	/**
	 * Getters and setters for Sass_Map keys and values<br>
	 * Original signature : <code>Sass_Value* sass_map_get_key(Sass_Value*, size_t)</code><br>
	 * <i>native declaration : ./sass/values.h:92</i>
	 */
	@Name("sass_map_get_key") 
	public static Pointer<LiferaysassLibrary.Sass_Value > sassMapGetKey(Pointer<LiferaysassLibrary.Sass_Value > v, @Ptr long i) {
		return (Pointer)Pointer.pointerToAddress(sassMapGetKey(Pointer.getPeer(v), i), LiferaysassLibrary.Sass_Value.class);
	}
	@Name("sass_map_get_key") 
	@Ptr 
	protected native static long sassMapGetKey(@Ptr long v, @Ptr long i);
	/**
	 * Original signature : <code>void sass_map_set_key(Sass_Value*, size_t, Sass_Value*)</code><br>
	 * <i>native declaration : ./sass/values.h:93</i>
	 */
	@Name("sass_map_set_key") 
	public static void sassMapSetKey(Pointer<LiferaysassLibrary.Sass_Value > v, @Ptr long i, Pointer<LiferaysassLibrary.Sass_Value > Sass_ValuePtr1) {
		sassMapSetKey(Pointer.getPeer(v), i, Pointer.getPeer(Sass_ValuePtr1));
	}
	@Name("sass_map_set_key") 
	protected native static void sassMapSetKey(@Ptr long v, @Ptr long i, @Ptr long Sass_ValuePtr1);
	/**
	 * Original signature : <code>Sass_Value* sass_map_get_value(Sass_Value*, size_t)</code><br>
	 * <i>native declaration : ./sass/values.h:94</i>
	 */
	@Name("sass_map_get_value") 
	public static Pointer<LiferaysassLibrary.Sass_Value > sassMapGetValue(Pointer<LiferaysassLibrary.Sass_Value > v, @Ptr long i) {
		return (Pointer)Pointer.pointerToAddress(sassMapGetValue(Pointer.getPeer(v), i), LiferaysassLibrary.Sass_Value.class);
	}
	@Name("sass_map_get_value") 
	@Ptr 
	protected native static long sassMapGetValue(@Ptr long v, @Ptr long i);
	/**
	 * Original signature : <code>void sass_map_set_value(Sass_Value*, size_t, Sass_Value*)</code><br>
	 * <i>native declaration : ./sass/values.h:95</i>
	 */
	@Name("sass_map_set_value") 
	public static void sassMapSetValue(Pointer<LiferaysassLibrary.Sass_Value > v, @Ptr long i, Pointer<LiferaysassLibrary.Sass_Value > Sass_ValuePtr1) {
		sassMapSetValue(Pointer.getPeer(v), i, Pointer.getPeer(Sass_ValuePtr1));
	}
	@Name("sass_map_set_value") 
	protected native static void sassMapSetValue(@Ptr long v, @Ptr long i, @Ptr long Sass_ValuePtr1);
	/**
	 * Getters and setters for Sass_Error<br>
	 * Original signature : <code>char* sass_error_get_message(Sass_Value*)</code><br>
	 * <i>native declaration : ./sass/values.h:98</i>
	 */
	@Name("sass_error_get_message") 
	public static Pointer<Byte > sassErrorGetMessage(Pointer<LiferaysassLibrary.Sass_Value > v) {
		return (Pointer)Pointer.pointerToAddress(sassErrorGetMessage(Pointer.getPeer(v)), Byte.class);
	}
	@Name("sass_error_get_message") 
	@Ptr 
	protected native static long sassErrorGetMessage(@Ptr long v);
	/**
	 * Original signature : <code>void sass_error_set_message(Sass_Value*, char*)</code><br>
	 * <i>native declaration : ./sass/values.h:99</i>
	 */
	@Name("sass_error_set_message") 
	public static void sassErrorSetMessage(Pointer<LiferaysassLibrary.Sass_Value > v, Pointer<Byte > msg) {
		sassErrorSetMessage(Pointer.getPeer(v), Pointer.getPeer(msg));
	}
	@Name("sass_error_set_message") 
	protected native static void sassErrorSetMessage(@Ptr long v, @Ptr long msg);
	/**
	 * Getters and setters for Sass_Warning<br>
	 * Original signature : <code>char* sass_warning_get_message(Sass_Value*)</code><br>
	 * <i>native declaration : ./sass/values.h:102</i>
	 */
	@Name("sass_warning_get_message") 
	public static Pointer<Byte > sassWarningGetMessage(Pointer<LiferaysassLibrary.Sass_Value > v) {
		return (Pointer)Pointer.pointerToAddress(sassWarningGetMessage(Pointer.getPeer(v)), Byte.class);
	}
	@Name("sass_warning_get_message") 
	@Ptr 
	protected native static long sassWarningGetMessage(@Ptr long v);
	/**
	 * Original signature : <code>void sass_warning_set_message(Sass_Value*, char*)</code><br>
	 * <i>native declaration : ./sass/values.h:103</i>
	 */
	@Name("sass_warning_set_message") 
	public static void sassWarningSetMessage(Pointer<LiferaysassLibrary.Sass_Value > v, Pointer<Byte > msg) {
		sassWarningSetMessage(Pointer.getPeer(v), Pointer.getPeer(msg));
	}
	@Name("sass_warning_set_message") 
	protected native static void sassWarningSetMessage(@Ptr long v, @Ptr long msg);
	/**
	 * Creator functions for all value types<br>
	 * Original signature : <code>Sass_Value* sass_make_null()</code><br>
	 * <i>native declaration : ./sass/values.h:106</i>
	 */
	@Name("sass_make_null") 
	public static Pointer<LiferaysassLibrary.Sass_Value > sassMakeNull() {
		return (Pointer)Pointer.pointerToAddress(sassMakeNull$2(), LiferaysassLibrary.Sass_Value.class);
	}
	@Name("sass_make_null") 
	@Ptr 
	protected native static long sassMakeNull$2();
	/**
	 * Original signature : <code>Sass_Value* sass_make_boolean(bool)</code><br>
	 * <i>native declaration : ./sass/values.h:107</i>
	 */
	@Name("sass_make_boolean") 
	public static Pointer<LiferaysassLibrary.Sass_Value > sassMakeBoolean(boolean val) {
		return (Pointer)Pointer.pointerToAddress(sassMakeBoolean$2(val), LiferaysassLibrary.Sass_Value.class);
	}
	@Name("sass_make_boolean") 
	@Ptr 
	protected native static long sassMakeBoolean$2(boolean val);
	/**
	 * Original signature : <code>Sass_Value* sass_make_string(const char*)</code><br>
	 * <i>native declaration : ./sass/values.h:108</i>
	 */
	@Name("sass_make_string") 
	public static Pointer<LiferaysassLibrary.Sass_Value > sassMakeString(Pointer<Byte > val) {
		return (Pointer)Pointer.pointerToAddress(sassMakeString(Pointer.getPeer(val)), LiferaysassLibrary.Sass_Value.class);
	}
	@Name("sass_make_string") 
	@Ptr 
	protected native static long sassMakeString(@Ptr long val);
	/**
	 * Original signature : <code>Sass_Value* sass_make_qstring(const char*)</code><br>
	 * <i>native declaration : ./sass/values.h:109</i>
	 */
	@Name("sass_make_qstring") 
	public static Pointer<LiferaysassLibrary.Sass_Value > sassMakeQstring(Pointer<Byte > val) {
		return (Pointer)Pointer.pointerToAddress(sassMakeQstring(Pointer.getPeer(val)), LiferaysassLibrary.Sass_Value.class);
	}
	@Name("sass_make_qstring") 
	@Ptr 
	protected native static long sassMakeQstring(@Ptr long val);
	/**
	 * Original signature : <code>Sass_Value* sass_make_number(double, const char*)</code><br>
	 * <i>native declaration : ./sass/values.h:110</i>
	 */
	@Name("sass_make_number") 
	public static Pointer<LiferaysassLibrary.Sass_Value > sassMakeNumber(double val, Pointer<Byte > unit) {
		return (Pointer)Pointer.pointerToAddress(sassMakeNumber(val, Pointer.getPeer(unit)), LiferaysassLibrary.Sass_Value.class);
	}
	@Name("sass_make_number") 
	@Ptr 
	protected native static long sassMakeNumber(double val, @Ptr long unit);
	/**
	 * Original signature : <code>Sass_Value* sass_make_color(double, double, double, double)</code><br>
	 * <i>native declaration : ./sass/values.h:111</i>
	 */
	@Name("sass_make_color") 
	public static Pointer<LiferaysassLibrary.Sass_Value > sassMakeColor(double r, double g, double b, double a) {
		return (Pointer)Pointer.pointerToAddress(sassMakeColor$2(r, g, b, a), LiferaysassLibrary.Sass_Value.class);
	}
	@Name("sass_make_color") 
	@Ptr 
	protected native static long sassMakeColor$2(double r, double g, double b, double a);
	/**
	 * Original signature : <code>Sass_Value* sass_make_list(size_t, Sass_Separator)</code><br>
	 * <i>native declaration : ./sass/values.h:112</i>
	 */
	@Name("sass_make_list") 
	public static Pointer<LiferaysassLibrary.Sass_Value > sassMakeList(@Ptr long len, IntValuedEnum<LiferaysassLibrary.Sass_Separator > sep) {
		return (Pointer)Pointer.pointerToAddress(sassMakeList(len, (int)sep.value()), LiferaysassLibrary.Sass_Value.class);
	}
	@Name("sass_make_list") 
	@Ptr 
	protected native static long sassMakeList(@Ptr long len, int sep);
	/**
	 * Original signature : <code>Sass_Value* sass_make_map(size_t)</code><br>
	 * <i>native declaration : ./sass/values.h:113</i>
	 */
	@Name("sass_make_map") 
	public static Pointer<LiferaysassLibrary.Sass_Value > sassMakeMap(@Ptr long len) {
		return (Pointer)Pointer.pointerToAddress(sassMakeMap$2(len), LiferaysassLibrary.Sass_Value.class);
	}
	@Name("sass_make_map") 
	@Ptr 
	protected native static long sassMakeMap$2(@Ptr long len);
	/**
	 * Original signature : <code>Sass_Value* sass_make_error(const char*)</code><br>
	 * <i>native declaration : ./sass/values.h:114</i>
	 */
	@Name("sass_make_error") 
	public static Pointer<LiferaysassLibrary.Sass_Value > sassMakeError(Pointer<Byte > msg) {
		return (Pointer)Pointer.pointerToAddress(sassMakeError(Pointer.getPeer(msg)), LiferaysassLibrary.Sass_Value.class);
	}
	@Name("sass_make_error") 
	@Ptr 
	protected native static long sassMakeError(@Ptr long msg);
	/**
	 * Original signature : <code>Sass_Value* sass_make_warning(const char*)</code><br>
	 * <i>native declaration : ./sass/values.h:115</i>
	 */
	@Name("sass_make_warning") 
	public static Pointer<LiferaysassLibrary.Sass_Value > sassMakeWarning(Pointer<Byte > msg) {
		return (Pointer)Pointer.pointerToAddress(sassMakeWarning(Pointer.getPeer(msg)), LiferaysassLibrary.Sass_Value.class);
	}
	@Name("sass_make_warning") 
	@Ptr 
	protected native static long sassMakeWarning(@Ptr long msg);
	/**
	 * Means we will delete recursively for lists and maps<br>
	 * Original signature : <code>void sass_delete_value(Sass_Value*)</code><br>
	 * <i>native declaration : ./sass/values.h:120</i>
	 */
	@Name("sass_delete_value") 
	public static void sassDeleteValue(Pointer<LiferaysassLibrary.Sass_Value > val) {
		sassDeleteValue(Pointer.getPeer(val));
	}
	@Name("sass_delete_value") 
	protected native static void sassDeleteValue(@Ptr long val);
	/**
	 * Make a deep cloned copy of the given sass value<br>
	 * Original signature : <code>Sass_Value* sass_clone_value(Sass_Value*)</code><br>
	 * <i>native declaration : ./sass/values.h:123</i>
	 */
	@Name("sass_clone_value") 
	public static Pointer<LiferaysassLibrary.Sass_Value > sassCloneValue(Pointer<LiferaysassLibrary.Sass_Value > val) {
		return (Pointer)Pointer.pointerToAddress(sassCloneValue(Pointer.getPeer(val)), LiferaysassLibrary.Sass_Value.class);
	}
	@Name("sass_clone_value") 
	@Ptr 
	protected native static long sassCloneValue(@Ptr long val);
	/**
	 * Stringify a Sass_Values and also return the result as a Sass_Value (of type STRING)<br>
	 * Original signature : <code>Sass_Value* sass_value_stringify(Sass_Value*, bool, int)</code><br>
	 * <i>native declaration : ./sass/values.h:126</i>
	 */
	@Name("sass_value_stringify") 
	public static Pointer<LiferaysassLibrary.Sass_Value > sassValueStringify(Pointer<LiferaysassLibrary.Sass_Value > a, boolean compressed, int precision) {
		return (Pointer)Pointer.pointerToAddress(sassValueStringify(Pointer.getPeer(a), compressed, precision), LiferaysassLibrary.Sass_Value.class);
	}
	@Name("sass_value_stringify") 
	@Ptr 
	protected native static long sassValueStringify(@Ptr long a, boolean compressed, int precision);
	/**
	 * Execute an operation for two Sass_Values and return the result as a Sass_Value too<br>
	 * Original signature : <code>Sass_Value* sass_value_op(Sass_OP, Sass_Value*, Sass_Value*)</code><br>
	 * <i>native declaration : ./sass/values.h:129</i>
	 */
	@Name("sass_value_op") 
	public static Pointer<LiferaysassLibrary.Sass_Value > sassValueOp(IntValuedEnum<LiferaysassLibrary.Sass_OP > op, Pointer<LiferaysassLibrary.Sass_Value > a, Pointer<LiferaysassLibrary.Sass_Value > b) {
		return (Pointer)Pointer.pointerToAddress(sassValueOp((int)op.value(), Pointer.getPeer(a), Pointer.getPeer(b)), LiferaysassLibrary.Sass_Value.class);
	}
	@Name("sass_value_op") 
	@Ptr 
	protected native static long sassValueOp(int op, @Ptr long a, @Ptr long b);
	/**
	 * Creator for sass custom importer return argument list<br>
	 * Original signature : <code>Sass_Importer_List sass_make_importer_list(size_t)</code><br>
	 * <i>native declaration : ./sass/functions.h:33</i>
	 */
	@Name("sass_make_importer_list") 
	public static Pointer<Pointer<LiferaysassLibrary.Sass_Importer > > sassMakeImporterList(@Ptr long length) {
		return (Pointer)Pointer.pointerToAddress(sassMakeImporterList$2(length), DefaultParameterizedType.paramType(Pointer.class, LiferaysassLibrary.Sass_Importer.class));
	}
	@Name("sass_make_importer_list") 
	@Ptr 
	protected native static long sassMakeImporterList$2(@Ptr long length);
	/**
	 * Original signature : <code>Sass_Importer_Entry sass_importer_get_list_entry(Sass_Importer_List, size_t)</code><br>
	 * <i>native declaration : ./sass/functions.h:34</i>
	 */
	@Name("sass_importer_get_list_entry") 
	public static LiferaysassLibrary.Sass_Importer_Entry sassImporterGetListEntry(Pointer<Pointer<LiferaysassLibrary.Sass_Importer > > list, @Ptr long idx) {
		return new LiferaysassLibrary.Sass_Importer_Entry(sassImporterGetListEntry(Pointer.getPeer(list), idx));
	}
	@Name("sass_importer_get_list_entry") 
	@Ptr 
	protected native static long sassImporterGetListEntry(@Ptr long list, @Ptr long idx);
	/**
	 * Original signature : <code>void sass_importer_set_list_entry(Sass_Importer_List, size_t, Sass_Importer_Entry)</code><br>
	 * <i>native declaration : ./sass/functions.h:35</i>
	 */
	@Name("sass_importer_set_list_entry") 
	public static void sassImporterSetListEntry(Pointer<Pointer<LiferaysassLibrary.Sass_Importer > > list, @Ptr long idx, LiferaysassLibrary.Sass_Importer_Entry entry) {
		sassImporterSetListEntry(Pointer.getPeer(list), idx, Pointer.getPeer(entry));
	}
	@Name("sass_importer_set_list_entry") 
	protected native static void sassImporterSetListEntry(@Ptr long list, @Ptr long idx, @Ptr long entry);
	/**
	 * The pointer is mostly used to store the callback into the actual binding<br>
	 * Original signature : <code>Sass_Importer_Entry sass_make_importer(Sass_Importer_Fn, double, void*)</code><br>
	 * <i>native declaration : ./sass/functions.h:40</i>
	 */
	@Name("sass_make_importer") 
	public static LiferaysassLibrary.Sass_Importer_Entry sassMakeImporter(Pointer<LiferaysassLibrary.Sass_Importer_Fn > importer, double priority, Pointer<? > cookie) {
		return new LiferaysassLibrary.Sass_Importer_Entry(sassMakeImporter(Pointer.getPeer(importer), priority, Pointer.getPeer(cookie)));
	}
	@Name("sass_make_importer") 
	@Ptr 
	protected native static long sassMakeImporter(@Ptr long importer, double priority, @Ptr long cookie);
	/**
	 * Getters for import function descriptors<br>
	 * Original signature : <code>Sass_Importer_Fn sass_importer_get_function(Sass_Importer_Entry)</code><br>
	 * <i>native declaration : ./sass/functions.h:43</i>
	 */
	@Name("sass_importer_get_function") 
	public static Pointer<LiferaysassLibrary.Sass_Importer_Fn > sassImporterGetFunction(LiferaysassLibrary.Sass_Importer_Entry cb) {
		return (Pointer)Pointer.pointerToAddress(sassImporterGetFunction(Pointer.getPeer(cb)), LiferaysassLibrary.Sass_Importer_Fn.class);
	}
	@Name("sass_importer_get_function") 
	@Ptr 
	protected native static long sassImporterGetFunction(@Ptr long cb);
	/**
	 * Original signature : <code>double sass_importer_get_priority(Sass_Importer_Entry)</code><br>
	 * <i>native declaration : ./sass/functions.h:44</i>
	 */
	@Name("sass_importer_get_priority") 
	public static double sassImporterGetPriority(LiferaysassLibrary.Sass_Importer_Entry cb) {
		return sassImporterGetPriority(Pointer.getPeer(cb));
	}
	@Name("sass_importer_get_priority") 
	protected native static double sassImporterGetPriority(@Ptr long cb);
	/**
	 * Original signature : <code>void* sass_importer_get_cookie(Sass_Importer_Entry)</code><br>
	 * <i>native declaration : ./sass/functions.h:45</i>
	 */
	@Name("sass_importer_get_cookie") 
	public static Pointer<? > sassImporterGetCookie(LiferaysassLibrary.Sass_Importer_Entry cb) {
		return Pointer.pointerToAddress(sassImporterGetCookie(Pointer.getPeer(cb)));
	}
	@Name("sass_importer_get_cookie") 
	@Ptr 
	protected native static long sassImporterGetCookie(@Ptr long cb);
	/**
	 * Deallocator for associated memory<br>
	 * Original signature : <code>void sass_delete_importer(Sass_Importer_Entry)</code><br>
	 * <i>native declaration : ./sass/functions.h:48</i>
	 */
	@Name("sass_delete_importer") 
	public static void sassDeleteImporter(LiferaysassLibrary.Sass_Importer_Entry cb) {
		sassDeleteImporter(Pointer.getPeer(cb));
	}
	@Name("sass_delete_importer") 
	protected native static void sassDeleteImporter(@Ptr long cb);
	/**
	 * Creator for sass custom importer return argument list<br>
	 * Original signature : <code>Sass_Import_List sass_make_import_list(size_t)</code><br>
	 * <i>native declaration : ./sass/functions.h:51</i>
	 */
	@Name("sass_make_import_list") 
	public static Pointer<Pointer<LiferaysassLibrary.Sass_Import > > sassMakeImportList(@Ptr long length) {
		return (Pointer)Pointer.pointerToAddress(sassMakeImportList$2(length), DefaultParameterizedType.paramType(Pointer.class, LiferaysassLibrary.Sass_Import.class));
	}
	@Name("sass_make_import_list") 
	@Ptr 
	protected native static long sassMakeImportList$2(@Ptr long length);
	/**
	 * Creator for a single import entry returned by the custom importer inside the list<br>
	 * Original signature : <code>Sass_Import_Entry sass_make_import_entry(const char*, char*, char*)</code><br>
	 * <i>native declaration : ./sass/functions.h:53</i>
	 */
	@Name("sass_make_import_entry") 
	public static LiferaysassLibrary.Sass_Import_Entry sassMakeImportEntry(Pointer<Byte > path, Pointer<Byte > source, Pointer<Byte > srcmap) {
		return new LiferaysassLibrary.Sass_Import_Entry(sassMakeImportEntry(Pointer.getPeer(path), Pointer.getPeer(source), Pointer.getPeer(srcmap)));
	}
	@Name("sass_make_import_entry") 
	@Ptr 
	protected native static long sassMakeImportEntry(@Ptr long path, @Ptr long source, @Ptr long srcmap);
	/**
	 * Original signature : <code>Sass_Import_Entry sass_make_import(const char*, const char*, char*, char*)</code><br>
	 * <i>native declaration : ./sass/functions.h:54</i>
	 */
	@Name("sass_make_import") 
	public static LiferaysassLibrary.Sass_Import_Entry sassMakeImport(Pointer<Byte > imp_path, Pointer<Byte > abs_base, Pointer<Byte > source, Pointer<Byte > srcmap) {
		return new LiferaysassLibrary.Sass_Import_Entry(sassMakeImport(Pointer.getPeer(imp_path), Pointer.getPeer(abs_base), Pointer.getPeer(source), Pointer.getPeer(srcmap)));
	}
	@Name("sass_make_import") 
	@Ptr 
	protected native static long sassMakeImport(@Ptr long imp_path, @Ptr long abs_base, @Ptr long source, @Ptr long srcmap);
	/**
	 * set error message to abort import and to print out a message (path from existing object is used in output)<br>
	 * Original signature : <code>Sass_Import_Entry sass_import_set_error(Sass_Import_Entry, const char*, size_t, size_t)</code><br>
	 * <i>native declaration : ./sass/functions.h:56</i>
	 */
	@Name("sass_import_set_error") 
	public static LiferaysassLibrary.Sass_Import_Entry sassImportSetError(LiferaysassLibrary.Sass_Import_Entry import$, Pointer<Byte > message, @Ptr long line, @Ptr long col) {
		return new LiferaysassLibrary.Sass_Import_Entry(sassImportSetError(Pointer.getPeer(import$), Pointer.getPeer(message), line, col));
	}
	@Name("sass_import_set_error") 
	@Ptr 
	protected native static long sassImportSetError(@Ptr long import$, @Ptr long message, @Ptr long line, @Ptr long col);
	/**
	 * Since we are dealing with pointers they should have a guaranteed and fixed size<br>
	 * Original signature : <code>void sass_import_set_list_entry(Sass_Import_List, size_t, Sass_Import_Entry)</code><br>
	 * <i>native declaration : ./sass/functions.h:60</i>
	 */
	@Name("sass_import_set_list_entry") 
	public static void sassImportSetListEntry(Pointer<Pointer<LiferaysassLibrary.Sass_Import > > list, @Ptr long idx, LiferaysassLibrary.Sass_Import_Entry entry) {
		sassImportSetListEntry(Pointer.getPeer(list), idx, Pointer.getPeer(entry));
	}
	@Name("sass_import_set_list_entry") 
	protected native static void sassImportSetListEntry(@Ptr long list, @Ptr long idx, @Ptr long entry);
	/**
	 * Original signature : <code>Sass_Import_Entry sass_import_get_list_entry(Sass_Import_List, size_t)</code><br>
	 * <i>native declaration : ./sass/functions.h:61</i>
	 */
	@Name("sass_import_get_list_entry") 
	public static LiferaysassLibrary.Sass_Import_Entry sassImportGetListEntry(Pointer<Pointer<LiferaysassLibrary.Sass_Import > > list, @Ptr long idx) {
		return new LiferaysassLibrary.Sass_Import_Entry(sassImportGetListEntry(Pointer.getPeer(list), idx));
	}
	@Name("sass_import_get_list_entry") 
	@Ptr 
	protected native static long sassImportGetListEntry(@Ptr long list, @Ptr long idx);
	/**
	 * Getters for import entry<br>
	 * Original signature : <code>char* sass_import_get_imp_path(Sass_Import_Entry)</code><br>
	 * <i>native declaration : ./sass/functions.h:64</i>
	 */
	@Name("sass_import_get_imp_path") 
	public static Pointer<Byte > sassImportGetImpPath(LiferaysassLibrary.Sass_Import_Entry Sass_Import_Entry1) {
		return (Pointer)Pointer.pointerToAddress(sassImportGetImpPath(Pointer.getPeer(Sass_Import_Entry1)), Byte.class);
	}
	@Name("sass_import_get_imp_path") 
	@Ptr 
	protected native static long sassImportGetImpPath(@Ptr long Sass_Import_Entry1);
	/**
	 * Original signature : <code>char* sass_import_get_abs_path(Sass_Import_Entry)</code><br>
	 * <i>native declaration : ./sass/functions.h:65</i>
	 */
	@Name("sass_import_get_abs_path") 
	public static Pointer<Byte > sassImportGetAbsPath(LiferaysassLibrary.Sass_Import_Entry Sass_Import_Entry1) {
		return (Pointer)Pointer.pointerToAddress(sassImportGetAbsPath(Pointer.getPeer(Sass_Import_Entry1)), Byte.class);
	}
	@Name("sass_import_get_abs_path") 
	@Ptr 
	protected native static long sassImportGetAbsPath(@Ptr long Sass_Import_Entry1);
	/**
	 * Original signature : <code>char* sass_import_get_source(Sass_Import_Entry)</code><br>
	 * <i>native declaration : ./sass/functions.h:66</i>
	 */
	@Name("sass_import_get_source") 
	public static Pointer<Byte > sassImportGetSource(LiferaysassLibrary.Sass_Import_Entry Sass_Import_Entry1) {
		return (Pointer)Pointer.pointerToAddress(sassImportGetSource(Pointer.getPeer(Sass_Import_Entry1)), Byte.class);
	}
	@Name("sass_import_get_source") 
	@Ptr 
	protected native static long sassImportGetSource(@Ptr long Sass_Import_Entry1);
	/**
	 * Original signature : <code>char* sass_import_get_srcmap(Sass_Import_Entry)</code><br>
	 * <i>native declaration : ./sass/functions.h:67</i>
	 */
	@Name("sass_import_get_srcmap") 
	public static Pointer<Byte > sassImportGetSrcmap(LiferaysassLibrary.Sass_Import_Entry Sass_Import_Entry1) {
		return (Pointer)Pointer.pointerToAddress(sassImportGetSrcmap(Pointer.getPeer(Sass_Import_Entry1)), Byte.class);
	}
	@Name("sass_import_get_srcmap") 
	@Ptr 
	protected native static long sassImportGetSrcmap(@Ptr long Sass_Import_Entry1);
	/**
	 * The property on our struct will be reset to NULL<br>
	 * Original signature : <code>char* sass_import_take_source(Sass_Import_Entry)</code><br>
	 * <i>native declaration : ./sass/functions.h:70</i>
	 */
	@Name("sass_import_take_source") 
	public static Pointer<Byte > sassImportTakeSource(LiferaysassLibrary.Sass_Import_Entry Sass_Import_Entry1) {
		return (Pointer)Pointer.pointerToAddress(sassImportTakeSource(Pointer.getPeer(Sass_Import_Entry1)), Byte.class);
	}
	@Name("sass_import_take_source") 
	@Ptr 
	protected native static long sassImportTakeSource(@Ptr long Sass_Import_Entry1);
	/**
	 * Original signature : <code>char* sass_import_take_srcmap(Sass_Import_Entry)</code><br>
	 * <i>native declaration : ./sass/functions.h:71</i>
	 */
	@Name("sass_import_take_srcmap") 
	public static Pointer<Byte > sassImportTakeSrcmap(LiferaysassLibrary.Sass_Import_Entry Sass_Import_Entry1) {
		return (Pointer)Pointer.pointerToAddress(sassImportTakeSrcmap(Pointer.getPeer(Sass_Import_Entry1)), Byte.class);
	}
	@Name("sass_import_take_srcmap") 
	@Ptr 
	protected native static long sassImportTakeSrcmap(@Ptr long Sass_Import_Entry1);
	/**
	 * Getters from import error entry<br>
	 * Original signature : <code>size_t sass_import_get_error_line(Sass_Import_Entry)</code><br>
	 * <i>native declaration : ./sass/functions.h:73</i>
	 */
	@Name("sass_import_get_error_line") 
	@Ptr 
	public static long sassImportGetErrorLine(LiferaysassLibrary.Sass_Import_Entry Sass_Import_Entry1) {
		return sassImportGetErrorLine(Pointer.getPeer(Sass_Import_Entry1));
	}
	@Name("sass_import_get_error_line") 
	@Ptr 
	protected native static long sassImportGetErrorLine(@Ptr long Sass_Import_Entry1);
	/**
	 * Original signature : <code>size_t sass_import_get_error_column(Sass_Import_Entry)</code><br>
	 * <i>native declaration : ./sass/functions.h:74</i>
	 */
	@Name("sass_import_get_error_column") 
	@Ptr 
	public static long sassImportGetErrorColumn(LiferaysassLibrary.Sass_Import_Entry Sass_Import_Entry1) {
		return sassImportGetErrorColumn(Pointer.getPeer(Sass_Import_Entry1));
	}
	@Name("sass_import_get_error_column") 
	@Ptr 
	protected native static long sassImportGetErrorColumn(@Ptr long Sass_Import_Entry1);
	/**
	 * Original signature : <code>char* sass_import_get_error_message(Sass_Import_Entry)</code><br>
	 * <i>native declaration : ./sass/functions.h:75</i>
	 */
	@Name("sass_import_get_error_message") 
	public static Pointer<Byte > sassImportGetErrorMessage(LiferaysassLibrary.Sass_Import_Entry Sass_Import_Entry1) {
		return (Pointer)Pointer.pointerToAddress(sassImportGetErrorMessage(Pointer.getPeer(Sass_Import_Entry1)), Byte.class);
	}
	@Name("sass_import_get_error_message") 
	@Ptr 
	protected native static long sassImportGetErrorMessage(@Ptr long Sass_Import_Entry1);
	/**
	 * Deallocator for associated memory (incl. entries)<br>
	 * Original signature : <code>void sass_delete_import_list(Sass_Import_List)</code><br>
	 * <i>native declaration : ./sass/functions.h:78</i>
	 */
	@Name("sass_delete_import_list") 
	public static void sassDeleteImportList(Pointer<Pointer<LiferaysassLibrary.Sass_Import > > Sass_Import_List1) {
		sassDeleteImportList(Pointer.getPeer(Sass_Import_List1));
	}
	@Name("sass_delete_import_list") 
	protected native static void sassDeleteImportList(@Ptr long Sass_Import_List1);
	/**
	 * Just in case we have some stray import structs<br>
	 * Original signature : <code>void sass_delete_import(Sass_Import_Entry)</code><br>
	 * <i>native declaration : ./sass/functions.h:80</i>
	 */
	@Name("sass_delete_import") 
	public static void sassDeleteImport(LiferaysassLibrary.Sass_Import_Entry Sass_Import_Entry1) {
		sassDeleteImport(Pointer.getPeer(Sass_Import_Entry1));
	}
	@Name("sass_delete_import") 
	protected native static void sassDeleteImport(@Ptr long Sass_Import_Entry1);
	/**
	 * Creators for sass function list and function descriptors<br>
	 * Original signature : <code>Sass_Function_List sass_make_function_list(size_t)</code><br>
	 * <i>native declaration : ./sass/functions.h:85</i>
	 */
	@Name("sass_make_function_list") 
	public static Pointer<Pointer<LiferaysassLibrary.Sass_Function > > sassMakeFunctionList(@Ptr long length) {
		return (Pointer)Pointer.pointerToAddress(sassMakeFunctionList$2(length), DefaultParameterizedType.paramType(Pointer.class, LiferaysassLibrary.Sass_Function.class));
	}
	@Name("sass_make_function_list") 
	@Ptr 
	protected native static long sassMakeFunctionList$2(@Ptr long length);
	/**
	 * Original signature : <code>Sass_Function_Entry sass_make_function(const char*, Sass_Function_Fn, void*)</code><br>
	 * <i>native declaration : ./sass/functions.h:86</i>
	 */
	@Name("sass_make_function") 
	public static LiferaysassLibrary.Sass_Function_Entry sassMakeFunction(Pointer<Byte > signature, Pointer<LiferaysassLibrary.Sass_Function_Fn > cb, Pointer<? > cookie) {
		return new LiferaysassLibrary.Sass_Function_Entry(sassMakeFunction(Pointer.getPeer(signature), Pointer.getPeer(cb), Pointer.getPeer(cookie)));
	}
	@Name("sass_make_function") 
	@Ptr 
	protected native static long sassMakeFunction(@Ptr long signature, @Ptr long cb, @Ptr long cookie);
	/**
	 * Setters and getters for callbacks on function lists<br>
	 * Original signature : <code>Sass_Function_Entry sass_function_get_list_entry(Sass_Function_List, size_t)</code><br>
	 * <i>native declaration : ./sass/functions.h:89</i>
	 */
	@Name("sass_function_get_list_entry") 
	public static LiferaysassLibrary.Sass_Function_Entry sassFunctionGetListEntry(Pointer<Pointer<LiferaysassLibrary.Sass_Function > > list, @Ptr long pos) {
		return new LiferaysassLibrary.Sass_Function_Entry(sassFunctionGetListEntry(Pointer.getPeer(list), pos));
	}
	@Name("sass_function_get_list_entry") 
	@Ptr 
	protected native static long sassFunctionGetListEntry(@Ptr long list, @Ptr long pos);
	/**
	 * Original signature : <code>void sass_function_set_list_entry(Sass_Function_List, size_t, Sass_Function_Entry)</code><br>
	 * <i>native declaration : ./sass/functions.h:90</i>
	 */
	@Name("sass_function_set_list_entry") 
	public static void sassFunctionSetListEntry(Pointer<Pointer<LiferaysassLibrary.Sass_Function > > list, @Ptr long pos, LiferaysassLibrary.Sass_Function_Entry cb) {
		sassFunctionSetListEntry(Pointer.getPeer(list), pos, Pointer.getPeer(cb));
	}
	@Name("sass_function_set_list_entry") 
	protected native static void sassFunctionSetListEntry(@Ptr long list, @Ptr long pos, @Ptr long cb);
	/**
	 * Getters for custom function descriptors<br>
	 * Original signature : <code>char* sass_function_get_signature(Sass_Function_Entry)</code><br>
	 * <i>native declaration : ./sass/functions.h:93</i>
	 */
	@Name("sass_function_get_signature") 
	public static Pointer<Byte > sassFunctionGetSignature(LiferaysassLibrary.Sass_Function_Entry cb) {
		return (Pointer)Pointer.pointerToAddress(sassFunctionGetSignature(Pointer.getPeer(cb)), Byte.class);
	}
	@Name("sass_function_get_signature") 
	@Ptr 
	protected native static long sassFunctionGetSignature(@Ptr long cb);
	/**
	 * Original signature : <code>Sass_Function_Fn sass_function_get_function(Sass_Function_Entry)</code><br>
	 * <i>native declaration : ./sass/functions.h:94</i>
	 */
	@Name("sass_function_get_function") 
	public static Pointer<LiferaysassLibrary.Sass_Function_Fn > sassFunctionGetFunction(LiferaysassLibrary.Sass_Function_Entry cb) {
		return (Pointer)Pointer.pointerToAddress(sassFunctionGetFunction(Pointer.getPeer(cb)), LiferaysassLibrary.Sass_Function_Fn.class);
	}
	@Name("sass_function_get_function") 
	@Ptr 
	protected native static long sassFunctionGetFunction(@Ptr long cb);
	/**
	 * Original signature : <code>void* sass_function_get_cookie(Sass_Function_Entry)</code><br>
	 * <i>native declaration : ./sass/functions.h:95</i>
	 */
	@Name("sass_function_get_cookie") 
	public static Pointer<? > sassFunctionGetCookie(LiferaysassLibrary.Sass_Function_Entry cb) {
		return Pointer.pointerToAddress(sassFunctionGetCookie(Pointer.getPeer(cb)));
	}
	@Name("sass_function_get_cookie") 
	@Ptr 
	protected native static long sassFunctionGetCookie(@Ptr long cb);
	/**
	 * Create and initialize an option struct<br>
	 * Original signature : <code>Sass_Options* sass_make_options()</code><br>
	 * <i>native declaration : sass/context.h:31</i>
	 */
	@Name("sass_make_options") 
	public static Pointer<LiferaysassLibrary.Sass_Options > sassMakeOptions() {
		return (Pointer)Pointer.pointerToAddress(sassMakeOptions$2(), LiferaysassLibrary.Sass_Options.class);
	}
	@Name("sass_make_options") 
	@Ptr 
	protected native static long sassMakeOptions$2();
	/**
	 * Create and initialize a specific context<br>
	 * Original signature : <code>Sass_File_Context* sass_make_file_context(const char*)</code><br>
	 * <i>native declaration : sass/context.h:33</i>
	 */
	@Name("sass_make_file_context") 
	public static Pointer<LiferaysassLibrary.Sass_File_Context > sassMakeFileContext(Pointer<Byte > input_path) {
		return (Pointer)Pointer.pointerToAddress(sassMakeFileContext(Pointer.getPeer(input_path)), LiferaysassLibrary.Sass_File_Context.class);
	}
	@Name("sass_make_file_context") 
	@Ptr 
	protected native static long sassMakeFileContext(@Ptr long input_path);
	/**
	 * Original signature : <code>Sass_Data_Context* sass_make_data_context(char*)</code><br>
	 * <i>native declaration : sass/context.h:34</i>
	 */
	@Name("sass_make_data_context") 
	public static Pointer<LiferaysassLibrary.Sass_Data_Context > sassMakeDataContext(Pointer<Byte > source_string) {
		return (Pointer)Pointer.pointerToAddress(sassMakeDataContext(Pointer.getPeer(source_string)), LiferaysassLibrary.Sass_Data_Context.class);
	}
	@Name("sass_make_data_context") 
	@Ptr 
	protected native static long sassMakeDataContext(@Ptr long source_string);
	/**
	 * Call the compilation step for the specific context<br>
	 * Original signature : <code>int sass_compile_file_context(Sass_File_Context*)</code><br>
	 * <i>native declaration : sass/context.h:37</i>
	 */
	@Name("sass_compile_file_context") 
	public static int sassCompileFileContext(Pointer<LiferaysassLibrary.Sass_File_Context > ctx) {
		return sassCompileFileContext(Pointer.getPeer(ctx));
	}
	@Name("sass_compile_file_context") 
	protected native static int sassCompileFileContext(@Ptr long ctx);
	/**
	 * Original signature : <code>int sass_compile_data_context(Sass_Data_Context*)</code><br>
	 * <i>native declaration : sass/context.h:38</i>
	 */
	@Name("sass_compile_data_context") 
	public static int sassCompileDataContext(Pointer<LiferaysassLibrary.Sass_Data_Context > ctx) {
		return sassCompileDataContext(Pointer.getPeer(ctx));
	}
	@Name("sass_compile_data_context") 
	protected native static int sassCompileDataContext(@Ptr long ctx);
	/**
	 * Create a sass compiler instance for more control<br>
	 * Original signature : <code>Sass_Compiler* sass_make_file_compiler(Sass_File_Context*)</code><br>
	 * <i>native declaration : sass/context.h:41</i>
	 */
	@Name("sass_make_file_compiler") 
	public static Pointer<LiferaysassLibrary.Sass_Compiler > sassMakeFileCompiler(Pointer<LiferaysassLibrary.Sass_File_Context > file_ctx) {
		return (Pointer)Pointer.pointerToAddress(sassMakeFileCompiler(Pointer.getPeer(file_ctx)), LiferaysassLibrary.Sass_Compiler.class);
	}
	@Name("sass_make_file_compiler") 
	@Ptr 
	protected native static long sassMakeFileCompiler(@Ptr long file_ctx);
	/**
	 * Original signature : <code>Sass_Compiler* sass_make_data_compiler(Sass_Data_Context*)</code><br>
	 * <i>native declaration : sass/context.h:42</i>
	 */
	@Name("sass_make_data_compiler") 
	public static Pointer<LiferaysassLibrary.Sass_Compiler > sassMakeDataCompiler(Pointer<LiferaysassLibrary.Sass_Data_Context > data_ctx) {
		return (Pointer)Pointer.pointerToAddress(sassMakeDataCompiler(Pointer.getPeer(data_ctx)), LiferaysassLibrary.Sass_Compiler.class);
	}
	@Name("sass_make_data_compiler") 
	@Ptr 
	protected native static long sassMakeDataCompiler(@Ptr long data_ctx);
	/**
	 * Usefull if you only want to query the included files<br>
	 * Original signature : <code>int sass_compiler_parse(Sass_Compiler*)</code><br>
	 * <i>native declaration : sass/context.h:46</i>
	 */
	@Name("sass_compiler_parse") 
	public static int sassCompilerParse(Pointer<LiferaysassLibrary.Sass_Compiler > compiler) {
		return sassCompilerParse(Pointer.getPeer(compiler));
	}
	@Name("sass_compiler_parse") 
	protected native static int sassCompilerParse(@Ptr long compiler);
	/**
	 * Original signature : <code>int sass_compiler_execute(Sass_Compiler*)</code><br>
	 * <i>native declaration : sass/context.h:47</i>
	 */
	@Name("sass_compiler_execute") 
	public static int sassCompilerExecute(Pointer<LiferaysassLibrary.Sass_Compiler > compiler) {
		return sassCompilerExecute(Pointer.getPeer(compiler));
	}
	@Name("sass_compiler_execute") 
	protected native static int sassCompilerExecute(@Ptr long compiler);
	/**
	 * This does _not_ include any contexts or options<br>
	 * Original signature : <code>void sass_delete_compiler(Sass_Compiler*)</code><br>
	 * <i>native declaration : sass/context.h:51</i>
	 */
	@Name("sass_delete_compiler") 
	public static void sassDeleteCompiler(Pointer<LiferaysassLibrary.Sass_Compiler > compiler) {
		sassDeleteCompiler(Pointer.getPeer(compiler));
	}
	@Name("sass_delete_compiler") 
	protected native static void sassDeleteCompiler(@Ptr long compiler);
	/**
	 * Release all memory allocated and also ourself<br>
	 * Original signature : <code>void sass_delete_file_context(Sass_File_Context*)</code><br>
	 * <i>native declaration : sass/context.h:54</i>
	 */
	@Name("sass_delete_file_context") 
	public static void sassDeleteFileContext(Pointer<LiferaysassLibrary.Sass_File_Context > ctx) {
		sassDeleteFileContext(Pointer.getPeer(ctx));
	}
	@Name("sass_delete_file_context") 
	protected native static void sassDeleteFileContext(@Ptr long ctx);
	/**
	 * Original signature : <code>void sass_delete_data_context(Sass_Data_Context*)</code><br>
	 * <i>native declaration : sass/context.h:55</i>
	 */
	@Name("sass_delete_data_context") 
	public static void sassDeleteDataContext(Pointer<LiferaysassLibrary.Sass_Data_Context > ctx) {
		sassDeleteDataContext(Pointer.getPeer(ctx));
	}
	@Name("sass_delete_data_context") 
	protected native static void sassDeleteDataContext(@Ptr long ctx);
	/**
	 * Getters for context from specific implementation<br>
	 * Original signature : <code>Sass_Context* sass_file_context_get_context(Sass_File_Context*)</code><br>
	 * <i>native declaration : sass/context.h:58</i>
	 */
	@Name("sass_file_context_get_context") 
	public static Pointer<LiferaysassLibrary.Sass_Context > sassFileContextGetContext(Pointer<LiferaysassLibrary.Sass_File_Context > file_ctx) {
		return (Pointer)Pointer.pointerToAddress(sassFileContextGetContext(Pointer.getPeer(file_ctx)), LiferaysassLibrary.Sass_Context.class);
	}
	@Name("sass_file_context_get_context") 
	@Ptr 
	protected native static long sassFileContextGetContext(@Ptr long file_ctx);
	/**
	 * Original signature : <code>Sass_Context* sass_data_context_get_context(Sass_Data_Context*)</code><br>
	 * <i>native declaration : sass/context.h:59</i>
	 */
	@Name("sass_data_context_get_context") 
	public static Pointer<LiferaysassLibrary.Sass_Context > sassDataContextGetContext(Pointer<LiferaysassLibrary.Sass_Data_Context > data_ctx) {
		return (Pointer)Pointer.pointerToAddress(sassDataContextGetContext(Pointer.getPeer(data_ctx)), LiferaysassLibrary.Sass_Context.class);
	}
	@Name("sass_data_context_get_context") 
	@Ptr 
	protected native static long sassDataContextGetContext(@Ptr long data_ctx);
	/**
	 * Getters for Context_Options from Sass_Context<br>
	 * Original signature : <code>Sass_Options* sass_context_get_options(Sass_Context*)</code><br>
	 * <i>native declaration : sass/context.h:62</i>
	 */
	@Name("sass_context_get_options") 
	public static Pointer<LiferaysassLibrary.Sass_Options > sassContextGetOptions(Pointer<LiferaysassLibrary.Sass_Context > ctx) {
		return (Pointer)Pointer.pointerToAddress(sassContextGetOptions(Pointer.getPeer(ctx)), LiferaysassLibrary.Sass_Options.class);
	}
	@Name("sass_context_get_options") 
	@Ptr 
	protected native static long sassContextGetOptions(@Ptr long ctx);
	/**
	 * Original signature : <code>Sass_Options* sass_file_context_get_options(Sass_File_Context*)</code><br>
	 * <i>native declaration : sass/context.h:63</i>
	 */
	@Name("sass_file_context_get_options") 
	public static Pointer<LiferaysassLibrary.Sass_Options > sassFileContextGetOptions(Pointer<LiferaysassLibrary.Sass_File_Context > file_ctx) {
		return (Pointer)Pointer.pointerToAddress(sassFileContextGetOptions(Pointer.getPeer(file_ctx)), LiferaysassLibrary.Sass_Options.class);
	}
	@Name("sass_file_context_get_options") 
	@Ptr 
	protected native static long sassFileContextGetOptions(@Ptr long file_ctx);
	/**
	 * Original signature : <code>Sass_Options* sass_data_context_get_options(Sass_Data_Context*)</code><br>
	 * <i>native declaration : sass/context.h:64</i>
	 */
	@Name("sass_data_context_get_options") 
	public static Pointer<LiferaysassLibrary.Sass_Options > sassDataContextGetOptions(Pointer<LiferaysassLibrary.Sass_Data_Context > data_ctx) {
		return (Pointer)Pointer.pointerToAddress(sassDataContextGetOptions(Pointer.getPeer(data_ctx)), LiferaysassLibrary.Sass_Options.class);
	}
	@Name("sass_data_context_get_options") 
	@Ptr 
	protected native static long sassDataContextGetOptions(@Ptr long data_ctx);
	/**
	 * Original signature : <code>void sass_file_context_set_options(Sass_File_Context*, Sass_Options*)</code><br>
	 * <i>native declaration : sass/context.h:65</i>
	 */
	@Name("sass_file_context_set_options") 
	public static void sassFileContextSetOptions(Pointer<LiferaysassLibrary.Sass_File_Context > file_ctx, Pointer<LiferaysassLibrary.Sass_Options > opt) {
		sassFileContextSetOptions(Pointer.getPeer(file_ctx), Pointer.getPeer(opt));
	}
	@Name("sass_file_context_set_options") 
	protected native static void sassFileContextSetOptions(@Ptr long file_ctx, @Ptr long opt);
	/**
	 * Original signature : <code>void sass_data_context_set_options(Sass_Data_Context*, Sass_Options*)</code><br>
	 * <i>native declaration : sass/context.h:66</i>
	 */
	@Name("sass_data_context_set_options") 
	public static void sassDataContextSetOptions(Pointer<LiferaysassLibrary.Sass_Data_Context > data_ctx, Pointer<LiferaysassLibrary.Sass_Options > opt) {
		sassDataContextSetOptions(Pointer.getPeer(data_ctx), Pointer.getPeer(opt));
	}
	@Name("sass_data_context_set_options") 
	protected native static void sassDataContextSetOptions(@Ptr long data_ctx, @Ptr long opt);
	/**
	 * Getters for Context_Option values<br>
	 * Original signature : <code>int sass_option_get_precision(Sass_Options*)</code><br>
	 * <i>native declaration : sass/context.h:70</i>
	 */
	@Name("sass_option_get_precision") 
	public static int sassOptionGetPrecision(Pointer<LiferaysassLibrary.Sass_Options > options) {
		return sassOptionGetPrecision(Pointer.getPeer(options));
	}
	@Name("sass_option_get_precision") 
	protected native static int sassOptionGetPrecision(@Ptr long options);
	/**
	 * Original signature : <code>Sass_Output_Style sass_option_get_output_style(Sass_Options*)</code><br>
	 * <i>native declaration : sass/context.h:71</i>
	 */
	@Name("sass_option_get_output_style") 
	public static IntValuedEnum<LiferaysassLibrary.Sass_Output_Style > sassOptionGetOutputStyle(Pointer<LiferaysassLibrary.Sass_Options > options) {
		return FlagSet.fromValue(sassOptionGetOutputStyle(Pointer.getPeer(options)), LiferaysassLibrary.Sass_Output_Style.class);
	}
	@Name("sass_option_get_output_style") 
	protected native static int sassOptionGetOutputStyle(@Ptr long options);
	/**
	 * Original signature : <code>bool sass_option_get_source_comments(Sass_Options*)</code><br>
	 * <i>native declaration : sass/context.h:72</i>
	 */
	@Name("sass_option_get_source_comments") 
	public static boolean sassOptionGetSourceComments(Pointer<LiferaysassLibrary.Sass_Options > options) {
		return sassOptionGetSourceComments(Pointer.getPeer(options));
	}
	@Name("sass_option_get_source_comments") 
	protected native static boolean sassOptionGetSourceComments(@Ptr long options);
	/**
	 * Original signature : <code>bool sass_option_get_source_map_embed(Sass_Options*)</code><br>
	 * <i>native declaration : sass/context.h:73</i>
	 */
	@Name("sass_option_get_source_map_embed") 
	public static boolean sassOptionGetSourceMapEmbed(Pointer<LiferaysassLibrary.Sass_Options > options) {
		return sassOptionGetSourceMapEmbed(Pointer.getPeer(options));
	}
	@Name("sass_option_get_source_map_embed") 
	protected native static boolean sassOptionGetSourceMapEmbed(@Ptr long options);
	/**
	 * Original signature : <code>bool sass_option_get_source_map_contents(Sass_Options*)</code><br>
	 * <i>native declaration : sass/context.h:74</i>
	 */
	@Name("sass_option_get_source_map_contents") 
	public static boolean sassOptionGetSourceMapContents(Pointer<LiferaysassLibrary.Sass_Options > options) {
		return sassOptionGetSourceMapContents(Pointer.getPeer(options));
	}
	@Name("sass_option_get_source_map_contents") 
	protected native static boolean sassOptionGetSourceMapContents(@Ptr long options);
	/**
	 * Original signature : <code>bool sass_option_get_omit_source_map_url(Sass_Options*)</code><br>
	 * <i>native declaration : sass/context.h:75</i>
	 */
	@Name("sass_option_get_omit_source_map_url") 
	public static boolean sassOptionGetOmitSourceMapUrl(Pointer<LiferaysassLibrary.Sass_Options > options) {
		return sassOptionGetOmitSourceMapUrl(Pointer.getPeer(options));
	}
	@Name("sass_option_get_omit_source_map_url") 
	protected native static boolean sassOptionGetOmitSourceMapUrl(@Ptr long options);
	/**
	 * Original signature : <code>bool sass_option_get_is_indented_syntax_src(Sass_Options*)</code><br>
	 * <i>native declaration : sass/context.h:76</i>
	 */
	@Name("sass_option_get_is_indented_syntax_src") 
	public static boolean sassOptionGetIsIndentedSyntaxSrc(Pointer<LiferaysassLibrary.Sass_Options > options) {
		return sassOptionGetIsIndentedSyntaxSrc(Pointer.getPeer(options));
	}
	@Name("sass_option_get_is_indented_syntax_src") 
	protected native static boolean sassOptionGetIsIndentedSyntaxSrc(@Ptr long options);
	/**
	 * Original signature : <code>char* sass_option_get_indent(Sass_Options*)</code><br>
	 * <i>native declaration : sass/context.h:77</i>
	 */
	@Name("sass_option_get_indent") 
	public static Pointer<Byte > sassOptionGetIndent(Pointer<LiferaysassLibrary.Sass_Options > options) {
		return (Pointer)Pointer.pointerToAddress(sassOptionGetIndent(Pointer.getPeer(options)), Byte.class);
	}
	@Name("sass_option_get_indent") 
	@Ptr 
	protected native static long sassOptionGetIndent(@Ptr long options);
	/**
	 * Original signature : <code>char* sass_option_get_linefeed(Sass_Options*)</code><br>
	 * <i>native declaration : sass/context.h:78</i>
	 */
	@Name("sass_option_get_linefeed") 
	public static Pointer<Byte > sassOptionGetLinefeed(Pointer<LiferaysassLibrary.Sass_Options > options) {
		return (Pointer)Pointer.pointerToAddress(sassOptionGetLinefeed(Pointer.getPeer(options)), Byte.class);
	}
	@Name("sass_option_get_linefeed") 
	@Ptr 
	protected native static long sassOptionGetLinefeed(@Ptr long options);
	/**
	 * Original signature : <code>char* sass_option_get_input_path(Sass_Options*)</code><br>
	 * <i>native declaration : sass/context.h:79</i>
	 */
	@Name("sass_option_get_input_path") 
	public static Pointer<Byte > sassOptionGetInputPath(Pointer<LiferaysassLibrary.Sass_Options > options) {
		return (Pointer)Pointer.pointerToAddress(sassOptionGetInputPath(Pointer.getPeer(options)), Byte.class);
	}
	@Name("sass_option_get_input_path") 
	@Ptr 
	protected native static long sassOptionGetInputPath(@Ptr long options);
	/**
	 * Original signature : <code>char* sass_option_get_output_path(Sass_Options*)</code><br>
	 * <i>native declaration : sass/context.h:80</i>
	 */
	@Name("sass_option_get_output_path") 
	public static Pointer<Byte > sassOptionGetOutputPath(Pointer<LiferaysassLibrary.Sass_Options > options) {
		return (Pointer)Pointer.pointerToAddress(sassOptionGetOutputPath(Pointer.getPeer(options)), Byte.class);
	}
	@Name("sass_option_get_output_path") 
	@Ptr 
	protected native static long sassOptionGetOutputPath(@Ptr long options);
	/**
	 * Original signature : <code>char* sass_option_get_plugin_path(Sass_Options*)</code><br>
	 * <i>native declaration : sass/context.h:81</i>
	 */
	@Name("sass_option_get_plugin_path") 
	public static Pointer<Byte > sassOptionGetPluginPath(Pointer<LiferaysassLibrary.Sass_Options > options) {
		return (Pointer)Pointer.pointerToAddress(sassOptionGetPluginPath(Pointer.getPeer(options)), Byte.class);
	}
	@Name("sass_option_get_plugin_path") 
	@Ptr 
	protected native static long sassOptionGetPluginPath(@Ptr long options);
	/**
	 * Original signature : <code>char* sass_option_get_include_path(Sass_Options*)</code><br>
	 * <i>native declaration : sass/context.h:82</i>
	 */
	@Name("sass_option_get_include_path") 
	public static Pointer<Byte > sassOptionGetIncludePath(Pointer<LiferaysassLibrary.Sass_Options > options) {
		return (Pointer)Pointer.pointerToAddress(sassOptionGetIncludePath(Pointer.getPeer(options)), Byte.class);
	}
	@Name("sass_option_get_include_path") 
	@Ptr 
	protected native static long sassOptionGetIncludePath(@Ptr long options);
	/**
	 * Original signature : <code>char* sass_option_get_source_map_file(Sass_Options*)</code><br>
	 * <i>native declaration : sass/context.h:83</i>
	 */
	@Name("sass_option_get_source_map_file") 
	public static Pointer<Byte > sassOptionGetSourceMapFile(Pointer<LiferaysassLibrary.Sass_Options > options) {
		return (Pointer)Pointer.pointerToAddress(sassOptionGetSourceMapFile(Pointer.getPeer(options)), Byte.class);
	}
	@Name("sass_option_get_source_map_file") 
	@Ptr 
	protected native static long sassOptionGetSourceMapFile(@Ptr long options);
	/**
	 * Original signature : <code>char* sass_option_get_source_map_root(Sass_Options*)</code><br>
	 * <i>native declaration : sass/context.h:84</i>
	 */
	@Name("sass_option_get_source_map_root") 
	public static Pointer<Byte > sassOptionGetSourceMapRoot(Pointer<LiferaysassLibrary.Sass_Options > options) {
		return (Pointer)Pointer.pointerToAddress(sassOptionGetSourceMapRoot(Pointer.getPeer(options)), Byte.class);
	}
	@Name("sass_option_get_source_map_root") 
	@Ptr 
	protected native static long sassOptionGetSourceMapRoot(@Ptr long options);
	/**
	 * Original signature : <code>Sass_Importer_List sass_option_get_c_headers(Sass_Options*)</code><br>
	 * <i>native declaration : sass/context.h:85</i>
	 */
	@Name("sass_option_get_c_headers") 
	public static Pointer<Pointer<LiferaysassLibrary.Sass_Importer > > sassOptionGetCHeaders(Pointer<LiferaysassLibrary.Sass_Options > options) {
		return (Pointer)Pointer.pointerToAddress(sassOptionGetCHeaders(Pointer.getPeer(options)), DefaultParameterizedType.paramType(Pointer.class, LiferaysassLibrary.Sass_Importer.class));
	}
	@Name("sass_option_get_c_headers") 
	@Ptr 
	protected native static long sassOptionGetCHeaders(@Ptr long options);
	/**
	 * Original signature : <code>Sass_Importer_List sass_option_get_c_importers(Sass_Options*)</code><br>
	 * <i>native declaration : sass/context.h:86</i>
	 */
	@Name("sass_option_get_c_importers") 
	public static Pointer<Pointer<LiferaysassLibrary.Sass_Importer > > sassOptionGetCImporters(Pointer<LiferaysassLibrary.Sass_Options > options) {
		return (Pointer)Pointer.pointerToAddress(sassOptionGetCImporters(Pointer.getPeer(options)), DefaultParameterizedType.paramType(Pointer.class, LiferaysassLibrary.Sass_Importer.class));
	}
	@Name("sass_option_get_c_importers") 
	@Ptr 
	protected native static long sassOptionGetCImporters(@Ptr long options);
	/**
	 * Original signature : <code>Sass_Function_List sass_option_get_c_functions(Sass_Options*)</code><br>
	 * <i>native declaration : sass/context.h:87</i>
	 */
	@Name("sass_option_get_c_functions") 
	public static Pointer<Pointer<LiferaysassLibrary.Sass_Function > > sassOptionGetCFunctions(Pointer<LiferaysassLibrary.Sass_Options > options) {
		return (Pointer)Pointer.pointerToAddress(sassOptionGetCFunctions(Pointer.getPeer(options)), DefaultParameterizedType.paramType(Pointer.class, LiferaysassLibrary.Sass_Function.class));
	}
	@Name("sass_option_get_c_functions") 
	@Ptr 
	protected native static long sassOptionGetCFunctions(@Ptr long options);
	/**
	 * Setters for Context_Option values<br>
	 * Original signature : <code>void sass_option_set_precision(Sass_Options*, int)</code><br>
	 * <i>native declaration : sass/context.h:90</i>
	 */
	@Name("sass_option_set_precision") 
	public static void sassOptionSetPrecision(Pointer<LiferaysassLibrary.Sass_Options > options, int precision) {
		sassOptionSetPrecision(Pointer.getPeer(options), precision);
	}
	@Name("sass_option_set_precision") 
	protected native static void sassOptionSetPrecision(@Ptr long options, int precision);
	/**
	 * Original signature : <code>void sass_option_set_output_style(Sass_Options*, Sass_Output_Style)</code><br>
	 * <i>native declaration : sass/context.h:91</i>
	 */
	@Name("sass_option_set_output_style") 
	public static void sassOptionSetOutputStyle(Pointer<LiferaysassLibrary.Sass_Options > options, IntValuedEnum<LiferaysassLibrary.Sass_Output_Style > output_style) {
		sassOptionSetOutputStyle(Pointer.getPeer(options), (int)output_style.value());
	}
	@Name("sass_option_set_output_style") 
	protected native static void sassOptionSetOutputStyle(@Ptr long options, int output_style);
	/**
	 * Original signature : <code>void sass_option_set_source_comments(Sass_Options*, bool)</code><br>
	 * <i>native declaration : sass/context.h:92</i>
	 */
	@Name("sass_option_set_source_comments") 
	public static void sassOptionSetSourceComments(Pointer<LiferaysassLibrary.Sass_Options > options, boolean source_comments) {
		sassOptionSetSourceComments(Pointer.getPeer(options), source_comments);
	}
	@Name("sass_option_set_source_comments") 
	protected native static void sassOptionSetSourceComments(@Ptr long options, boolean source_comments);
	/**
	 * Original signature : <code>void sass_option_set_source_map_embed(Sass_Options*, bool)</code><br>
	 * <i>native declaration : sass/context.h:93</i>
	 */
	@Name("sass_option_set_source_map_embed") 
	public static void sassOptionSetSourceMapEmbed(Pointer<LiferaysassLibrary.Sass_Options > options, boolean source_map_embed) {
		sassOptionSetSourceMapEmbed(Pointer.getPeer(options), source_map_embed);
	}
	@Name("sass_option_set_source_map_embed") 
	protected native static void sassOptionSetSourceMapEmbed(@Ptr long options, boolean source_map_embed);
	/**
	 * Original signature : <code>void sass_option_set_source_map_contents(Sass_Options*, bool)</code><br>
	 * <i>native declaration : sass/context.h:94</i>
	 */
	@Name("sass_option_set_source_map_contents") 
	public static void sassOptionSetSourceMapContents(Pointer<LiferaysassLibrary.Sass_Options > options, boolean source_map_contents) {
		sassOptionSetSourceMapContents(Pointer.getPeer(options), source_map_contents);
	}
	@Name("sass_option_set_source_map_contents") 
	protected native static void sassOptionSetSourceMapContents(@Ptr long options, boolean source_map_contents);
	/**
	 * Original signature : <code>void sass_option_set_omit_source_map_url(Sass_Options*, bool)</code><br>
	 * <i>native declaration : sass/context.h:95</i>
	 */
	@Name("sass_option_set_omit_source_map_url") 
	public static void sassOptionSetOmitSourceMapUrl(Pointer<LiferaysassLibrary.Sass_Options > options, boolean omit_source_map_url) {
		sassOptionSetOmitSourceMapUrl(Pointer.getPeer(options), omit_source_map_url);
	}
	@Name("sass_option_set_omit_source_map_url") 
	protected native static void sassOptionSetOmitSourceMapUrl(@Ptr long options, boolean omit_source_map_url);
	/**
	 * Original signature : <code>void sass_option_set_is_indented_syntax_src(Sass_Options*, bool)</code><br>
	 * <i>native declaration : sass/context.h:96</i>
	 */
	@Name("sass_option_set_is_indented_syntax_src") 
	public static void sassOptionSetIsIndentedSyntaxSrc(Pointer<LiferaysassLibrary.Sass_Options > options, boolean is_indented_syntax_src) {
		sassOptionSetIsIndentedSyntaxSrc(Pointer.getPeer(options), is_indented_syntax_src);
	}
	@Name("sass_option_set_is_indented_syntax_src") 
	protected native static void sassOptionSetIsIndentedSyntaxSrc(@Ptr long options, boolean is_indented_syntax_src);
	/**
	 * Original signature : <code>void sass_option_set_indent(Sass_Options*, const char*)</code><br>
	 * <i>native declaration : sass/context.h:97</i>
	 */
	@Name("sass_option_set_indent") 
	public static void sassOptionSetIndent(Pointer<LiferaysassLibrary.Sass_Options > options, Pointer<Byte > indent) {
		sassOptionSetIndent(Pointer.getPeer(options), Pointer.getPeer(indent));
	}
	@Name("sass_option_set_indent") 
	protected native static void sassOptionSetIndent(@Ptr long options, @Ptr long indent);
	/**
	 * Original signature : <code>void sass_option_set_linefeed(Sass_Options*, const char*)</code><br>
	 * <i>native declaration : sass/context.h:98</i>
	 */
	@Name("sass_option_set_linefeed") 
	public static void sassOptionSetLinefeed(Pointer<LiferaysassLibrary.Sass_Options > options, Pointer<Byte > linefeed) {
		sassOptionSetLinefeed(Pointer.getPeer(options), Pointer.getPeer(linefeed));
	}
	@Name("sass_option_set_linefeed") 
	protected native static void sassOptionSetLinefeed(@Ptr long options, @Ptr long linefeed);
	/**
	 * Original signature : <code>void sass_option_set_input_path(Sass_Options*, const char*)</code><br>
	 * <i>native declaration : sass/context.h:99</i>
	 */
	@Name("sass_option_set_input_path") 
	public static void sassOptionSetInputPath(Pointer<LiferaysassLibrary.Sass_Options > options, Pointer<Byte > input_path) {
		sassOptionSetInputPath(Pointer.getPeer(options), Pointer.getPeer(input_path));
	}
	@Name("sass_option_set_input_path") 
	protected native static void sassOptionSetInputPath(@Ptr long options, @Ptr long input_path);
	/**
	 * Original signature : <code>void sass_option_set_output_path(Sass_Options*, const char*)</code><br>
	 * <i>native declaration : sass/context.h:100</i>
	 */
	@Name("sass_option_set_output_path") 
	public static void sassOptionSetOutputPath(Pointer<LiferaysassLibrary.Sass_Options > options, Pointer<Byte > output_path) {
		sassOptionSetOutputPath(Pointer.getPeer(options), Pointer.getPeer(output_path));
	}
	@Name("sass_option_set_output_path") 
	protected native static void sassOptionSetOutputPath(@Ptr long options, @Ptr long output_path);
	/**
	 * Original signature : <code>void sass_option_set_plugin_path(Sass_Options*, const char*)</code><br>
	 * <i>native declaration : sass/context.h:101</i>
	 */
	@Name("sass_option_set_plugin_path") 
	public static void sassOptionSetPluginPath(Pointer<LiferaysassLibrary.Sass_Options > options, Pointer<Byte > plugin_path) {
		sassOptionSetPluginPath(Pointer.getPeer(options), Pointer.getPeer(plugin_path));
	}
	@Name("sass_option_set_plugin_path") 
	protected native static void sassOptionSetPluginPath(@Ptr long options, @Ptr long plugin_path);
	/**
	 * Original signature : <code>void sass_option_set_include_path(Sass_Options*, const char*)</code><br>
	 * <i>native declaration : sass/context.h:102</i>
	 */
	@Name("sass_option_set_include_path") 
	public static void sassOptionSetIncludePath(Pointer<LiferaysassLibrary.Sass_Options > options, Pointer<Byte > include_path) {
		sassOptionSetIncludePath(Pointer.getPeer(options), Pointer.getPeer(include_path));
	}
	@Name("sass_option_set_include_path") 
	protected native static void sassOptionSetIncludePath(@Ptr long options, @Ptr long include_path);
	/**
	 * Original signature : <code>void sass_option_set_source_map_file(Sass_Options*, const char*)</code><br>
	 * <i>native declaration : sass/context.h:103</i>
	 */
	@Name("sass_option_set_source_map_file") 
	public static void sassOptionSetSourceMapFile(Pointer<LiferaysassLibrary.Sass_Options > options, Pointer<Byte > source_map_file) {
		sassOptionSetSourceMapFile(Pointer.getPeer(options), Pointer.getPeer(source_map_file));
	}
	@Name("sass_option_set_source_map_file") 
	protected native static void sassOptionSetSourceMapFile(@Ptr long options, @Ptr long source_map_file);
	/**
	 * Original signature : <code>void sass_option_set_source_map_root(Sass_Options*, const char*)</code><br>
	 * <i>native declaration : sass/context.h:104</i>
	 */
	@Name("sass_option_set_source_map_root") 
	public static void sassOptionSetSourceMapRoot(Pointer<LiferaysassLibrary.Sass_Options > options, Pointer<Byte > source_map_root) {
		sassOptionSetSourceMapRoot(Pointer.getPeer(options), Pointer.getPeer(source_map_root));
	}
	@Name("sass_option_set_source_map_root") 
	protected native static void sassOptionSetSourceMapRoot(@Ptr long options, @Ptr long source_map_root);
	/**
	 * Original signature : <code>void sass_option_set_c_headers(Sass_Options*, Sass_Importer_List)</code><br>
	 * <i>native declaration : sass/context.h:105</i>
	 */
	@Name("sass_option_set_c_headers") 
	public static void sassOptionSetCHeaders(Pointer<LiferaysassLibrary.Sass_Options > options, Pointer<Pointer<LiferaysassLibrary.Sass_Importer > > c_headers) {
		sassOptionSetCHeaders(Pointer.getPeer(options), Pointer.getPeer(c_headers));
	}
	@Name("sass_option_set_c_headers") 
	protected native static void sassOptionSetCHeaders(@Ptr long options, @Ptr long c_headers);
	/**
	 * Original signature : <code>void sass_option_set_c_importers(Sass_Options*, Sass_Importer_List)</code><br>
	 * <i>native declaration : sass/context.h:106</i>
	 */
	@Name("sass_option_set_c_importers") 
	public static void sassOptionSetCImporters(Pointer<LiferaysassLibrary.Sass_Options > options, Pointer<Pointer<LiferaysassLibrary.Sass_Importer > > c_importers) {
		sassOptionSetCImporters(Pointer.getPeer(options), Pointer.getPeer(c_importers));
	}
	@Name("sass_option_set_c_importers") 
	protected native static void sassOptionSetCImporters(@Ptr long options, @Ptr long c_importers);
	/**
	 * Original signature : <code>void sass_option_set_c_functions(Sass_Options*, Sass_Function_List)</code><br>
	 * <i>native declaration : sass/context.h:107</i>
	 */
	@Name("sass_option_set_c_functions") 
	public static void sassOptionSetCFunctions(Pointer<LiferaysassLibrary.Sass_Options > options, Pointer<Pointer<LiferaysassLibrary.Sass_Function > > c_functions) {
		sassOptionSetCFunctions(Pointer.getPeer(options), Pointer.getPeer(c_functions));
	}
	@Name("sass_option_set_c_functions") 
	protected native static void sassOptionSetCFunctions(@Ptr long options, @Ptr long c_functions);
	/**
	 * Getters for Sass_Context values<br>
	 * Original signature : <code>char* sass_context_get_output_string(Sass_Context*)</code><br>
	 * <i>native declaration : sass/context.h:111</i>
	 */
	@Name("sass_context_get_output_string") 
	public static Pointer<Byte > sassContextGetOutputString(Pointer<LiferaysassLibrary.Sass_Context > ctx) {
		return (Pointer)Pointer.pointerToAddress(sassContextGetOutputString(Pointer.getPeer(ctx)), Byte.class);
	}
	@Name("sass_context_get_output_string") 
	@Ptr 
	protected native static long sassContextGetOutputString(@Ptr long ctx);
	/**
	 * Original signature : <code>int sass_context_get_error_status(Sass_Context*)</code><br>
	 * <i>native declaration : sass/context.h:112</i>
	 */
	@Name("sass_context_get_error_status") 
	public static int sassContextGetErrorStatus(Pointer<LiferaysassLibrary.Sass_Context > ctx) {
		return sassContextGetErrorStatus(Pointer.getPeer(ctx));
	}
	@Name("sass_context_get_error_status") 
	protected native static int sassContextGetErrorStatus(@Ptr long ctx);
	/**
	 * Original signature : <code>char* sass_context_get_error_json(Sass_Context*)</code><br>
	 * <i>native declaration : sass/context.h:113</i>
	 */
	@Name("sass_context_get_error_json") 
	public static Pointer<Byte > sassContextGetErrorJson(Pointer<LiferaysassLibrary.Sass_Context > ctx) {
		return (Pointer)Pointer.pointerToAddress(sassContextGetErrorJson(Pointer.getPeer(ctx)), Byte.class);
	}
	@Name("sass_context_get_error_json") 
	@Ptr 
	protected native static long sassContextGetErrorJson(@Ptr long ctx);
	/**
	 * Original signature : <code>char* sass_context_get_error_text(Sass_Context*)</code><br>
	 * <i>native declaration : sass/context.h:114</i>
	 */
	@Name("sass_context_get_error_text") 
	public static Pointer<Byte > sassContextGetErrorText(Pointer<LiferaysassLibrary.Sass_Context > ctx) {
		return (Pointer)Pointer.pointerToAddress(sassContextGetErrorText(Pointer.getPeer(ctx)), Byte.class);
	}
	@Name("sass_context_get_error_text") 
	@Ptr 
	protected native static long sassContextGetErrorText(@Ptr long ctx);
	/**
	 * Original signature : <code>char* sass_context_get_error_message(Sass_Context*)</code><br>
	 * <i>native declaration : sass/context.h:115</i>
	 */
	@Name("sass_context_get_error_message") 
	public static Pointer<Byte > sassContextGetErrorMessage(Pointer<LiferaysassLibrary.Sass_Context > ctx) {
		return (Pointer)Pointer.pointerToAddress(sassContextGetErrorMessage(Pointer.getPeer(ctx)), Byte.class);
	}
	@Name("sass_context_get_error_message") 
	@Ptr 
	protected native static long sassContextGetErrorMessage(@Ptr long ctx);
	/**
	 * Original signature : <code>char* sass_context_get_error_file(Sass_Context*)</code><br>
	 * <i>native declaration : sass/context.h:116</i>
	 */
	@Name("sass_context_get_error_file") 
	public static Pointer<Byte > sassContextGetErrorFile(Pointer<LiferaysassLibrary.Sass_Context > ctx) {
		return (Pointer)Pointer.pointerToAddress(sassContextGetErrorFile(Pointer.getPeer(ctx)), Byte.class);
	}
	@Name("sass_context_get_error_file") 
	@Ptr 
	protected native static long sassContextGetErrorFile(@Ptr long ctx);
	/**
	 * Original signature : <code>char* sass_context_get_error_src(Sass_Context*)</code><br>
	 * <i>native declaration : sass/context.h:117</i>
	 */
	@Name("sass_context_get_error_src") 
	public static Pointer<Byte > sassContextGetErrorSrc(Pointer<LiferaysassLibrary.Sass_Context > ctx) {
		return (Pointer)Pointer.pointerToAddress(sassContextGetErrorSrc(Pointer.getPeer(ctx)), Byte.class);
	}
	@Name("sass_context_get_error_src") 
	@Ptr 
	protected native static long sassContextGetErrorSrc(@Ptr long ctx);
	/**
	 * Original signature : <code>size_t sass_context_get_error_line(Sass_Context*)</code><br>
	 * <i>native declaration : sass/context.h:118</i>
	 */
	@Name("sass_context_get_error_line") 
	@Ptr 
	public static long sassContextGetErrorLine(Pointer<LiferaysassLibrary.Sass_Context > ctx) {
		return sassContextGetErrorLine(Pointer.getPeer(ctx));
	}
	@Name("sass_context_get_error_line") 
	@Ptr 
	protected native static long sassContextGetErrorLine(@Ptr long ctx);
	/**
	 * Original signature : <code>size_t sass_context_get_error_column(Sass_Context*)</code><br>
	 * <i>native declaration : sass/context.h:119</i>
	 */
	@Name("sass_context_get_error_column") 
	@Ptr 
	public static long sassContextGetErrorColumn(Pointer<LiferaysassLibrary.Sass_Context > ctx) {
		return sassContextGetErrorColumn(Pointer.getPeer(ctx));
	}
	@Name("sass_context_get_error_column") 
	@Ptr 
	protected native static long sassContextGetErrorColumn(@Ptr long ctx);
	/**
	 * Original signature : <code>char* sass_context_get_source_map_string(Sass_Context*)</code><br>
	 * <i>native declaration : sass/context.h:120</i>
	 */
	@Name("sass_context_get_source_map_string") 
	public static Pointer<Byte > sassContextGetSourceMapString(Pointer<LiferaysassLibrary.Sass_Context > ctx) {
		return (Pointer)Pointer.pointerToAddress(sassContextGetSourceMapString(Pointer.getPeer(ctx)), Byte.class);
	}
	@Name("sass_context_get_source_map_string") 
	@Ptr 
	protected native static long sassContextGetSourceMapString(@Ptr long ctx);
	/**
	 * Original signature : <code>char** sass_context_get_included_files(Sass_Context*)</code><br>
	 * <i>native declaration : sass/context.h:121</i>
	 */
	@Name("sass_context_get_included_files") 
	public static Pointer<Pointer<Byte > > sassContextGetIncludedFiles(Pointer<LiferaysassLibrary.Sass_Context > ctx) {
		return (Pointer)Pointer.pointerToAddress(sassContextGetIncludedFiles(Pointer.getPeer(ctx)), DefaultParameterizedType.paramType(Pointer.class, Byte.class));
	}
	@Name("sass_context_get_included_files") 
	@Ptr 
	protected native static long sassContextGetIncludedFiles(@Ptr long ctx);
	/**
	 * Calculate the size of the stored null terminated array<br>
	 * Original signature : <code>size_t sass_context_get_included_files_size(Sass_Context*)</code><br>
	 * <i>native declaration : sass/context.h:124</i>
	 */
	@Name("sass_context_get_included_files_size") 
	@Ptr 
	public static long sassContextGetIncludedFilesSize(Pointer<LiferaysassLibrary.Sass_Context > ctx) {
		return sassContextGetIncludedFilesSize(Pointer.getPeer(ctx));
	}
	@Name("sass_context_get_included_files_size") 
	@Ptr 
	protected native static long sassContextGetIncludedFilesSize(@Ptr long ctx);
	/**
	 * Take ownership of memory (value on context is set to 0)<br>
	 * Original signature : <code>char* sass_context_take_error_json(Sass_Context*)</code><br>
	 * <i>native declaration : sass/context.h:127</i>
	 */
	@Name("sass_context_take_error_json") 
	public static Pointer<Byte > sassContextTakeErrorJson(Pointer<LiferaysassLibrary.Sass_Context > ctx) {
		return (Pointer)Pointer.pointerToAddress(sassContextTakeErrorJson(Pointer.getPeer(ctx)), Byte.class);
	}
	@Name("sass_context_take_error_json") 
	@Ptr 
	protected native static long sassContextTakeErrorJson(@Ptr long ctx);
	/**
	 * Original signature : <code>char* sass_context_take_error_text(Sass_Context*)</code><br>
	 * <i>native declaration : sass/context.h:128</i>
	 */
	@Name("sass_context_take_error_text") 
	public static Pointer<Byte > sassContextTakeErrorText(Pointer<LiferaysassLibrary.Sass_Context > ctx) {
		return (Pointer)Pointer.pointerToAddress(sassContextTakeErrorText(Pointer.getPeer(ctx)), Byte.class);
	}
	@Name("sass_context_take_error_text") 
	@Ptr 
	protected native static long sassContextTakeErrorText(@Ptr long ctx);
	/**
	 * Original signature : <code>char* sass_context_take_error_message(Sass_Context*)</code><br>
	 * <i>native declaration : sass/context.h:129</i>
	 */
	@Name("sass_context_take_error_message") 
	public static Pointer<Byte > sassContextTakeErrorMessage(Pointer<LiferaysassLibrary.Sass_Context > ctx) {
		return (Pointer)Pointer.pointerToAddress(sassContextTakeErrorMessage(Pointer.getPeer(ctx)), Byte.class);
	}
	@Name("sass_context_take_error_message") 
	@Ptr 
	protected native static long sassContextTakeErrorMessage(@Ptr long ctx);
	/**
	 * Original signature : <code>char* sass_context_take_error_file(Sass_Context*)</code><br>
	 * <i>native declaration : sass/context.h:130</i>
	 */
	@Name("sass_context_take_error_file") 
	public static Pointer<Byte > sassContextTakeErrorFile(Pointer<LiferaysassLibrary.Sass_Context > ctx) {
		return (Pointer)Pointer.pointerToAddress(sassContextTakeErrorFile(Pointer.getPeer(ctx)), Byte.class);
	}
	@Name("sass_context_take_error_file") 
	@Ptr 
	protected native static long sassContextTakeErrorFile(@Ptr long ctx);
	/**
	 * Original signature : <code>char* sass_context_take_output_string(Sass_Context*)</code><br>
	 * <i>native declaration : sass/context.h:131</i>
	 */
	@Name("sass_context_take_output_string") 
	public static Pointer<Byte > sassContextTakeOutputString(Pointer<LiferaysassLibrary.Sass_Context > ctx) {
		return (Pointer)Pointer.pointerToAddress(sassContextTakeOutputString(Pointer.getPeer(ctx)), Byte.class);
	}
	@Name("sass_context_take_output_string") 
	@Ptr 
	protected native static long sassContextTakeOutputString(@Ptr long ctx);
	/**
	 * Original signature : <code>char* sass_context_take_source_map_string(Sass_Context*)</code><br>
	 * <i>native declaration : sass/context.h:132</i>
	 */
	@Name("sass_context_take_source_map_string") 
	public static Pointer<Byte > sassContextTakeSourceMapString(Pointer<LiferaysassLibrary.Sass_Context > ctx) {
		return (Pointer)Pointer.pointerToAddress(sassContextTakeSourceMapString(Pointer.getPeer(ctx)), Byte.class);
	}
	@Name("sass_context_take_source_map_string") 
	@Ptr 
	protected native static long sassContextTakeSourceMapString(@Ptr long ctx);
	/**
	 * Original signature : <code>char** sass_context_take_included_files(Sass_Context*)</code><br>
	 * <i>native declaration : sass/context.h:133</i>
	 */
	@Name("sass_context_take_included_files") 
	public static Pointer<Pointer<Byte > > sassContextTakeIncludedFiles(Pointer<LiferaysassLibrary.Sass_Context > ctx) {
		return (Pointer)Pointer.pointerToAddress(sassContextTakeIncludedFiles(Pointer.getPeer(ctx)), DefaultParameterizedType.paramType(Pointer.class, Byte.class));
	}
	@Name("sass_context_take_included_files") 
	@Ptr 
	protected native static long sassContextTakeIncludedFiles(@Ptr long ctx);
	/**
	 * Getters for Sass_Compiler options<br>
	 * Original signature : <code>Sass_Compiler_State sass_compiler_get_state(Sass_Compiler*)</code><br>
	 * <i>native declaration : sass/context.h:136</i>
	 */
	@Name("sass_compiler_get_state") 
	public static IntValuedEnum<LiferaysassLibrary.Sass_Compiler_State > sassCompilerGetState(Pointer<LiferaysassLibrary.Sass_Compiler > compiler) {
		return FlagSet.fromValue(sassCompilerGetState(Pointer.getPeer(compiler)), LiferaysassLibrary.Sass_Compiler_State.class);
	}
	@Name("sass_compiler_get_state") 
	protected native static int sassCompilerGetState(@Ptr long compiler);
	/**
	 * Original signature : <code>Sass_Context* sass_compiler_get_context(Sass_Compiler*)</code><br>
	 * <i>native declaration : sass/context.h:137</i>
	 */
	@Name("sass_compiler_get_context") 
	public static Pointer<LiferaysassLibrary.Sass_Context > sassCompilerGetContext(Pointer<LiferaysassLibrary.Sass_Compiler > compiler) {
		return (Pointer)Pointer.pointerToAddress(sassCompilerGetContext(Pointer.getPeer(compiler)), LiferaysassLibrary.Sass_Context.class);
	}
	@Name("sass_compiler_get_context") 
	@Ptr 
	protected native static long sassCompilerGetContext(@Ptr long compiler);
	/**
	 * Original signature : <code>Sass_Options* sass_compiler_get_options(Sass_Compiler*)</code><br>
	 * <i>native declaration : sass/context.h:138</i>
	 */
	@Name("sass_compiler_get_options") 
	public static Pointer<LiferaysassLibrary.Sass_Options > sassCompilerGetOptions(Pointer<LiferaysassLibrary.Sass_Compiler > compiler) {
		return (Pointer)Pointer.pointerToAddress(sassCompilerGetOptions(Pointer.getPeer(compiler)), LiferaysassLibrary.Sass_Options.class);
	}
	@Name("sass_compiler_get_options") 
	@Ptr 
	protected native static long sassCompilerGetOptions(@Ptr long compiler);
	/**
	 * Original signature : <code>size_t sass_compiler_get_import_stack_size(Sass_Compiler*)</code><br>
	 * <i>native declaration : sass/context.h:139</i>
	 */
	@Name("sass_compiler_get_import_stack_size") 
	@Ptr 
	public static long sassCompilerGetImportStackSize(Pointer<LiferaysassLibrary.Sass_Compiler > compiler) {
		return sassCompilerGetImportStackSize(Pointer.getPeer(compiler));
	}
	@Name("sass_compiler_get_import_stack_size") 
	@Ptr 
	protected native static long sassCompilerGetImportStackSize(@Ptr long compiler);
	/**
	 * Original signature : <code>Sass_Import_Entry sass_compiler_get_last_import(Sass_Compiler*)</code><br>
	 * <i>native declaration : sass/context.h:140</i>
	 */
	@Name("sass_compiler_get_last_import") 
	public static LiferaysassLibrary.Sass_Import_Entry sassCompilerGetLastImport(Pointer<LiferaysassLibrary.Sass_Compiler > compiler) {
		return new LiferaysassLibrary.Sass_Import_Entry(sassCompilerGetLastImport(Pointer.getPeer(compiler)));
	}
	@Name("sass_compiler_get_last_import") 
	@Ptr 
	protected native static long sassCompilerGetLastImport(@Ptr long compiler);
	/**
	 * Original signature : <code>Sass_Import_Entry sass_compiler_get_import_entry(Sass_Compiler*, size_t)</code><br>
	 * <i>native declaration : sass/context.h:141</i>
	 */
	@Name("sass_compiler_get_import_entry") 
	public static LiferaysassLibrary.Sass_Import_Entry sassCompilerGetImportEntry(Pointer<LiferaysassLibrary.Sass_Compiler > compiler, @Ptr long idx) {
		return new LiferaysassLibrary.Sass_Import_Entry(sassCompilerGetImportEntry(Pointer.getPeer(compiler), idx));
	}
	@Name("sass_compiler_get_import_entry") 
	@Ptr 
	protected native static long sassCompilerGetImportEntry(@Ptr long compiler, @Ptr long idx);
	/**
	 * Push function for paths (no manipulation support for now)<br>
	 * Original signature : <code>void sass_option_push_plugin_path(Sass_Options*, const char*)</code><br>
	 * <i>native declaration : sass/context.h:144</i>
	 */
	@Name("sass_option_push_plugin_path") 
	public static void sassOptionPushPluginPath(Pointer<LiferaysassLibrary.Sass_Options > options, Pointer<Byte > path) {
		sassOptionPushPluginPath(Pointer.getPeer(options), Pointer.getPeer(path));
	}
	@Name("sass_option_push_plugin_path") 
	protected native static void sassOptionPushPluginPath(@Ptr long options, @Ptr long path);
	/**
	 * Original signature : <code>void sass_option_push_include_path(Sass_Options*, const char*)</code><br>
	 * <i>native declaration : sass/context.h:145</i>
	 */
	@Name("sass_option_push_include_path") 
	public static void sassOptionPushIncludePath(Pointer<LiferaysassLibrary.Sass_Options > options, Pointer<Byte > path) {
		sassOptionPushIncludePath(Pointer.getPeer(options), Pointer.getPeer(path));
	}
	@Name("sass_option_push_include_path") 
	protected native static void sassOptionPushIncludePath(@Ptr long options, @Ptr long path);
	public static class Sass_Function_Entry extends TypedPointer {
		public Sass_Function_Entry(long address) {
			super(address);
		}
		public Sass_Function_Entry(Pointer address) {
			super(address);
		}
	};
	public static class Sass_Importer_Entry extends TypedPointer {
		public Sass_Importer_Entry(long address) {
			super(address);
		}
		public Sass_Importer_Entry(Pointer address) {
			super(address);
		}
	};
	public static class Sass_Import_Entry extends TypedPointer {
		public Sass_Import_Entry(long address) {
			super(address);
		}
		public Sass_Import_Entry(Pointer address) {
			super(address);
		}
	};
	/** Undefined type */
	public static interface Sass_Import {
		
	};
	/** Undefined type */
	public static interface Sass_Importer {
		
	};
	/** Undefined type */
	public static interface Sass_Context {
		
	};
	/** Undefined type */
	public static interface Sass_Value {
		
	};
	/** Undefined type */
	public static interface Sass_Options {
		
	};
	/** Undefined type */
	public static interface Sass_Compiler {
		
	};
	/** Undefined type */
	public static interface Sass_File_Context {
		
	};
	/** Undefined type */
	public static interface Sass_Function {
		
	};
	/** Undefined type */
	public static interface Sass_Data_Context {
		
	};
}
