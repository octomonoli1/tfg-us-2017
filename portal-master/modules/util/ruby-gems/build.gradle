import com.liferay.gradle.util.FileUtil
import com.liferay.gradle.util.OSDetector

task downloadGems

String compassVersion = "1.0.1"

String compassUrl = "https://rubygems.org/gems/compass-${compassVersion}.gem"

classes {
	dependsOn downloadGems
}

configurations {
	jruby
}

dependencies {
	jruby group: "org.jruby", name: "jruby-complete", version: "1.6.5"
}

downloadGems {
	doLast {
		File compassFile = FileUtil.get(project, compassUrl, temporaryDir)

		javaexec {
			args configurations.jruby.singleFile
			args "-S"
			args "gem", "install"
			args "-i", "./classes"
			args relativePath(compassFile)
			args "--no-rdoc"
			args "--no-ri"

			main = "-jar"
		}

		if (OSDetector.windows) {
			ant.replace(dir: "classes/bin") {
				replacetoken "#! jruby"
				replacevalue "#!/usr/bin/env jruby"
			}
		}

		File readmeFile = file("README.markdown")

		readmeFile.withWriter {
			BufferedWriter bufferedWriter ->

			bufferedWriter.writeLine("# Ruby Gems")
			bufferedWriter.writeLine("")
			bufferedWriter.writeLine("The Ruby Gems module provides a set of " +
				"Ruby gems that Liferay can access when")
			bufferedWriter.writeLine("using JRuby. The gems included with " +
				"this module are listed below:")
			bufferedWriter.writeLine("")

			List<String> gemNames = []

			File gemsDir = file("classes/gems")

			gemsDir.eachDir {
				gemNames << it.name
			}

			gemNames.each {
				if (it != gemNames.last()) {
					bufferedWriter.writeLine("- `" + it + "`")
				}
				else {
					bufferedWriter.write("- `" + it + "`")
				}
			}
		}
	}

	onlyIf {
		!FileUtil.exists(project, "classes/gems")
	}
}