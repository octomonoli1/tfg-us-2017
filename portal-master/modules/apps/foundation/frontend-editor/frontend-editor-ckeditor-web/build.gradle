import com.liferay.gradle.util.FileUtil
import com.liferay.gradle.util.copy.StripPathSegmentsAction
import com.liferay.gradle.util.tasks.ConcatenateTask

task buildCKEditorBBCode(type: ConcatenateTask)
task buildCKEditor(type: Copy)
task buildCKEditorScayt(type: Copy)
task buildCKEditorWsc(type: Copy)

String ckEditorVersion = "4.5.8"

String ckEditorScaytUrl = "http://download.ckeditor.com/scayt/releases/scayt_${ckEditorVersion}.zip"
String ckEditorWscUrl = "http://download.ckeditor.com/wsc/releases/wsc_${ckEditorVersion}.zip"

File editorDestinationDir = file("tmp/META-INF/resources")
File editorSrcDir = file("src/main/resources/META-INF/resources")
File thirdPartyDir = file("third-party")

buildCKEditor {
	File ckEditorDestinationDir = new File(editorDestinationDir, "ckeditor")
	File ckEditorZipFile = new File(thirdPartyDir, "ckeditor_${ckEditorVersion}_liferay.zip")

	doFirst {
		delete ckEditorDestinationDir
	}

	duplicatesStrategy = "exclude"

	from(zipTree(ckEditorZipFile)) {
		eachFile new StripPathSegmentsAction(1)
		exclude "ckeditor/samples/"
		include "ckeditor/"
	}

	from new File(editorSrcDir, "_diffs")
	includeEmptyDirs = false
	into ckEditorDestinationDir

	onlyIf {
		!FileUtil.isUpToDate(project, ckEditorZipFile, ckEditorDestinationDir)
	}
}

buildCKEditorBBCode {
	File bbCodeDir = new File(editorSrcDir, "_diffs/plugins/bbcode")

	destinationFile = new File(bbCodeDir, "bbcode_parser.js")

	ext {
		autoClean = false
	}

	sourceFiles new File(bbCodeDir, "bbcode_utils.js")
	sourceFiles new File(bbCodeDir, "lexer.js")
	sourceFiles new File(bbCodeDir, "parser.js")
	sourceFiles new File(bbCodeDir, "converter.js")
}

buildCKEditorScayt {
	dependsOn buildCKEditor

	from {
		File ckEditorScaytFile = new File(thirdPartyDir, "scayt_${ckEditorVersion}.zip")

		if (!ckEditorScaytFile.exists()) {
			FileUtil.get(project, ckEditorScaytUrl, ckEditorScaytFile)
		}

		zipTree(ckEditorScaytFile)
	}

	into new File(editorDestinationDir, "ckeditor/plugins")
}

buildCKEditorWsc {
	dependsOn buildCKEditor

	from {
		File ckEditorWscFile = new File(thirdPartyDir, "wsc_${ckEditorVersion}.zip")

		if (!ckEditorWscFile.exists()) {
			FileUtil.get(project, ckEditorWscUrl, ckEditorWscFile)
		}

		zipTree(ckEditorWscFile)
	}

	into new File(editorDestinationDir, "ckeditor/plugins")
}

classes {
	dependsOn buildCKEditor, buildCKEditorScayt, buildCKEditorWsc
}

dependencies {
	provided group: "com.liferay", name: "com.liferay.frontend.editor.lang", version: "1.0.0"
	provided group: "com.liferay", name: "com.liferay.frontend.taglib", version: "2.0.0"
	provided group: "com.liferay", name: "com.liferay.registry.api", version: "1.0.0"
	provided group: "com.liferay.portal", name: "com.liferay.portal.kernel", version: "2.0.0"
	provided group: "com.liferay.portal", name: "com.liferay.util.taglib", version: "2.0.0"
	provided group: "javax.portlet", name: "portlet-api", version: "2.0"
	provided group: "javax.servlet", name: "javax.servlet-api", version: "3.0.1"
	provided group: "javax.servlet.jsp", name: "javax.servlet.jsp-api", version: "2.3.1"
	provided group: "org.osgi", name: "org.osgi.core", version: "5.0.0"
	provided group: "org.osgi", name: "org.osgi.service.component.annotations", version: "1.3.0"
}