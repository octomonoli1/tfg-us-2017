{"version":3,"sources":["/source/EventEmitter.js"],"names":[],"mappings":"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","sourcesContent":["'use strict';\n\nimport { core, array, Disposable } from 'metal';\nimport EventHandle from './EventHandle';\n\n/**\n * EventEmitter utility.\n * @constructor\n * @extends {Disposable}\n */\nclass EventEmitter extends Disposable {\n\tconstructor() {\n\t\tsuper();\n\n\t\t/**\n\t\t * Holds event listeners scoped by event type.\n\t\t * @type {!Object<string, !Array<!function()>>}\n\t\t * @protected\n\t\t */\n\t\tthis.events_ = [];\n\n\t\t/**\n\t\t * The maximum number of listeners allowed for each event type. If the number\n\t\t * becomes higher than the max, a warning will be issued.\n\t\t * @type {number}\n\t\t * @protected\n\t\t */\n\t\tthis.maxListeners_ = 10;\n\n\t\t/**\n\t\t * Configuration option which determines if an event facade should be sent\n\t\t * as a param of listeners when emitting events. If set to true, the facade\n\t\t * will be passed as the first argument of the listener.\n\t\t * @type {boolean}\n\t\t * @protected\n\t\t */\n\t\tthis.shouldUseFacade_ = false;\n\t}\n\n\t/**\n\t * Adds a listener to the end of the listeners array for the specified events.\n\t * @param {!(Array|string)} events\n\t * @param {!Function} listener\n\t * @param {boolean} opt_default Flag indicating if this listener is a default\n\t *   action for this event. Default actions are run last, and only if no previous\n\t *   listener call `preventDefault()` on the received event facade.\n\t * @return {!EventHandle} Can be used to remove the listener.\n\t */\n\taddListener(events, listener, opt_default) {\n\t\tthis.validateListener_(listener);\n\n\t\tevents = this.normalizeEvents_(events);\n\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\tthis.addSingleListener_(events[i], listener, opt_default);\n\t\t}\n\n\t\treturn new EventHandle(this, events, listener);\n\t}\n\n\t/**\n\t * Adds a listener to the end of the listeners array for a single event.\n\t * @param {string} event\n\t * @param {!Function} listener\n\t * @param {boolean} opt_default Flag indicating if this listener is a default\n\t *   action for this event. Default actions are run last, and only if no previous\n\t *   listener call `preventDefault()` on the received event facade.\n\t * @return {!EventHandle} Can be used to remove the listener.\n\t * @param {Function=} opt_origin The original function that was added as a\n\t *   listener, if there is any.\n\t * @protected\n\t */\n\taddSingleListener_(event, listener, opt_default, opt_origin) {\n\t\tthis.emit('newListener', event, listener);\n\n\t\tif (!this.events_[event]) {\n\t\t\tthis.events_[event] = [];\n\t\t}\n\t\tthis.events_[event].push({\n\t\t\tdefault: opt_default,\n\t\t\tfn: listener,\n\t\t\torigin: opt_origin\n\t\t});\n\n\t\tvar listeners = this.events_[event];\n\t\tif (listeners.length > this.maxListeners_ && !listeners.warned) {\n\t\t\tconsole.warn(\n\t\t\t\t'Possible EventEmitter memory leak detected. %d listeners added ' +\n\t\t\t\t'for event %s. Use emitter.setMaxListeners() to increase limit.',\n\t\t\t\tlisteners.length,\n\t\t\t\tevent\n\t\t\t);\n\t\t\tlisteners.warned = true;\n\t\t}\n\t}\n\n\t/**\n\t * Disposes of this instance's object references.\n\t * @override\n\t */\n\tdisposeInternal() {\n\t\tthis.events_ = [];\n\t}\n\n\t/**\n\t * Execute each of the listeners in order with the supplied arguments.\n\t * @param {string} event\n\t * @param {*} opt_args [arg1], [arg2], [...]\n\t * @return {boolean} Returns true if event had listeners, false otherwise.\n\t */\n\temit(event) {\n\t\tvar args = array.slice(arguments, 1);\n\t\tvar listeners = (this.events_[event] || []).concat();\n\n\t\tvar facade;\n\t\tif (this.getShouldUseFacade()) {\n\t\t\tfacade = {\n\t\t\t\tpreventDefault: function() {\n\t\t\t\t\tfacade.preventedDefault = true;\n\t\t\t\t},\n\t\t\t\ttarget: this,\n\t\t\t\ttype: event\n\t\t\t};\n\t\t\targs.push(facade);\n\t\t}\n\n\t\tvar defaultListeners = [];\n\t\tfor (var i = 0; i < listeners.length; i++) {\n\t\t\tif (listeners[i].default) {\n\t\t\t\tdefaultListeners.push(listeners[i]);\n\t\t\t} else {\n\t\t\t\tlisteners[i].fn.apply(this, args);\n\t\t\t}\n\t\t}\n\t\tif (!facade || !facade.preventedDefault) {\n\t\t\tfor (var j = 0; j < defaultListeners.length; j++) {\n\t\t\t\tdefaultListeners[j].fn.apply(this, args);\n\t\t\t}\n\t\t}\n\n\n\t\tif (event !== '*') {\n\t\t\tthis.emit.apply(this, ['*', event].concat(args));\n\t\t}\n\n\t\treturn listeners.length > 0;\n\t}\n\n\t/**\n\t * Gets the configuration option which determines if an event facade should\n\t * be sent as a param of listeners when emitting events. If set to true, the\n\t * facade will be passed as the first argument of the listener.\n\t * @return {boolean}\n\t */\n\tgetShouldUseFacade() {\n\t\treturn this.shouldUseFacade_;\n\t}\n\n\t/**\n\t * Returns an array of listeners for the specified event.\n\t * @param {string} event\n\t * @return {Array} Array of listeners.\n\t */\n\tlisteners(event) {\n\t\treturn (this.events_[event] || []).map(listener => listener.fn);\n\t}\n\n\t/**\n\t * Adds a listener that will be invoked a fixed number of times for the\n\t * events. After each event is triggered the specified amount of times, the\n\t * listener is removed for it.\n\t * @param {!(Array|string)} events\n\t * @param {number} amount The amount of times this event should be listened\n\t * to.\n\t * @param {!Function} listener\n\t * @return {!EventHandle} Can be used to remove the listener.\n\t */\n\tmany(events, amount, listener) {\n\t\tevents = this.normalizeEvents_(events);\n\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\tthis.many_(events[i], amount, listener);\n\t\t}\n\n\t\treturn new EventHandle(this, events, listener);\n\t}\n\n\t/**\n\t * Adds a listener that will be invoked a fixed number of times for a single\n\t * event. After the event is triggered the specified amount of times, the\n\t * listener is removed.\n\t * @param {string} event\n\t * @param {number} amount The amount of times this event should be listened\n\t * to.\n\t * @param {!Function} listener\n\t * @protected\n\t */\n\tmany_(event, amount, listener) {\n\t\tvar self = this;\n\n\t\tif (amount <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tfunction handlerInternal() {\n\t\t\tif (--amount === 0) {\n\t\t\t\tself.removeListener(event, handlerInternal);\n\t\t\t}\n\t\t\tlistener.apply(self, arguments);\n\t\t}\n\n\t\tself.addSingleListener_(event, handlerInternal, false, listener);\n\t}\n\n\t/**\n\t * Checks if a listener object matches the given listener function. To match,\n\t * it needs to either point to that listener or have it as its origin.\n\t * @param {!Object} listenerObj\n\t * @param {!Function} listener\n\t * @return {boolean}\n\t * @protected\n\t */\n\tmatchesListener_(listenerObj, listener) {\n\t\treturn listenerObj.fn === listener ||\n\t\t\t(listenerObj.origin && listenerObj.origin === listener);\n\t}\n\n\t/**\n\t * Converts the parameter to an array if only one event is given.\n\t * @param  {!(Array|string)} events\n\t * @return {!Array}\n\t * @protected\n\t */\n\tnormalizeEvents_(events) {\n\t\treturn core.isString(events) ? [events] : events;\n\t}\n\n\t/**\n\t * Removes a listener for the specified events.\n\t * Caution: changes array indices in the listener array behind the listener.\n\t * @param {!(Array|string)} events\n\t * @param {!Function} listener\n\t * @return {!Object} Returns emitter, so calls can be chained.\n\t */\n\toff(events, listener) {\n\t\tthis.validateListener_(listener);\n\n\t\tevents = this.normalizeEvents_(events);\n\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\tvar listenerObjs = this.events_[events[i]] || [];\n\t\t\tthis.removeMatchingListenerObjs_(listenerObjs, listener);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a listener to the end of the listeners array for the specified events.\n\t * @param {!(Array|string)} events\n\t * @param {!Function} listener\n\t * @return {!EventHandle} Can be used to remove the listener.\n\t */\n\ton() {\n\t\treturn this.addListener.apply(this, arguments);\n\t}\n\n\t/**\n\t * Adds a one time listener for the events. This listener is invoked only the\n\t * next time each event is fired, after which it is removed.\n\t * @param {!(Array|string)} events\n\t * @param {!Function} listener\n\t * @return {!EventHandle} Can be used to remove the listener.\n\t */\n\tonce(events, listener) {\n\t\treturn this.many(events, 1, listener);\n\t}\n\n\t/**\n\t * Removes all listeners, or those of the specified events. It's not a good\n\t * idea to remove listeners that were added elsewhere in the code,\n\t * especially when it's on an emitter that you didn't create.\n\t * @param {(Array|string)=} opt_events\n\t * @return {!Object} Returns emitter, so calls can be chained.\n\t */\n\tremoveAllListeners(opt_events) {\n\t\tif (opt_events) {\n\t\t\tvar events = this.normalizeEvents_(opt_events);\n\t\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\t\tthis.events_[events[i]] = null;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.events_ = {};\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Removes all listener objects from the given array that match the given\n\t * listener function.\n\t * @param {!Array.<Object>} listenerObjs\n\t * @param {!Function} listener\n\t * @protected\n\t */\n\tremoveMatchingListenerObjs_(listenerObjs, listener) {\n\t\tfor (var i = listenerObjs.length - 1; i >= 0; i--) {\n\t\t\tif (this.matchesListener_(listenerObjs[i], listener)) {\n\t\t\t\tlistenerObjs.splice(i, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Removes a listener for the specified events.\n\t * Caution: changes array indices in the listener array behind the listener.\n\t * @param {!(Array|string)} events\n\t * @param {!Function} listener\n\t * @return {!Object} Returns emitter, so calls can be chained.\n\t */\n\tremoveListener() {\n\t\treturn this.off.apply(this, arguments);\n\t}\n\n\t/**\n\t * By default EventEmitters will print a warning if more than 10 listeners\n\t * are added for a particular event. This is a useful default which helps\n\t * finding memory leaks. Obviously not all Emitters should be limited to 10.\n\t * This function allows that to be increased. Set to zero for unlimited.\n\t * @param {number} max The maximum number of listeners.\n\t * @return {!Object} Returns emitter, so calls can be chained.\n\t */\n\tsetMaxListeners(max) {\n\t\tthis.maxListeners_ = max;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the configuration option which determines if an event facade should\n\t * be sent as a param of listeners when emitting events. If set to true, the\n\t * facade will be passed as the first argument of the listener.\n\t * @param {boolean} shouldUseFacade\n\t * @return {!Object} Returns emitter, so calls can be chained.\n\t */\n\tsetShouldUseFacade(shouldUseFacade) {\n\t\tthis.shouldUseFacade_ = shouldUseFacade;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Checks if the given listener is valid, throwing an exception when it's not.\n\t * @param  {*} listener\n\t * @protected\n\t */\n\tvalidateListener_(listener) {\n\t\tif (!core.isFunction(listener)) {\n\t\t\tthrow new TypeError('Listener must be a function');\n\t\t}\n\t}\n}\n\nexport default EventEmitter;\n"]}