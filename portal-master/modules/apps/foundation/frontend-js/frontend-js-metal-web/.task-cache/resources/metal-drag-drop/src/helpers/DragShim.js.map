{"version":3,"sources":["/source/DragShim.js"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;KASM,Q;;;;;WAUE,kB,+BAAmB,O,EAAS,S,EAAW;AAC7C,OAAI,UAAU,QAAd;AACA,OAAI,OAAJ,EAAa;AACZ,cAAU,SAAS,UAAT,EAAV;AACA,YAAQ,KAAR,CAAc,OAAd,GAAwB,OAAxB;AACA;AACD,OAAI,aAAa,OAAO,IAAP,CAAY,SAAZ,CAAjB;AACA,UAAO,WAAW,GAAX,CAAe,UAAS,IAAT,EAAe;AACpC,QAAI,UAAU,KAAK,MAAL,CAAY,CAAZ,EAAe,CAAf,MAAsB,OAApC;AACA,WAAO,cAAI,EAAJ,CAAO,UAAU,QAAV,GAAqB,OAA5B,EAAqC,IAArC,EAA2C,UAAU,IAAV,CAA3C,CAAP;AACA,IAHM,CAAP;AAIA,G;;WAOM,U,yBAAa;AACnB,OAAI,CAAC,SAAS,QAAd,EAAwB;AACvB,aAAS,QAAT,GAAoB,SAAS,aAAT,CAAuB,KAAvB,CAApB;AACA,aAAS,QAAT,CAAkB,SAAlB,GAA8B,MAA9B;AACA,aAAS,QAAT,CAAkB,KAAlB,CAAwB,QAAxB,GAAmC,OAAnC;AACA,aAAS,QAAT,CAAkB,KAAlB,CAAwB,GAAxB,GAA8B,CAA9B;AACA,aAAS,QAAT,CAAkB,KAAlB,CAAwB,IAAxB,GAA+B,CAA/B;AACA,aAAS,QAAT,CAAkB,KAAlB,CAAwB,KAAxB,GAAgC,MAAhC;AACA,aAAS,QAAT,CAAkB,KAAlB,CAAwB,MAAxB,GAAiC,MAAjC;AACA,aAAS,QAAT,CAAkB,KAAlB,CAAwB,OAAxB,GAAkC,MAAlC;AACA,aAAS,QAAT,CAAkB,KAAlB,CAAwB,OAAxB,GAAkC,CAAlC;AACA,aAAS,QAAT,CAAkB,KAAlB,CAAwB,MAAxB,GAAiC,IAAjC;AACA,kBAAI,aAAJ,CAAkB,SAAS,QAA3B;AACA;AACD,UAAO,SAAS,QAAhB;AACA,G;;WAMM,W,0BAAc;AACpB,YAAS,UAAT,GAAsB,KAAtB,CAA4B,OAA5B,GAAsC,MAAtC;AACA,G;;WAOM,K,oBAAQ;AACd,OAAI,SAAS,QAAb,EAAuB;AACtB,kBAAI,YAAJ,CAAiB,SAAS,QAA1B;AACA,aAAS,QAAT,GAAoB,IAApB;AACA;AACD,G;;;;;;;;;;;AASF,UAAS,QAAT,GAAoB,IAApB;;mBAEe,Q","sourcesContent":["'use strict';\n\nimport dom from 'metal-dom';\n\n/**\n * Helper called by the `Drag` instance that creates a shim element\n * for attaching event listeners instead of attaching them to the\n * document. Helpful when dragging over iframes.\n */\nclass DragShim {\n\t/**\n\t * Attaches a listener for the document. If `useShim` is true, a\n\t * shim element covering the whole document will be created and\n\t * the listener will be attached to it instead.\n\t * @param {boolean} useShim\n\t * @param {!Object<string, !function()>} listeners\n\t * @return {!Array<!EventHandle>}\n\t * @static\n\t */\n\tstatic attachDocListeners(useShim, listeners) {\n\t\tvar element = document;\n\t\tif (useShim) {\n\t\t\telement = DragShim.getDocShim();\n\t\t\telement.style.display = 'block';\n\t\t}\n\t\tvar eventTypes = Object.keys(listeners);\n\t\treturn eventTypes.map(function(type) {\n\t\t\tvar isTouch = type.substr(0, 5) === 'touch';\n\t\t\treturn dom.on(isTouch ? document : element, type, listeners[type]);\n\t\t});\n\t}\n\n\t/**\n\t * Gets the document's shim element, creating it when called for the first time.\n\t * @return {!Element}\n\t * @static\n\t */\n\tstatic getDocShim() {\n\t\tif (!DragShim.docShim_) {\n\t\t\tDragShim.docShim_ = document.createElement('div');\n\t\t\tDragShim.docShim_.className = 'shim';\n\t\t\tDragShim.docShim_.style.position = 'fixed';\n\t\t\tDragShim.docShim_.style.top = 0;\n\t\t\tDragShim.docShim_.style.left = 0;\n\t\t\tDragShim.docShim_.style.width = '100%';\n\t\t\tDragShim.docShim_.style.height = '100%';\n\t\t\tDragShim.docShim_.style.display = 'none';\n\t\t\tDragShim.docShim_.style.opacity = 0;\n\t\t\tDragShim.docShim_.style.zIndex = 9999;\n\t\t\tdom.enterDocument(DragShim.docShim_);\n\t\t}\n\t\treturn DragShim.docShim_;\n\t}\n\n\t/**\n\t * Hides the document's shim element.\n\t * @static\n\t */\n\tstatic hideDocShim() {\n\t\tDragShim.getDocShim().style.display = 'none';\n\t}\n\n\t/**\n\t * Resets `DragShim`, removing the shim element from the document\n\t * and clearing its variable so it can be created again.\n\t * @static\n\t */\n\tstatic reset() {\n\t\tif (DragShim.docShim_) {\n\t\t\tdom.exitDocument(DragShim.docShim_);\n\t\t\tDragShim.docShim_ = null;\n\t\t}\n\t}\n}\n\n/**\n * The shim element. This is only created when necessary.\n * @type {Element}\n * @protected\n * @static\n */\nDragShim.docShim_ = null;\n\nexport default DragShim;\n"]}