{"version":3,"sources":["/source/Anim.js"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;KAKM,I;;;;;OASE,U,uBAAW,O,EAAS,c,EAAgB;AAC1C,OAAI,KAAK,qBAAL,CAA2B,OAA3B,EAAoC,WAApC,IAAmD,KAAK,qBAAL,CAA2B,OAA3B,EAAoC,YAApC,CAAvD,EAA0G;AACzG,WAAO,KAAK,WAAL,CAAiB,OAAjB,EAA0B,WAA1B,EAAuC,cAAvC,CAAP;AACA,IAFD,MAEO;AACN,WAAO,KAAK,WAAL,CAAiB,OAAjB,EAA0B,YAA1B,EAAwC,cAAxC,CAAP;AACA;AACD,G;;OASM,mB,gCAAoB,O,EAAS,c,EAAgB;AACnD,UAAO,KAAK,WAAL,CAAiB,OAAjB,EAA0B,WAA1B,EAAuC,cAAvC,CAAP;AACA,G;;OASM,oB,iCAAqB,O,EAAS,c,EAAgB;AACpD,QAAK,WAAL,CAAiB,OAAjB,EAA0B,YAA1B,EAAwC,cAAxC;AACA,G;;OAUM,W,wBAAY,O,EAAS,I,EAAM,c,EAAgB;AACjD,OAAI,WAAW,cAAf;AACA,OAAI,CAAC,gBAAK,KAAL,CAAW,cAAX,CAAL,EAAiC;AAChC,eAAW,KAAK,qBAAL,CAA2B,OAA3B,EAAoC,IAApC,CAAX;AACA;;AAED,OAAI,UAAU,WAAW,YAAW;AACnC,aAAI,YAAJ,CAAiB,OAAjB,EAA0B,cAAS,uBAAT,GAAmC,IAAnC,CAA1B;AACA,IAFa,EAEX,QAFW,CAAd;;AAIA,OAAI,QAAQ,SAAR,KAAQ,GAAW;AACtB,iBAAa,OAAb;AACA,sBAAkB,cAAlB;AACA,IAHD;AAIA,OAAI,oBAAoB,SAAI,IAAJ,CAAS,OAAT,EAAkB,OAAO,KAAzB,EAAgC,KAAhC,CAAxB;;AAEA,UAAO;AACN,WAAO;AADD,IAAP;AAGA,G;;OAQM,qB,kCAAsB,O,EAAS,I,EAAM;AAC3C,UAAO,CAAC,WAAW,OAAO,gBAAP,CAAwB,OAAxB,EAAiC,IAAjC,EAAuC,gBAAvC,CAAwD,OAAO,WAA/D,CAAX,KAA2F,CAA5F,IAAiG,IAAxG;AACA,G;;;;;mBAGa,I","sourcesContent":["'use strict';\n\nimport core from 'metal';\nimport { dom, features } from 'metal-dom';\n\nclass Anim {\n\t/**\n\t * Emulates animation or transition end event, the end event with longer\n\t * duration will be used by the emulation. If they have the same value,\n\t * transitionend will be emulated.\n\t * @param {!Element} element\n\t * @param {number=} opt_durationMs\n\t * @return {!Object} Object containing `abort` function.\n\t */\n\tstatic emulateEnd(element, opt_durationMs) {\n\t\tif (this.getComputedDurationMs(element, 'animation') > this.getComputedDurationMs(element, 'transition')) {\n\t\t\treturn this.emulateEnd_(element, 'animation', opt_durationMs);\n\t\t} else {\n\t\t\treturn this.emulateEnd_(element, 'transition', opt_durationMs);\n\t\t}\n\t}\n\n\t/**\n\t * Emulates animation end event. If `opt_durationMs` not specified the value\n\t * will read from computed style for animation-duration.\n\t * @param {!Element} element\n\t * @param {number=} opt_durationMs\n\t * @return {!Object} Object containing `abort` function.\n\t */\n\tstatic emulateAnimationEnd(element, opt_durationMs) {\n\t\treturn this.emulateEnd_(element, 'animation', opt_durationMs);\n\t}\n\n\t/**\n\t * Emulates transition end event. If `opt_durationMs` not specified the\n\t * value will read from computed style for transition-duration.\n\t * @param {!Element} element\n\t * @param {number=} opt_durationMs\n\t * @return {!Object} Object containing `abort` function.\n\t */\n\tstatic emulateTransitionEnd(element, opt_durationMs) {\n\t\tthis.emulateEnd_(element, 'transition', opt_durationMs);\n\t}\n\n\t/**\n\t * Emulates transition or animation end.\n\t * @param {!Element} element\n\t * @param {string} type\n\t * @param {number=} opt_durationMs\n\t * @return {!Object} Object containing `abort` function.\n\t * @protected\n\t */\n\tstatic emulateEnd_(element, type, opt_durationMs) {\n\t\tvar duration = opt_durationMs;\n\t\tif (!core.isDef(opt_durationMs)) {\n\t\t\tduration = this.getComputedDurationMs(element, type);\n\t\t}\n\n\t\tvar delayed = setTimeout(function() {\n\t\t\tdom.triggerEvent(element, features.checkAnimationEventName()[type]);\n\t\t}, duration);\n\n\t\tvar abort = function() {\n\t\t\tclearTimeout(delayed);\n\t\t\thoistedEvtHandler.removeListener();\n\t\t};\n\t\tvar hoistedEvtHandler = dom.once(element, type + 'end', abort);\n\n\t\treturn {\n\t\t\tabort: abort\n\t\t};\n\t}\n\n\t/**\n\t * Gets computed style duration for duration.\n\t * @param {!Element} element\n\t * @param {string} type\n\t * @return {number} The computed duration in milliseconds.\n\t */\n\tstatic getComputedDurationMs(element, type) {\n\t\treturn (parseFloat(window.getComputedStyle(element, null).getPropertyValue(type + '-duration')) || 0) * 1000;\n\t}\n}\n\nexport default Anim;\n"]}