{"version":3,"sources":["/source/List.js"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAYM,I;;;;;;;;;iBAML,W,wBAAY,K,EAAO;AAClB,OAAI,SAAS,MAAM,MAAnB;AACA,UAAO,MAAP,EAAe;AACd,QAAI,cAAI,KAAJ,CAAU,MAAV,EAAkB,WAAlB,CAAJ,EAAoC;AACnC;AACA;AACD,aAAS,OAAO,UAAhB;AACA;AACD,QAAK,IAAL,CAAU,cAAV,EAA0B,MAA1B;AACA,G;;;;;AAEF,eAAI,QAAJ,CAAa,IAAb;;;;;;;AAOA,MAAK,KAAL,GAAa;;;;;;;;;;;;AAYZ,SAAO;AACN,cAAW,MAAM,OADX;AAEN,YAAS,mBAAW;AACnB,WAAO,EAAP;AACA;AAJK,GAZK;;;;;;AAuBZ,aAAW;AACV,WAAQ;AADE;AAvBC,EAAb;;mBA4Be,I;AACoD,yBAAc,QAAd,CAAuB,MAAvB,EAA+B,IAA/B","sourcesContent":["'use strict';\n\nimport dom from 'metal-dom';\nimport Component from 'metal-component';\nimport Soy from 'metal-soy';\n\nimport './ListItem';\nimport templates from './List.soy';\n\n/**\n * List component.\n */\nclass List extends Component {\n\t/**\n\t * Handles click event on the list. The function fires an\n\t * {@code itemSelected} event.\n\t * @param {!Event} event The native click event\n\t */\n\thandleClick(event) {\n\t\tvar target = event.target;\n\t\twhile (target) {\n\t\t\tif (dom.match(target, '.listitem')) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttarget = target.parentNode;\n\t\t}\n\t\tthis.emit('itemSelected', target);\n\t}\n}\nSoy.register(List, templates);\n\n/**\n * List state definition.\n * @type {!Object}\n * @static\n */\nList.STATE = {\n\t/**\n\t * The list items. Each is represented by an object that can have the following keys:\n\t *   - textPrimary: The item's main content.\n\t *   - textSecondary: (Optional) The item's help content.\n\t *   - icons: (Optional) A list of icon css classes to render on the right side.\n\t *   - iconsHtml: (Optional) A list of icon css classes to render on the right side.\n\t *   - avatar: (Optional) An object that specifies the avatar's content and, optionally, a css\n\t *       class it should use.\n\t * @type {!Array<!Object>}\n\t * @default []\n\t */\n\titems: {\n\t\tvalidator: Array.isArray,\n\t\tvalueFn: function() {\n\t\t\treturn [];\n\t\t}\n\t},\n\n\t/**\n\t * The list items as HTML to be added directly to the list.\n\t * @type {string}\n\t */\n\titemsHtml: {\n\t\tisHtml: true\n\t}\n};\n\nexport default List;\nimport JQueryAdapter from 'metal-jquery-adapter/src/JQueryAdapter';JQueryAdapter.register('list', List);"]}