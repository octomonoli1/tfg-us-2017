{"version":3,"sources":["/source/RequestScreen.js"],"names":[],"mappings":"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","sourcesContent":["'use strict';\n\nimport { core } from 'metal';\nimport Ajax from 'metal-ajax';\nimport MultiMap from 'metal-multimap';\nimport CancellablePromise from 'metal-promise';\nimport errors from '../errors/errors';\nimport utils from '../utils/utils';\nimport globals from '../globals/globals';\nimport Screen from './Screen';\nimport Uri from 'metal-uri';\nimport UA from 'metal-useragent';\n\nclass RequestScreen extends Screen {\n\n\t/**\n\t * Request screen abstract class to perform io operations on descendant\n\t * screens.\n\t * @constructor\n\t * @extends {Screen}\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\t/**\n\t\t * @inheritDoc\n\t\t * @default true\n\t\t */\n\t\tthis.cacheable = true;\n\n\t\t/**\n\t\t * Holds default http headers to set on request.\n\t\t * @type {?Object=}\n\t\t * @default {\n\t\t *   'X-PJAX': 'true',\n\t\t *   'X-Requested-With': 'XMLHttpRequest'\n\t\t * }\n\t\t * @protected\n\t\t */\n\t\tthis.httpHeaders = {\n\t\t\t'X-PJAX': 'true',\n\t\t\t'X-Requested-With': 'XMLHttpRequest'\n\t\t};\n\n\t\t/**\n\t\t * Holds default http method to perform the request.\n\t\t * @type {!string}\n\t\t * @default RequestScreen.GET\n\t\t * @protected\n\t\t */\n\t\tthis.httpMethod = RequestScreen.GET;\n\n\t\t/**\n\t\t * Holds the XHR object responsible for the request.\n\t\t * @type {XMLHttpRequest}\n\t\t * @default null\n\t\t * @protected\n\t\t */\n\t\tthis.request = null;\n\n\t\t/**\n\t\t * Holds the request timeout in milliseconds.\n\t\t * @type {!number}\n\t\t * @default 30000\n\t\t * @protected\n\t\t */\n\t\tthis.timeout = 30000;\n\t}\n\n\t/**\n\t * Asserts that response status code is valid.\n\t * @param {number} status\n\t * @protected\n\t */\n\tassertValidResponseStatusCode(status) {\n\t\tif (!this.isValidResponseStatusCode(status)) {\n\t\t\tvar error = new Error(errors.INVALID_STATUS);\n\t\t\terror.invalidStatus = true;\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tbeforeUpdateHistoryPath(path) {\n\t\tvar redirectPath = this.getRequestPath();\n\t\tif (redirectPath && redirectPath !== path) {\n\t\t\treturn redirectPath;\n\t\t}\n\t\treturn path;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tbeforeUpdateHistoryState(state) {\n\t\t// If state is ours and navigate to post-without-redirect-get set\n\t\t// history state to null, that way Senna will reload the page on\n\t\t// popstate since it cannot predict post data.\n\t\tif (state.senna && state.form && state.redirectPath === state.path) {\n\t\t\treturn null;\n\t\t}\n\t\treturn state;\n\t}\n\n\t/**\n\t * Formats load path before invoking ajax call.\n\t * @param {string} path\n\t * @return {string} Formatted path;\n\t * @protected\n\t */\n\tformatLoadPath(path) {\n\t\tif (UA.isIeOrEdge && this.httpMethod === RequestScreen.GET) {\n\t\t\treturn new Uri(path).makeUnique().toString();\n\t\t}\n\t\treturn path;\n\t}\n\n\t/**\n\t * Gets the http headers.\n\t * @return {?Object=}\n\t */\n\tgetHttpHeaders() {\n\t\treturn this.httpHeaders;\n\t}\n\n\t/**\n\t * Gets the http method.\n\t * @return {!string}\n\t */\n\tgetHttpMethod() {\n\t\treturn this.httpMethod;\n\t}\n\n\t/**\n\t * Gets request path.\n\t * @return {string=}\n\t */\n\tgetRequestPath() {\n\t\tvar request = this.getRequest();\n\t\tif (request) {\n\t\t\tvar requestPath = request.requestPath;\n\t\t\tvar responseUrl = this.maybeExtractResponseUrlFromRequest(request);\n\t\t\tif (responseUrl) {\n\t\t\t\trequestPath = responseUrl;\n\t\t\t}\n\t\t\tif (UA.isIeOrEdge && this.httpMethod === RequestScreen.GET) {\n\t\t\t\trequestPath = new Uri(requestPath).removeUnique().toString();\n\t\t\t}\n\t\t\treturn utils.getUrlPath(requestPath);\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Gets the request object.\n\t * @return {?Object}\n\t */\n\tgetRequest() {\n\t\treturn this.request;\n\t}\n\n\t/**\n\t * Gets the request timeout.\n\t * @return {!number}\n\t */\n\tgetTimeout() {\n\t\treturn this.timeout;\n\t}\n\n\t/**\n\t * Checks if response succeeded. Any status code 2xx or 3xx is considered\n\t * valid.\n\t * @param {number} statusCode\n\t */\n\tisValidResponseStatusCode(statusCode) {\n\t\treturn statusCode >= 200 && statusCode <= 399;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tload(path) {\n\t\tvar cache = this.getCache();\n\t\tif (core.isDefAndNotNull(cache)) {\n\t\t\treturn CancellablePromise.resolve(cache);\n\t\t}\n\n\t\tvar body = null;\n\t\tvar httpMethod = this.httpMethod;\n\n\t\tvar headers = new MultiMap();\n\t\tObject.keys(this.httpHeaders).forEach(header => headers.add(header, this.httpHeaders[header]));\n\n\t\tif (globals.capturedFormElement) {\n\t\t\tbody = new FormData(globals.capturedFormElement);\n\t\t\thttpMethod = RequestScreen.POST;\n\t\t\tif (UA.isIeOrEdge) {\n\t\t\t\theaders.add('If-None-Match', '\"0\"');\n\t\t\t}\n\t\t}\n\n\t\tvar requestPath = this.formatLoadPath(path);\n\t\treturn Ajax\n\t\t\t.request(requestPath, httpMethod, body, headers, null, this.timeout)\n\t\t\t.then(xhr => {\n\t\t\t\tthis.setRequest(xhr);\n\t\t\t\tthis.assertValidResponseStatusCode(xhr.status);\n\t\t\t\tif (httpMethod === RequestScreen.GET && this.isCacheable()) {\n\t\t\t\t\tthis.addCache(xhr.responseText);\n\t\t\t\t}\n\t\t\t\txhr.requestPath = requestPath;\n\t\t\t\treturn xhr.responseText;\n\t\t\t})\n\t\t\t.catch((reason) => {\n\t\t\t\tswitch (reason.message) {\n\t\t\t\t\tcase errors.REQUEST_TIMEOUT:\n\t\t\t\t\t\treason.timeout = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase errors.REQUEST_ERROR:\n\t\t\t\t\t\treason.requestError = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tthrow reason;\n\t\t\t});\n\t}\n\n\t/**\n\t * The following method tries to extract the response url value by checking\n\t * the custom response header 'X-Request-URL' if proper value is not present\n\t * in XMLHttpRequest. The value of responseURL will be the final URL\n\t * obtained after any redirects. Internet Explorer, Edge and Safari <= 7\n\t * does not yet support the feature. For more information see:\n\t * https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseURL\n\t * https://xhr.spec.whatwg.org/#the-responseurl-attribute\n\t * @param {XMLHttpRequest} request\n\t * @return {?string} Response url best match.\n\t */\n\tmaybeExtractResponseUrlFromRequest(request) {\n\t\tvar responseUrl = request.responseURL;\n\t\tif (responseUrl) {\n\t\t\treturn responseUrl;\n\t\t}\n\t\treturn request.getResponseHeader(RequestScreen.X_REQUEST_URL_HEADER);\n\t}\n\n\t/**\n\t * Sets the http headers.\n\t * @param {?Object=} httpHeaders\n\t */\n\tsetHttpHeaders(httpHeaders) {\n\t\tthis.httpHeaders = httpHeaders;\n\t}\n\n\t/**\n\t * Sets the http method.\n\t * @param {!string} httpMethod\n\t */\n\tsetHttpMethod(httpMethod) {\n\t\tthis.httpMethod = httpMethod.toLowerCase();\n\t}\n\n\t/**\n\t * Sets the request object.\n\t * @param {?Object} request\n\t */\n\tsetRequest(request) {\n\t\tthis.request = request;\n\t}\n\n\t/**\n\t * Sets the request timeout in milliseconds.\n\t * @param {!number} timeout\n\t */\n\tsetTimeout(timeout) {\n\t\tthis.timeout = timeout;\n\t}\n\n}\n\n/**\n * Holds value for method get.\n * @type {string}\n * @default 'get'\n * @static\n */\nRequestScreen.GET = 'get';\n\n/**\n * Holds value for method post.\n * @type {string}\n * @default 'post'\n * @static\n */\nRequestScreen.POST = 'post';\n\n/**\n * Fallback http header to retrieve response request url.\n * @type {string}\n * @default 'X-Request-URL'\n * @static\n */\nRequestScreen.X_REQUEST_URL_HEADER = 'X-Request-URL';\n\nexport default RequestScreen;\n"]}