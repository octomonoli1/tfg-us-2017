{"version":3,"sources":["/source/UA.js"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;KASM,E;;;;;KASE,kB,iCAAqB;AAC3B,OAAI,YAAY,GAAG,OAAH,CAAW,MAAX,CAAkB,SAAlC;AACA,OAAI,SAAJ,EAAe;AACd,QAAI,YAAY,UAAU,SAA1B;AACA,QAAI,SAAJ,EAAe;AACd,YAAO,SAAP;AACA;AACD;AACD,UAAO,EAAP;AACA,G;;KASM,c,2BAAe,G,EAAK;AAC1B,UAAO,GAAG,SAAH,CAAa,OAAb,CAAqB,GAArB,MAA8B,CAAC,CAAtC;AACA,G;;KAOM,a,0BAAc,S,EAAW;;;;;;AAM/B,MAAG,SAAH,GAAe,SAAf;;;;;;;AAOA,MAAG,OAAH,GAAa,GAAG,cAAH,CAAkB,OAAlB,KAA8B,GAAG,cAAH,CAAkB,KAAlB,CAA3C;;;;;;;AAOA,MAAG,IAAH,GAAU,GAAG,cAAH,CAAkB,SAAlB,KAAgC,GAAG,cAAH,CAAkB,MAAlB,CAA1C;;;;;;;AAOA,MAAG,MAAH,GAAY,GAAG,cAAH,CAAkB,MAAlB,CAAZ;;;;;;;AAOA,MAAG,UAAH,GAAgB,GAAG,IAAH,IAAW,GAAG,MAA9B;;;;;;;AAOA,MAAG,QAAH,GAAc,CAAC,GAAG,cAAH,CAAkB,QAAlB,KAA+B,GAAG,cAAH,CAAkB,OAAlB,CAAhC,KAA+D,CAAC,GAAG,OAAnE,IAA8E,CAAC,GAAG,MAAhG;;;;;;;AAOA,MAAG,QAAH,GAAc,GAAG,cAAH,CAAkB,QAAlB,KAA+B,EAAE,GAAG,QAAH,IAAe,GAAG,OAAlB,IAA6B,GAAG,MAAlC,CAA7C;;;;;;;AAOA,MAAG,SAAH,GAAe,GAAG,cAAH,CAAkB,SAAlB,CAAf;AACA,G;;;;;;;;;;AAQF,IAAG,OAAH,GAAa;AACZ,UAAQ;AADI,EAAb;;AAIA,IAAG,aAAH,CAAiB,GAAG,kBAAH,EAAjB;;mBAEe,E","sourcesContent":["'use strict';\n\n/**\n * Metal.js browser user agent detection. It's extremely recommended the usage\n * of feature checking over browser user agent sniffing. Unfortunately, in some\n * situations feature checking can be slow or even impossible, therefore use\n * this utility with caution.\n * @see <a href=\"http://www.useragentstring.com/\">User agent strings</a>.\n */\nclass UA {\n\t/**\n\t * Gets the native userAgent string from navigator if it exists. If\n\t * navigator or navigator.userAgent string is missing, returns an empty\n\t * string.\n\t * @return {string}\n\t * @private\n\t * @static\n\t */\n\tstatic getNativeUserAgent() {\n\t\tvar navigator = UA.globals.window.navigator;\n\t\tif (navigator) {\n\t\t\tvar userAgent = navigator.userAgent;\n\t\t\tif (userAgent) {\n\t\t\t\treturn userAgent;\n\t\t\t}\n\t\t}\n\t\treturn '';\n\t}\n\n\t/**\n\t * Whether the user agent contains the given string, ignoring case.\n\t * @param {string} str\n\t * @return {boolean}\n\t * @private\n\t * @static\n\t*/\n\tstatic matchUserAgent(str) {\n\t\treturn UA.userAgent.indexOf(str) !== -1;\n\t}\n\n\t/**\n\t * Tests the user agent.\n\t * @param {string} userAgent The user agent string.\n\t * @static\n\t */\n\tstatic testUserAgent(userAgent) {\n\t\t/**\n\t\t * Holds the user agent value extracted from browser native user agent.\n\t\t * @type {string}\n\t\t * @static\n\t\t */\n\t\tUA.userAgent = userAgent;\n\n\t\t/**\n\t\t * Whether the user's browser is Opera.\n\t\t * @type {boolean}\n\t\t * @static\n\t\t */\n\t\tUA.isOpera = UA.matchUserAgent('Opera') || UA.matchUserAgent('OPR');\n\n\t\t/**\n\t\t * Whether the user's browser is IE.\n\t\t * @type {boolean}\n\t\t * @static\n\t\t */\n\t\tUA.isIe = UA.matchUserAgent('Trident') || UA.matchUserAgent('MSIE');\n\n\t\t/**\n\t\t * Whether the user's browser is Edge.\n\t\t * @type {boolean}\n\t\t * @static\n\t\t */\n\t\tUA.isEdge = UA.matchUserAgent('Edge');\n\n\t\t/**\n\t\t * Whether the user's browser is IE or Edge.\n\t\t * @type {boolean}\n\t\t * @static\n\t\t */\n\t\tUA.isIeOrEdge = UA.isIe || UA.isEdge;\n\n\t\t/**\n\t\t * Whether the user's browser is Chrome.\n\t\t * @type {boolean}\n\t\t * @static\n\t\t */\n\t\tUA.isChrome = (UA.matchUserAgent('Chrome') || UA.matchUserAgent('CriOS')) && !UA.isOpera && !UA.isEdge;\n\n\t\t/**\n\t\t * Whether the user's browser is Safari.\n\t\t * @type {boolean}\n\t\t * @static\n\t\t */\n\t\tUA.isSafari = UA.matchUserAgent('Safari') && !(UA.isChrome || UA.isOpera || UA.isEdge);\n\n\t\t/**\n\t\t * Whether the user's browser is Firefox.\n\t\t * @type {boolean}\n\t\t * @static\n\t\t */\n\t\tUA.isFirefox = UA.matchUserAgent('Firefox');\n\t}\n}\n\n/**\n * Exposes global references.\n * @type {object}\n * @static\n */\nUA.globals = {\n\twindow: window\n};\n\nUA.testUserAgent(UA.getNativeUserAgent());\n\nexport default UA;\n"]}