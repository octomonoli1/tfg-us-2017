{"version":3,"sources":["/source/globalEvalStyles.js"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;KAQM,gB;;;;;mBAQE,G,gBAAI,I,EAAM,Y,EAAc;AAC9B,OAAI,QAAQ,SAAS,aAAT,CAAuB,OAAvB,CAAZ;AACA,SAAM,SAAN,GAAkB,IAAlB;AACA,OAAI,YAAJ,EAAkB;AACjB,iBAAa,KAAb;AACA,IAFD,MAEO;AACN,aAAS,IAAT,CAAc,WAAd,CAA0B,KAA1B;AACA;AACD,UAAO,KAAP;AACA,G;;mBAWM,O,oBAAQ,I,EAAM,Y,EAAc,Y,EAAc;AAChD,OAAI,OAAO,SAAS,aAAT,CAAuB,MAAvB,CAAX;AACA,QAAK,GAAL,GAAW,YAAX;AACA,QAAK,IAAL,GAAY,IAAZ;AACA,oBAAiB,QAAjB,CAA0B,IAA1B,EAAgC,YAAhC,EAA8C,YAA9C;AACA,UAAO,IAAP;AACA,G;;mBAWM,Q,qBAAS,K,EAAO,Y,EAAc,Y,EAAc;AAClD,OAAI,WAAW,SAAX,QAAW,GAAW;AACzB,oBAAgB,cAAhB;AACA,IAFD;AAGA,OAAI,MAAM,GAAN,IAAa,MAAM,GAAN,KAAc,YAA/B,EAA6C;AAC5C,iBAAM,QAAN,CAAe,QAAf;AACA;AACA;;AAED,OAAI,MAAM,OAAN,KAAkB,OAAtB,EAA+B;AAC9B,iBAAM,QAAN,CAAe,QAAf;AACA,IAFD,MAEO;AACN,kBAAI,IAAJ,CAAS,KAAT,EAAgB,MAAhB,EAAwB,QAAxB;AACA,kBAAI,IAAJ,CAAS,KAAT,EAAgB,OAAhB,EAAyB,QAAzB;AACA;;AAED,OAAI,YAAJ,EAAkB;AACjB,iBAAa,KAAb;AACA,IAFD,MAEO;AACN,aAAS,IAAT,CAAc,WAAd,CAA0B,KAA1B;AACA;;AAED,UAAO,KAAP;AACA,G;;mBAUM,kB,+BAAmB,O,EAAS,Y,EAAc,Y,EAAc;AAC9D,OAAI,SAAS,QAAQ,gBAAR,CAAyB,YAAzB,CAAb;AACA,OAAI,OAAO,MAAP,KAAkB,CAAlB,IAAuB,YAA3B,EAAyC;AACxC,iBAAM,QAAN,CAAe,YAAf;AACA;AACA;;AAED,OAAI,YAAY,CAAhB;AACA,OAAI,WAAW,SAAX,QAAW,GAAW;AACzB,QAAI,gBAAgB,EAAE,SAAF,KAAgB,OAAO,MAA3C,EAAmD;AAClD,kBAAM,QAAN,CAAe,YAAf;AACA;AACD,IAJD;AAKA,QAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,OAAO,MAA3B,EAAmC,GAAnC,EAAwC;AACvC,qBAAiB,QAAjB,CAA0B,OAAO,CAAP,CAA1B,EAAqC,QAArC,EAA+C,YAA/C;AACA;AACD,G;;;;;mBAGa,gB","sourcesContent":["'use strict';\n\nimport { async } from 'metal';\nimport dom from './dom';\n\n/**\n * Utility functions for running styles.\n */\nclass globalEvalStyles {\n\t/**\n\t * Evaluates the given style.\n\t * @param {string} text\n\t * @param {function()=} opt_appendFn Optional function to append the node\n\t *   into document.\n\t * @return {Element} style\n\t */\n\tstatic run(text, opt_appendFn) {\n\t\tvar style = document.createElement('style');\n\t\tstyle.innerHTML = text;\n\t\tif (opt_appendFn) {\n\t\t\topt_appendFn(style);\n\t\t} else {\n\t\t\tdocument.head.appendChild(style);\n\t\t}\n\t\treturn style;\n\t}\n\n\t/**\n\t * Evaluates the given style file.\n\t * @param {string} href The file's path.\n\t * @param {function()=} opt_callback Optional function to be called\n\t *   when the styles has been run.\n\t * @param {function()=} opt_appendFn Optional function to append the node\n\t *   into document.\n\t * @return {Element} style\n\t */\n\tstatic runFile(href, opt_callback, opt_appendFn) {\n\t\tvar link = document.createElement('link');\n\t\tlink.rel = 'stylesheet';\n\t\tlink.href = href;\n\t\tglobalEvalStyles.runStyle(link, opt_callback, opt_appendFn);\n\t\treturn link;\n\t}\n\n\t/**\n\t * Evaluates the code referenced by the given style/link element.\n\t * @param {!Element} style\n\t * @param {function()=} opt_callback Optional function to be called\n\t *   when the script has been run.\n\t * @param {function()=} opt_appendFn Optional function to append the node\n\t *   into document.\n\t *  @return {Element} style\n\t */\n\tstatic runStyle(style, opt_callback, opt_appendFn) {\n\t\tvar callback = function() {\n\t\t\topt_callback && opt_callback();\n\t\t};\n\t\tif (style.rel && style.rel !== 'stylesheet') {\n\t\t\tasync.nextTick(callback);\n\t\t\treturn;\n\t\t}\n\n\t\tif (style.tagName === 'STYLE') {\n\t\t\tasync.nextTick(callback);\n\t\t} else {\n\t\t\tdom.once(style, 'load', callback);\n\t\t\tdom.once(style, 'error', callback);\n\t\t}\n\n\t\tif (opt_appendFn) {\n\t\t\topt_appendFn(style);\n\t\t} else {\n\t\t\tdocument.head.appendChild(style);\n\t\t}\n\n\t\treturn style;\n\t}\n\n\t/**\n\t * Evaluates any style present in the given element.\n\t * @params {!Element} element\n\t * @param {function()=} opt_callback Optional function to be called when the\n\t *   style has been run.\n\t * @param {function()=} opt_appendFn Optional function to append the node\n\t *   into document.\n\t */\n\tstatic runStylesInElement(element, opt_callback, opt_appendFn) {\n\t\tvar styles = element.querySelectorAll('style,link');\n\t\tif (styles.length === 0 && opt_callback) {\n\t\t\tasync.nextTick(opt_callback);\n\t\t\treturn;\n\t\t}\n\n\t\tvar loadCount = 0;\n\t\tvar callback = function() {\n\t\t\tif (opt_callback && ++loadCount === styles.length) {\n\t\t\t\tasync.nextTick(opt_callback);\n\t\t\t}\n\t\t};\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tglobalEvalStyles.runStyle(styles[i], callback, opt_appendFn);\n\t\t}\n\t}\n}\n\nexport default globalEvalStyles;\n"]}