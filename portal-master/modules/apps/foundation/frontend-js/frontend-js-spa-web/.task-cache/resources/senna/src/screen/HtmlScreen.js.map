{"version":3,"sources":["/source/HtmlScreen.js"],"names":[],"mappings":"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","sourcesContent":["'use strict';\n\nimport { core } from 'metal';\nimport { dom, globalEval, globalEvalStyles } from 'metal-dom';\nimport CancellablePromise from 'metal-promise';\nimport globals from '../globals/globals';\nimport RequestScreen from './RequestScreen';\nimport Surface from '../surface/Surface';\nimport UA from 'metal-useragent';\nimport Uri from 'metal-uri';\nimport utils from '../utils/utils';\n\nclass HtmlScreen extends RequestScreen {\n\n\t/**\n\t * Screen class that perform a request and extracts surface contents from\n\t * the response content.\n\t * @constructor\n\t * @extends {RequestScreen}\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\t/**\n\t\t * Holds the title selector. Relevant to extract the <code><title></code>\n\t\t * element from request fragments to use as the screen title.\n\t\t * @type {!string}\n\t\t * @default title\n\t\t * @protected\n\t\t */\n\t\tthis.titleSelector = 'title';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tactivate() {\n\t\tsuper.activate();\n\t\tthis.releaseVirtualDocument();\n\t\tthis.pendingStyles = null;\n\t}\n\n\t/**\n\t * Allocates virtual document for content. After allocated virtual document\n\t * can be accessed by <code>this.virtualDocument</code>.\n\t * @param {!string} htmlString\n\t */\n\tallocateVirtualDocumentForContent(htmlString) {\n\t\tif (!this.virtualDocument) {\n\t\t\tthis.virtualDocument = globals.document.createElement('html');\n\t\t}\n\n\t\tthis.copyNodeAttributesFromContent_(htmlString, this.virtualDocument);\n\n\t\tthis.virtualDocument.innerHTML = htmlString;\n\t}\n\n\t/**\n\t * Customizes logic to append styles into document. Relevant to when\n\t * tracking a style by id make sure to re-positions the new style in the\n\t * same dom order.\n\t * @param {Element} newStyle\n\t */\n\tappendStyleIntoDocument_(newStyle) {\n\t\tvar isTemporaryStyle = dom.match(newStyle, HtmlScreen.selectors.stylesTemporary);\n\t\tif (isTemporaryStyle) {\n\t\t\tthis.pendingStyles.push(newStyle);\n\t\t\tif (UA.isIe && newStyle.href) {\n\t\t\t\tnewStyle.href = new Uri(newStyle.href).makeUnique().toString();\n\t\t\t}\n\t\t}\n\t\tif (newStyle.id) {\n\t\t\tvar styleInDoc = globals.document.getElementById(newStyle.id);\n\t\t\tif (styleInDoc) {\n\t\t\t\tstyleInDoc.parentNode.insertBefore(newStyle, styleInDoc.nextSibling);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tglobals.document.head.appendChild(newStyle);\n\t}\n\n\t/**\n\t * If body is used as surface forces the requested documents to have same id\n\t * of the initial page.\n\t */\n\tassertSameBodyIdInVirtualDocument() {\n\t\tvar bodySurface = this.virtualDocument.querySelector('body');\n\t\tif (!globals.document.body.id) {\n\t\t\tglobals.document.body.id = 'senna_surface_' + core.getUid();\n\t\t}\n\t\tif (bodySurface) {\n\t\t\tbodySurface.id = globals.document.body.id;\n\t\t}\n\t}\n\n\t/**\n\t * Copies attributes from the <html> tag of content to the given node.\n\t */\n\tcopyNodeAttributesFromContent_(content, node) {\n\t\tcontent = content.replace(/[<]\\s*html/ig, '<senna');\n\t\tcontent = content.replace(/\\/html\\s*\\>/ig, '/senna>');\n\t\tnode.innerHTML = content;\n\t\tvar placeholder = node.querySelector('senna');\n\t\tif (placeholder) {\n\t\t\tutils.clearNodeAttributes(node);\n\t\t\tutils.copyNodeAttributes(placeholder, node);\n\t\t}\n\t}\n\n\t/**\n\t * @Override\n\t */\n\tdisposeInternal() {\n\t\tthis.disposePendingStyles();\n\t\tsuper.disposeInternal();\n\t}\n\n\t/**\n\t * Disposes pending styles if screen get disposed prior to its loading.\n\t */\n\tdisposePendingStyles() {\n\t\tif (this.pendingStyles) {\n\t\t\tthis.pendingStyles.forEach((style) => dom.exitDocument(style));\n\t\t}\n\t}\n\n\t/**\n\t * @Override\n\t */\n\tevaluateScripts(surfaces) {\n\t\tvar evaluateTrackedScripts = this.evaluateTrackedResources_(\n\t\t\tglobalEval.runScriptsInElement, HtmlScreen.selectors.scripts,\n\t\t\tHtmlScreen.selectors.scriptsTemporary, HtmlScreen.selectors.scriptsPermanent);\n\n\t\treturn evaluateTrackedScripts.then(() => super.evaluateScripts(surfaces));\n\t}\n\n\t/**\n\t * @Override\n\t */\n\tevaluateStyles(surfaces) {\n\t\tthis.pendingStyles = [];\n\t\tvar evaluateTrackedStyles = this.evaluateTrackedResources_(\n\t\t\tglobalEvalStyles.runStylesInElement, HtmlScreen.selectors.styles,\n\t\t\tHtmlScreen.selectors.stylesTemporary, HtmlScreen.selectors.stylesPermanent,\n\t\t\tthis.appendStyleIntoDocument_.bind(this));\n\n\t\treturn evaluateTrackedStyles.then(() => super.evaluateStyles(surfaces));\n\t}\n\n\t/**\n\t * Evaluates tracked resources inside incoming fragment and remove existing\n\t * temporary resources.\n\t * @param {?function()} appendFn Function to append the node into document.\n\t * @param {!string} selector Selector used to find resources to track.\n\t * @param {!string} selectorTemporary Selector used to find temporary\n\t *     resources to track.\n\t * @param {!string} selectorPermanent Selector used to find permanent\n\t *     resources to track.\n\t * @param {!function} opt_appendResourceFn Optional function used to\n\t *     evaluate fragment containing resources.\n\t * @return {CancellablePromise} Deferred that waits resources evaluation to\n\t *     complete.\n\t * @private\n\t */\n\tevaluateTrackedResources_(evaluatorFn, selector, selectorTemporary, selectorPermanent, opt_appendResourceFn) {\n\t\tvar tracked = this.virtualQuerySelectorAll_(selector);\n\t\tvar temporariesInDoc = this.querySelectorAll_(selectorTemporary);\n\t\tvar permanentsInDoc = this.querySelectorAll_(selectorPermanent);\n\n\t\t// Adds permanent resources in document to cache.\n\t\tpermanentsInDoc.forEach((resource) => {\n\t\t\tvar resourceKey = this.getResourceKey_(resource);\n\t\t\tif (resourceKey) {\n\t\t\t\tHtmlScreen.permanentResourcesInDoc[resourceKey] = true;\n\t\t\t}\n\t\t});\n\n\t\tvar frag = dom.buildFragment();\n\t\ttracked.forEach((resource) => {\n\t\t\tvar resourceKey = this.getResourceKey_(resource);\n\t\t\t// Do not load permanent resources if already in document.\n\t\t\tif (!HtmlScreen.permanentResourcesInDoc[resourceKey]) {\n\t\t\t\tfrag.appendChild(resource);\n\t\t\t}\n\t\t\t// If resource has key and is permanent add to cache.\n\t\t\tif (resourceKey && dom.match(resource, selectorPermanent)) {\n\t\t\t\tHtmlScreen.permanentResourcesInDoc[resourceKey] = true;\n\t\t\t}\n\t\t});\n\n\t\treturn new CancellablePromise((resolve) => {\n\t\t\tevaluatorFn(frag, () => {\n\t\t\t\ttemporariesInDoc.forEach((resource) => dom.exitDocument(resource));\n\t\t\t\tresolve();\n\t\t\t}, opt_appendResourceFn);\n\t\t});\n\t}\n\n\t/**\n\t * @Override\n\t */\n\tflip(surfaces) {\n\t\treturn super.flip(surfaces).then(() => {\n\t\t\tutils.clearNodeAttributes(document.documentElement);\n\t\t\tutils.copyNodeAttributes(this.virtualDocument, document.documentElement);\n\t\t});\n\t}\n\n\t/**\n\t * Extracts a key to identify the resource based on its attributes.\n\t * @param {Element} resource\n\t * @return {string} Extracted key based on resource attributes in order of\n\t *     preference: id, href, src.\n\t */\n\tgetResourceKey_(resource) {\n\t\treturn resource.id || resource.href || resource.src || '';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tgetSurfaceContent(surfaceId) {\n\t\tvar surface = this.virtualDocument.querySelector('#' + surfaceId);\n\t\tif (surface) {\n\t\t\tvar defaultChild = surface.querySelector('#' + surfaceId + '-' + Surface.DEFAULT);\n\t\t\tif (defaultChild) {\n\t\t\t\treturn defaultChild.innerHTML;\n\t\t\t}\n\t\t\treturn surface.innerHTML; // If default content not found, use surface content\n\t\t}\n\t}\n\n\t/**\n\t * Gets the title selector.\n\t * @return {!string}\n\t */\n\tgetTitleSelector() {\n\t\treturn this.titleSelector;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tload(path) {\n\t\treturn super.load(path)\n\t\t\t.then(content => {\n\t\t\t\tthis.allocateVirtualDocumentForContent(content);\n\t\t\t\tthis.resolveTitleFromVirtualDocument();\n\t\t\t\tthis.assertSameBodyIdInVirtualDocument();\n\t\t\t\treturn content;\n\t\t\t});\n\t}\n\n\t/**\n\t * Queries elements from virtual document and returns an array of elements.\n\t * @param {!string} selector\n\t * @return {array.<Element>}\n\t */\n\tvirtualQuerySelectorAll_(selector) {\n\t\treturn Array.prototype.slice.call(this.virtualDocument.querySelectorAll(selector));\n\t}\n\n\t/**\n\t * Queries elements from document and returns an array of elements.\n\t * @param {!string} selector\n\t * @return {array.<Element>}\n\t */\n\tquerySelectorAll_(selector) {\n\t\treturn Array.prototype.slice.call(globals.document.querySelectorAll(selector));\n\t}\n\n\t/**\n\t * Releases virtual document allocated for content.\n\t */\n\treleaseVirtualDocument() {\n\t\tthis.virtualDocument = null;\n\t}\n\n\t/**\n\t * Resolves title from allocated virtual document.\n\t */\n\tresolveTitleFromVirtualDocument() {\n\t\tvar title = this.virtualDocument.querySelector(this.titleSelector);\n\t\tif (title) {\n\t\t\tthis.setTitle(title.innerHTML.trim());\n\t\t}\n\t}\n\n\t/**\n\t * Sets the title selector.\n\t * @param {!string} titleSelector\n\t */\n\tsetTitleSelector(titleSelector) {\n\t\tthis.titleSelector = titleSelector;\n\t}\n\n}\n\n/**\n * Helper selectors for tracking resources.\n * @type {object}\n * @protected\n * @static\n */\nHtmlScreen.selectors = {\n\tscripts: 'script[data-senna-track]',\n\tscriptsPermanent: 'script[data-senna-track=\"permanent\"]',\n\tscriptsTemporary: 'script[data-senna-track=\"temporary\"]',\n\tstyles: 'style[data-senna-track],link[data-senna-track]',\n\tstylesPermanent: 'style[data-senna-track=\"permanent\"],link[data-senna-track=\"permanent\"]',\n\tstylesTemporary: 'style[data-senna-track=\"temporary\"],link[data-senna-track=\"temporary\"]'\n};\n\n/**\n * Caches permanent resource keys.\n * @type {object}\n * @protected\n * @static\n */\nHtmlScreen.permanentResourcesInDoc = {};\n\nexport default HtmlScreen;\n"]}