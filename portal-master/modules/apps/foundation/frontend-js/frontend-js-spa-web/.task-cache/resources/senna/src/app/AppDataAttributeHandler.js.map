{"version":3,"sources":["/source/AppDataAttributeHandler.js"],"names":[],"mappings":"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","sourcesContent":["'use strict';\n\nimport { core, object, Disposable } from 'metal';\nimport dataAttributes from './dataAttributes';\nimport globals from '../globals/globals';\nimport App from './App';\nimport HtmlScreen from '../screen/HtmlScreen';\nimport Route from '../route/Route';\n\nclass AppDataAttributeHandler extends Disposable {\n\n\t/**\n\t * Initilizes App, register surfaces and routes from data attributes.\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\t/**\n\t\t * Holds the app reference initialized by data attributes.\n\t\t * @type {App}\n\t\t * @default null\n\t\t */\n\t\tthis.app = null;\n\n\t\t/**\n\t\t * Holds the base element to search initialization data attributes. This\n\t\t * element is the container used to enable initialization based on the\n\t\t * presence of `data-senna` attribute.\n\t\t * @type {Element}\n\t\t * @default null\n\t\t */\n\t\tthis.baseElement = null;\n\t}\n\n\t/**\n\t * Inits application based on information scanned from document.\n\t */\n\thandle() {\n\t\tif (!core.isElement(this.baseElement)) {\n\t\t\tthrow new Error('Senna data attribute handler base element ' +\n\t\t\t\t'not set or invalid, try setting a valid element that ' +\n\t\t\t\t'contains a `data-senna` attribute.');\n\t\t}\n\n\t\tif (!this.baseElement.hasAttribute(dataAttributes.senna)) {\n\t\t\tconsole.log('Senna was not initialized from data attributes. ' +\n\t\t\t\t'In order to enable its usage from data attributes try setting ' +\n\t\t\t\t'in the base element, e.g. `<body data-senna>`.');\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.app) {\n\t\t\tthrow new Error('Senna app was already initialized.');\n\t\t}\n\n\t\tconsole.log('Senna initialized from data attribute.');\n\n\t\tthis.app = new App();\n\t\tthis.maybeAddRoutes_();\n\t\tthis.maybeAddSurfaces_();\n\t\tthis.maybeSetBasePath_();\n\t\tthis.maybeSetLinkSelector_();\n\t\tthis.maybeSetLoadingCssClass_();\n\t\tthis.maybeSetUpdateScrollPosition_();\n\t\tthis.maybeDispatch_();\n\t}\n\n\t/**\n\t * Disposes of this instance's object references.\n\t * @override\n\t */\n\tdisposeInternal() {\n\t\tif (this.app) {\n\t\t\tthis.app.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Gets the app reference.\n\t * @return {App}\n\t */\n\tgetApp() {\n\t\treturn this.app;\n\t}\n\n\t/**\n\t * Gets the base element.\n\t * @return {Element} baseElement\n\t */\n\tgetBaseElement() {\n\t\treturn this.baseElement;\n\t}\n\n\t/**\n\t * Maybe adds app routes from link elements that are `senna-route`.\n\t */\n\tmaybeAddRoutes_() {\n\t\tvar routesSelector = 'link[rel=\"senna-route\"]';\n\t\tthis.querySelectorAllAsArray_(routesSelector).forEach((link) => this.maybeParseLinkRoute_(link));\n\t\tif (!this.app.hasRoutes()) {\n\t\t\tthis.app.addRoutes(new Route(/.*/, HtmlScreen));\n\t\t\tconsole.log('Senna can\\'t find route elements, adding default.');\n\t\t}\n\t}\n\n\t/**\n\t * Maybe adds app surfaces by scanning `data-senna-surface` data attribute.\n\t */\n\tmaybeAddSurfaces_() {\n\t\tvar surfacesSelector = '[' + dataAttributes.surface + ']';\n\t\tthis.querySelectorAllAsArray_(surfacesSelector).forEach((surfaceElement) => {\n\t\t\tthis.updateElementIdIfSpecialSurface_(surfaceElement);\n\t\t\tthis.app.addSurfaces(surfaceElement.id);\n\t\t});\n\t}\n\n\t/**\n\t * Dispatches app navigation to the current path when initializes.\n\t */\n\tmaybeDispatch_() {\n\t\tif (this.baseElement.hasAttribute(dataAttributes.dispatch)) {\n\t\t\tthis.app.dispatch();\n\t\t}\n\t}\n\n\t/**\n\t * Adds app route by parsing valid link elements. A valid link element is of\n\t * the kind `rel=\"senna-route\"`.\n\t * @param {Element} link\n\t */\n\tmaybeParseLinkRoute_(link) {\n\t\tvar route = new Route(this.maybeParseLinkRoutePath_(link), this.maybeParseLinkRouteHandler_(link));\n\t\tthis.app.addRoutes(route);\n\t\tconsole.log('Senna scanned route ' + route.getPath());\n\t}\n\n\t/**\n\t * Maybe parse link route handler.\n\t * @param {Element} link\n\t * @return {?string}\n\t */\n\tmaybeParseLinkRouteHandler_(link) {\n\t\tvar handler = link.getAttribute('type');\n\t\tif (core.isDefAndNotNull(handler)) {\n\t\t\thandler = object.getObjectByName(handler);\n\t\t}\n\t\treturn handler;\n\t}\n\n\t/**\n\t * Maybe parse link route path.\n\t * @param {Element} link\n\t * @return {?string}\n\t */\n\tmaybeParseLinkRoutePath_(link) {\n\t\tvar path = link.getAttribute('href');\n\t\tif (core.isDefAndNotNull(path)) {\n\t\t\tif (path.indexOf('regex:') === 0) {\n\t\t\t\tpath = new RegExp(path.substring(6));\n\t\t\t}\n\t\t}\n\t\treturn path;\n\t}\n\n\t/**\n\t * Maybe sets app base path from `data-senna-base-path` data attribute.\n\t */\n\tmaybeSetBasePath_() {\n\t\tvar basePath = this.baseElement.getAttribute(dataAttributes.basePath);\n\t\tif (core.isDefAndNotNull(basePath)) {\n\t\t\tthis.app.setBasePath(basePath);\n\t\t\tconsole.log('Senna scanned base path ' + basePath);\n\t\t}\n\t}\n\n\t/**\n\t * Maybe sets app link selector from `data-senna-link-selector` data\n\t * attribute.\n\t */\n\tmaybeSetLinkSelector_() {\n\t\tvar linkSelector = this.baseElement.getAttribute(dataAttributes.linkSelector);\n\t\tif (core.isDefAndNotNull(linkSelector)) {\n\t\t\tthis.app.setLinkSelector(linkSelector);\n\t\t\tconsole.log('Senna scanned link selector ' + linkSelector);\n\t\t}\n\t}\n\n\t/**\n\t * Maybe sets app link loading css class from `data-senna-loading-css-class`\n\t * data attribute.\n\t */\n\tmaybeSetLoadingCssClass_() {\n\t\tvar loadingCssClass = this.baseElement.getAttribute(dataAttributes.loadingCssClass);\n\t\tif (core.isDefAndNotNull(loadingCssClass)) {\n\t\t\tthis.app.setLoadingCssClass(loadingCssClass);\n\t\t\tconsole.log('Senna scanned loading css class ' + loadingCssClass);\n\t\t}\n\t}\n\n\t/**\n\t * Maybe sets app update scroll position from\n\t * `data-senna-update-scroll-position` data attribute.\n\t */\n\tmaybeSetUpdateScrollPosition_() {\n\t\tvar updateScrollPosition = this.baseElement.getAttribute(dataAttributes.updateScrollPosition);\n\t\tif (core.isDefAndNotNull(updateScrollPosition)) {\n\t\t\tif (updateScrollPosition === 'false') {\n\t\t\t\tthis.app.setUpdateScrollPosition(false);\n\t\t\t} else {\n\t\t\t\tthis.app.setUpdateScrollPosition(true);\n\t\t\t}\n\t\t\tconsole.log('Senna scanned update scroll position ' + updateScrollPosition);\n\t\t}\n\t}\n\n\t/**\n\t * Queries elements from document and returns an array of elements.\n\t * @param {!string} selector\n\t * @return {array.<Element>}\n\t */\n\tquerySelectorAllAsArray_(selector) {\n\t\treturn Array.prototype.slice.call(globals.document.querySelectorAll(selector));\n\t}\n\n\t/**\n\t * Updates element id if handled as special surface element. Some surfaces\n\t * are slightly different from others, like when threating <code>body</code>\n\t * as surface.\n\t * @param {Element} element\n\t */\n\tupdateElementIdIfSpecialSurface_(element) {\n\t\tif (!element.id && element === globals.document.body) {\n\t\t\telement.id = 'senna_surface_' + core.getUid();\n\t\t}\n\t}\n\n\t/**\n\t * Sets the base element.\n\t * @param {Element} baseElement\n\t */\n\tsetBaseElement(baseElement) {\n\t\tthis.baseElement = baseElement;\n\t}\n\n}\n\nexport default AppDataAttributeHandler;\n"]}