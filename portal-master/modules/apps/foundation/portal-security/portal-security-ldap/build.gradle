import com.liferay.gradle.util.FileUtil

import org.apache.tools.ant.filters.FixCrLfFilter

apply plugin: "antlr"

String parserDirName = "com/liferay/portal/security/ldap/internal/validator/parser"

cleanGenerateGrammarSource {
	delete "src/main/java/" + parserDirName
	delete "src/main/resources/" + parserDirName
}

compileJava {
	dependsOn.remove "generateGrammarSource"
}

dependencies {
	antlr group: "org.antlr", name: "antlr", version: "3.0.1"

	provided group: "biz.aQute.bnd", name: "biz.aQute.bndlib", version: "3.1.0"
	provided group: "com.liferay", name: "com.liferay.portal.configuration.metatype", version: "2.0.0"
	provided group: "com.liferay", name: "com.liferay.portal.instance.lifecycle", version: "3.0.0"
	provided group: "com.liferay", name: "com.liferay.portal.security.exportimport.api", version: "2.0.0"
	provided group: "com.liferay.portal", name: "com.liferay.portal.impl", version: "2.0.0"
	provided group: "com.liferay.portal", name: "com.liferay.portal.kernel", version: "2.0.0"
	provided group: "commons-lang", name: "commons-lang", version: "2.6"
	provided group: "javax.portlet", name: "portlet-api", version: "2.0"
	provided group: "javax.servlet", name: "javax.servlet-api", version: "3.0.1"
	provided group: "org.osgi", name: "org.osgi.core", version: "5.0.0"
	provided group: "org.osgi", name: "org.osgi.service.cm", version: "1.5.0"
	provided group: "org.osgi", name: "org.osgi.service.component.annotations", version: "1.3.0"
}

generateGrammarSource {
	File grammarFile = file("src/main/antlr/${parserDirName}/LDAPFilter.g")

	deleteAllActions()

	dependsOn cleanGenerateGrammarSource

	doFirst {
		javaexec {
			args "-o", FileUtil.relativize(generateGrammarSource.outputDirectory, grammarFile.parentFile)
			args grammarFile.name

			classpath = generateGrammarSource.antlrClasspath
			main = "org.antlr.Tool"
			maxHeapSize = generateGrammarSource.maxHeapSize
			workingDir = grammarFile.parentFile
		}
	}

	doLast {
		copy {
			eachFile {
				if (name in ["LDAPFilterLexer.java", "LDAPFilterParser.java"]) {
					String javaClass = name[0 .. -6]

					filter {
						String line ->

						line.replace "public class ${javaClass}", """\
@SuppressWarnings(\"all\")
public class ${javaClass}"""
					}
				}
			}

			filter(FixCrLfFilter, javafiles: true, tab: FixCrLfFilter.AddAsisRemove.newInstance("add"))

			from outputDirectory
			include "**/*.java"
			into "src/main/java/" + parserDirName
		}

		copy {
			from outputDirectory
			exclude "**/*.java"
			into "src/main/resources/" + parserDirName
		}
	}

	ext {
		autoClean = false
	}

	maxHeapSize = "1512m"
	outputDirectory = new File(temporaryDir, "generated")
}