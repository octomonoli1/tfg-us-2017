{"version":3,"sources":["Drag.js"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAgBM;;;;;;;AAIL,WAJK,IAIL,CAAY,UAAZ,EAAwB;yBAJnB,MAImB;;gDACvB,kBAAM,UAAN,GADuB;;;;;;;AAQvB,SAAK,sBAAL,GAA8B,IAA9B;;;;;;;AARuB,QAevB,CAAK,iBAAL,GAAyB,IAAzB;;;;;;;AAfuB,QAsBvB,CAAK,gBAAL,GAAwB,CAAxB;;;;;;;AAtBuB,QA6BvB,CAAK,SAAL,GAAiB,KAAjB;;;;;;;AA7BuB,QAoCvB,CAAK,YAAL,GAAoB,0BAApB;;;;;;;AApCuB,QA2CvB,CAAK,gBAAL,GAAwB,+BAAxB;;;;;;;AA3CuB,QAkDvB,CAAK,SAAL,GAAiB,IAAjB;;;;;;;;AAlDuB,QA0DvB,CAAK,iBAAL,GAAyB,IAAzB;;;;;;;AA1DuB,QAiEvB,CAAK,cAAL,GAAsB,0BAAtB;;;;;;;;AAjEuB,QAyEvB,CAAK,aAAL,GAAqB,IAArB;;;;;;;;;AAzEuB,QAkFvB,CAAK,kBAAL,GAA0B,IAA1B,CAlFuB;;AAoFvB,SAAK,mBAAL,GApFuB;AAqFvB,SAAK,EAAL,CAAQ,KAAK,MAAL,CAAY,IAAZ,EAAkB,MAAK,cAAL,EAAqB,IAA/C,EArFuB;AAsFvB,SAAK,EAAL,CAAQ,KAAK,MAAL,CAAY,GAAZ,EAAiB,MAAK,aAAL,EAAoB,IAA7C,EAtFuB;AAuFvB,SAAK,EAAL,CAAQ,gBAAR,EAA0B,MAAK,qBAAL,CAA2B,IAA3B,OAA1B,EAvFuB;AAwFvB,SAAK,EAAL,CAAQ,kBAAR,EAA4B,MAAK,uBAAL,CAA6B,IAA7B,OAA5B,EAxFuB;AAyFvB,SAAK,gBAAL,CAAsB,EAAtB,CAAyB,aAAzB,EAAwC,MAAK,kBAAL,CAAwB,IAAxB,OAAxC,EAzFuB;AA0FvB,iBAAI,EAAJ,CAAO,QAAP,EAAiB,SAAjB,EAA4B,MAAK,cAAL,CAAoB,IAApB,OAA5B,EA1FuB;;GAAxB;;;;;;;;AAJK,iBAqGL,qDAAsB;AACrB,OAAI,WAAW;AACd,aAAS,KAAK,oBAAL,CAA0B,IAA1B,CAA+B,IAA/B,CAAT;AACA,eAAW,KAAK,qBAAL,CAA2B,IAA3B,CAAgC,IAAhC,CAAX;AACA,gBAAY,KAAK,qBAAL,CAA2B,IAA3B,CAAgC,IAAhC,CAAZ;IAHG,CADiB;AAMrB,OAAI,aAAa,OAAO,IAAP,CAAY,QAAZ,CAAb,CANiB;AAOrB,QAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,WAAW,MAAX,EAAmB,GAAvC,EAA4C;AAC3C,QAAI,aAAa,SAAS,WAAW,CAAX,CAAT,CAAb,CADuC;AAE3C,QAAI,YAAK,QAAL,CAAc,KAAK,OAAL,CAAlB,EAAiC;AAChC,UAAK,cAAL,CAAoB,GAApB,CAAwB,cAAI,QAAJ,CAAa,KAAK,SAAL,EAAgB,WAAW,CAAX,CAA7B,EAA4C,KAAK,OAAL,EAAc,UAA1D,CAAxB,EADgC;KAAjC,MAEO;AACN,UAAK,cAAL,CAAoB,GAApB,CAAwB,cAAI,EAAJ,CAAO,KAAK,OAAL,EAAc,WAAW,CAAX,CAArB,EAAoC,UAApC,CAAxB,EADM;KAFP;IAFD;;;AA5GI,iBA2HL,iDAAoB;AACnB,UAAO;AACN,iBAAa,KAAK,sBAAL;AACb,YAAQ,KAAK,iBAAL;AACR,eAAW,KAAK,kBAAL,CAAwB,CAAxB;AACX,eAAW,KAAK,kBAAL,CAAwB,CAAxB;AACX,OAAG,KAAK,aAAL,CAAmB,IAAnB;AACH,OAAG,KAAK,aAAL,CAAmB,GAAnB;IANJ,CADmB;;;AA3Hf,iBA2IL,+DAA0B,OAAO;AAChC,QAAK,aAAL,GAAqB,cAAO,KAAP,CAAa,EAAb,EAAiB,mBAAS,SAAT,CAAmB,KAAK,iBAAL,EAAwB,IAA3C,CAAjB,CAArB,CADgC;AAEhC,QAAK,kBAAL,GAA0B;AACzB,OAAG,KAAK,iBAAL,CAAuB,UAAvB;AACH,OAAG,KAAK,iBAAL,CAAuB,SAAvB;IAFJ,CAFgC;AAMhC,OAAI,YAAK,KAAL,CAAW,MAAM,OAAN,CAAf,EAA+B;AAC9B,SAAK,SAAL,GAAiB;AAChB,QAAG,MAAM,OAAN;AACH,QAAG,MAAM,OAAN;KAFJ,CAD8B;AAK9B,SAAK,iBAAL,GAAyB;AACxB,QAAG,KAAK,aAAL,CAAmB,IAAnB,GAA0B,KAAK,SAAL,CAAe,CAAf;AAC7B,QAAG,KAAK,aAAL,CAAmB,GAAnB,GAAyB,KAAK,SAAL,CAAe,CAAf;KAF7B,CAL8B;IAA/B;;;AAjJI,iBAmKL,uCAAc,OAAO;AACpB,UAAO,CAAC,KAAK,QAAL,KACN,CAAC,YAAK,KAAL,CAAW,MAAM,MAAN,CAAZ,IAA6B,MAAM,MAAN,KAAiB,CAAjB,CADxB,IAEN,CAAC,KAAK,UAAL,EAAD,IACA,KAAK,eAAL,CAAqB,MAAM,MAAN,CAHf,CADa;;;AAnKhB,iBA8KL,yDAAwB;AACvB,OAAI,KAAK,sBAAL,EAA6B;AAChC,SAAK,sBAAL,CAA4B,YAA5B,CAAyC,cAAzC,EAAyD,OAAzD,EADgC;AAEhC,kBAAI,aAAJ,CAAkB,KAAK,sBAAL,EAA6B,KAAK,aAAL,CAA/C,CAFgC;AAGhC,QAAI,KAAK,eAAL,KAAyB,KAAK,WAAL,CAAiB,KAAjB,EAAwB;AACpD,mBAAI,YAAJ,CAAiB,KAAK,sBAAL,CAAjB,CADoD;KAArD;IAHD;AAOA,QAAK,sBAAL,GAA8B,IAA9B,CARuB;AASvB,QAAK,iBAAL,GAAyB,IAAzB,CATuB;AAUvB,QAAK,aAAL,GAAqB,IAArB,CAVuB;AAWvB,QAAK,kBAAL,GAA0B,IAA1B,CAXuB;AAYvB,QAAK,SAAL,GAAiB,IAAjB,CAZuB;AAavB,QAAK,iBAAL,GAAyB,IAAzB,CAbuB;AAcvB,QAAK,SAAL,GAAiB,KAAjB,CAduB;AAevB,QAAK,YAAL,CAAkB,kBAAlB,GAfuB;;;AA9KnB,iBAqML,+CAAmB;AAClB,OAAI,cAAc,KAAK,iBAAL,CAAuB,SAAvB,CAAiC,IAAjC,CAAd,CADc;AAElB,eAAY,KAAZ,CAAkB,QAAlB,GAA6B,UAA7B,CAFkB;AAGlB,eAAY,KAAZ,CAAkB,IAAlB,GAAyB,KAAK,kBAAL,CAAwB,CAAxB,GAA4B,IAA5B,CAHP;AAIlB,eAAY,KAAZ,CAAkB,GAAlB,GAAwB,KAAK,kBAAL,CAAwB,CAAxB,GAA4B,IAA5B,CAJN;AAKlB,iBAAI,MAAJ,CAAW,KAAK,iBAAL,CAAuB,UAAvB,EAAmC,WAA9C,EALkB;AAMlB,UAAO,WAAP,CANkB;;;AArMd,iBAmNL,iCAAW,QAAQ;AAClB,QAAK,gBAAL,CAAsB,MAAtB,EADkB;AAElB,QAAK,iBAAL,CAAuB,MAAvB,EAFkB;AAGlB,QAAK,kBAAL,CAAwB,MAAxB,EAHkB;;;AAnNd,iBA8NL,6CAAiB,QAAQ;AACxB,OAAI,KAAK,IAAL,KAAc,GAAd,EAAmB;AACtB,WAAO,GAAP,GAAa,KAAK,aAAL,CAAmB,GAAnB,CADS;AAEtB,WAAO,MAAP,GAAgB,KAAK,aAAL,CAAmB,MAAnB,CAFM;IAAvB,MAGO,IAAI,KAAK,IAAL,KAAc,GAAd,EAAmB;AAC7B,WAAO,IAAP,GAAc,KAAK,aAAL,CAAmB,IAAnB,CADe;AAE7B,WAAO,KAAP,GAAe,KAAK,aAAL,CAAmB,KAAnB,CAFc;IAAvB;;;AAlOH,iBA6OL,iDAAmB,QAAQ;AAC1B,OAAI,YAAY,KAAK,SAAL,CADU;AAE1B,OAAI,CAAC,SAAD,EAAY;AACf,WADe;IAAhB;;AAIA,OAAI,YAAK,UAAL,CAAgB,SAAhB,CAAJ,EAAgC;AAC/B,kBAAO,KAAP,CAAa,MAAb,EAAqB,UAAU,MAAV,CAArB,EAD+B;IAAhC,MAGO;AACN,QAAI,YAAK,SAAL,CAAe,SAAf,CAAJ,EAA+B;AAC9B,iBAAY,mBAAS,SAAT,CAAmB,SAAnB,EAA8B,IAA9B,CAAZ,CAD8B;KAA/B;AAGA,QAAI,OAAO,IAAP,GAAc,UAAU,IAAV,EAAgB;AACjC,YAAO,IAAP,GAAc,UAAU,IAAV,CADmB;KAAlC,MAEO,IAAI,OAAO,KAAP,GAAe,UAAU,KAAV,EAAiB;AAC1C,YAAO,IAAP,IAAe,OAAO,KAAP,GAAe,UAAU,KAAV,CADY;KAApC;AAGP,QAAI,OAAO,GAAP,GAAa,UAAU,GAAV,EAAe;AAC/B,YAAO,GAAP,GAAa,UAAU,GAAV,CADkB;KAAhC,MAEO,IAAI,OAAO,MAAP,GAAgB,UAAU,MAAV,EAAkB;AAC5C,YAAO,GAAP,IAAc,OAAO,MAAP,GAAgB,UAAU,MAAV,CADc;KAAtC;AAGP,WAAO,KAAP,GAAe,OAAO,IAAP,GAAc,OAAO,KAAP,CAdvB;AAeN,WAAO,MAAP,GAAgB,OAAO,GAAP,GAAa,OAAO,MAAP,CAfvB;IAHP;;;AAnPI,iBA8QL,+CAAkB,QAAQ;AACzB,OAAI,SAAS,OAAO,IAAP,GAAc,KAAK,aAAL,CAAmB,IAAnB,CADF;AAEzB,OAAI,SAAS,OAAO,GAAP,GAAa,KAAK,aAAL,CAAmB,GAAnB,CAFD;AAGzB,UAAO,IAAP,IAAe,SAAS,KAAK,KAAL,CAAW,CAAX,CAHC;AAIzB,UAAO,KAAP,GAAe,OAAO,IAAP,GAAc,OAAO,KAAP,CAJJ;AAKzB,UAAO,GAAP,IAAc,SAAS,KAAK,KAAL,CAAW,CAAX,CALE;AAMzB,UAAO,MAAP,GAAgB,OAAO,GAAP,GAAa,OAAO,MAAP,CANJ;;;AA9QrB,iBA2RL,uEAA+B;AAC9B,OAAI,kBAAkB,KAAK,eAAL,CADQ;AAE9B,OAAI,oBAAoB,KAAK,WAAL,CAAiB,KAAjB,EAAwB;AAC/C,SAAK,sBAAL,GAA8B,KAAK,gBAAL,EAA9B,CAD+C;IAAhD,MAEO,IAAI,YAAK,SAAL,CAAe,eAAf,CAAJ,EAAqC;AAC3C,SAAK,sBAAL,GAA8B,eAA9B,CAD2C;IAArC,MAEA;AACN,SAAK,sBAAL,GAA8B,KAAK,iBAAL,CADxB;IAFA;;;AA/RH,iBA4SL,2CAAiB;AAChB,QAAK,eAAL,CAAqB,KAAK,sBAAL,CAArB,CADgB;;;AA5SZ,iBAsTL,yCAAgB;AACf,QAAK,eAAL,CAAqB,KAAK,iBAAL,CAArB,CADe;;;AAtTX,iBA6TL,6CAAkB;AACjB,QAAK,qBAAL,GADiB;AAEjB,QAAK,YAAL,GAAoB,IAApB,CAFiB;AAGjB,QAAK,gBAAL,CAAsB,OAAtB,GAHiB;AAIjB,QAAK,gBAAL,GAAwB,IAAxB,CAJiB;AAKjB,QAAK,cAAL,CAAoB,kBAApB,GALiB;AAMjB,QAAK,cAAL,GAAsB,IAAtB,CANiB;AAOjB,oBAAM,eAAN,YAPiB;;;AA7Tb,iBA2UL,yCAAgB;AACf,UAAO,KAAK,iBAAL,CADQ;;;AA3UX,iBAoVL,qDAAsB;AACrB,OAAI,KAAK,UAAL,EAAiB;AACpB,SAAK,UAAL,CAAgB,IAAhB,GADoB;IAArB;AAGA,QAAK,gBAAL,CAAsB,IAAtB,GAJqB;AAKrB,sBAAS,WAAT,GALqB;AAMrB,QAAK,IAAL,CAAU,KAAK,MAAL,CAAY,GAAZ,EAAiB,KAAK,iBAAL,EAA3B,EANqB;AAOrB,QAAK,qBAAL,GAPqB;;;AApVjB,iBAoWL,qDAAqB,OAAO;AAC3B,OAAI,WAAW,MAAM,aAAN,GAAsB,MAAM,aAAN,CAAoB,CAApB,CAAtB,GAA+C,KAA/C,CADY;AAE3B,OAAI,YAAY,SAAS,OAAT,GAAmB,KAAK,SAAL,CAAe,CAAf,CAFR;AAG3B,OAAI,YAAY,SAAS,OAAT,GAAmB,KAAK,SAAL,CAAe,CAAf,CAHR;AAI3B,QAAK,SAAL,CAAe,CAAf,GAAmB,SAAS,OAAT,CAJQ;AAK3B,QAAK,SAAL,CAAe,CAAf,GAAmB,SAAS,OAAT,CALQ;AAM3B,OAAI,CAAC,KAAK,UAAL,EAAD,IAAsB,CAAC,KAAK,0BAAL,CAAgC,SAAhC,EAA2C,SAA3C,CAAD,EAAwD;AACjF,WADiF;IAAlF;;AAIA,OAAI,CAAC,KAAK,UAAL,EAAD,EAAoB;AACvB,SAAK,cAAL,GADuB;AAEvB,SAAK,gBAAL,CAAsB,KAAtB,CAA4B,KAAK,sBAAL,EAA6B,KAAK,gBAAL,CAAzD,CAFuB;IAAxB;AAIA,OAAI,KAAK,UAAL,EAAiB;AACpB,SAAK,UAAL,CAAgB,MAAhB,CAAuB,KAAK,gBAAL,EAAuB,KAAK,SAAL,CAAe,CAAf,EAAkB,KAAK,SAAL,CAAe,CAAf,CAAhE,CADoB;IAArB;AAGA,QAAK,uBAAL,GAjB2B;;;AApWvB,iBA+XL,uDAAsB,OAAO;AAC5B,QAAK,iBAAL,GAAyB,MAAM,cAAN,IAAwB,MAAM,aAAN,CADrB;;AAG5B,OAAI,KAAK,aAAL,CAAmB,KAAnB,CAAJ,EAA+B;AAC9B,SAAK,yBAAL,CAA+B,MAAM,aAAN,GAAsB,MAAM,aAAN,CAAoB,CAApB,CAAtB,GAA+C,KAA/C,CAA/B,CAD8B;AAE9B,UAAM,cAAN,GAF8B;AAG9B,QAAI,MAAM,IAAN,KAAe,SAAf,EAA0B;AAC7B,UAAK,cAAL,GAD6B;KAA9B,MAEO;AACN,UAAK,YAAL,CAAkB,GAAlB,CAAsB,KAAtB,CACC,KAAK,YAAL,EACA,mBAAS,kBAAT,CAA4B,KAAK,OAAL,EAAc;AACzC,iBAAW,KAAK,oBAAL,CAA0B,IAA1B,CAA+B,IAA/B,CAAX;AACA,iBAAW,KAAK,oBAAL,CAA0B,IAA1B,CAA+B,IAA/B,CAAX;AACA,eAAS,KAAK,mBAAL,CAAyB,IAAzB,CAA8B,IAA9B,CAAT;AACA,gBAAU,KAAK,mBAAL,CAAyB,IAAzB,CAA8B,IAA9B,CAAV;MAJD,CAFD,EADM;AAUN,UAAK,gBAAL,GAAwB,CAAxB,CAVM;KAFP;IAHD;;;AAlYI,iBA2ZL,yCAAe,OAAO;AACrB,OAAI,MAAM,OAAN,KAAkB,EAAlB,IAAwB,KAAK,UAAL,EAAxB,EAA2C;AAC9C,SAAK,mBAAL,GAD8C;IAA/C;;;AA5ZI,iBAuaL,iDAAmB,OAAO;AACzB,QAAK,iBAAL,CAAuB,CAAvB,IAA4B,MAAM,MAAN,CADH;AAEzB,QAAK,iBAAL,CAAuB,CAAvB,IAA4B,MAAM,MAAN,CAFH;AAGzB,QAAK,uBAAL,GAHyB;;;AAvarB,iBAmbL,qDAAqB,OAAO;AAC3B,OAAI,KAAK,UAAL,EAAJ,EAAuB;AACtB,QAAI,gBAAgB,MAAM,cAAN,IAAwB,MAAM,aAAN,CADtB;AAEtB,QAAI,kBAAkB,KAAK,iBAAL,EAAwB;AAC7C,YAD6C;KAA9C;AAGA,QAAI,MAAM,OAAN,IAAiB,EAAjB,IAAuB,MAAM,OAAN,IAAiB,EAAjB,EAAqB;;AAE/C,SAAI,SAAS,CAAT,CAF2C;AAG/C,SAAI,SAAS,CAAT,CAH2C;AAI/C,SAAI,SAAS,KAAK,aAAL,IAAsB,KAAK,KAAL,CAAW,CAAX,GAAe,KAAK,aAAL,GAAqB,KAAK,KAAL,CAAW,CAAX,CAJxB;AAK/C,SAAI,SAAS,KAAK,aAAL,IAAsB,KAAK,KAAL,CAAW,CAAX,GAAe,KAAK,aAAL,GAAqB,KAAK,KAAL,CAAW,CAAX,CALxB;AAM/C,SAAI,MAAM,OAAN,KAAkB,EAAlB,EAAsB;AACzB,gBAAU,MAAV,CADyB;MAA1B,MAEO,IAAI,MAAM,OAAN,KAAkB,EAAlB,EAAsB;AAChC,gBAAU,MAAV,CADgC;MAA1B,MAEA,IAAI,MAAM,OAAN,KAAkB,EAAlB,EAAsB;AAChC,gBAAU,MAAV,CADgC;MAA1B,MAEA;AACN,gBAAU,MAAV,CADM;MAFA;AAKP,UAAK,uBAAL,CAA6B,MAA7B,EAAqC,MAArC,EAf+C;AAgB/C,WAAM,cAAN,GAhB+C;KAAhD,MAiBO,IAAI,MAAM,OAAN,KAAkB,EAAlB,IAAwB,MAAM,OAAN,KAAkB,EAAlB,IAAwB,MAAM,OAAN,KAAkB,EAAlB,EAAsB;;AAEhF,UAAK,mBAAL,GAFgF;KAA1E;IAtBR,MA0BO,IAAI,MAAM,OAAN,KAAkB,EAAlB,IAAwB,MAAM,OAAN,KAAkB,EAAlB,EAAsB;;AAExD,SAAK,qBAAL,CAA2B,KAA3B,EAFwD;IAAlD;;;AA9cH,iBAydL,6DAA0B;AACzB,OAAI,YAAK,QAAL,CAAc,KAAK,OAAL,CAAlB,EAAiC;AAChC,SAAK,cAAL,CAAoB,kBAApB,GADgC;AAEhC,SAAK,mBAAL,GAFgC;IAAjC;AAIA,OAAI,KAAK,6BAAL,EAAoC;AACvC,SAAK,gBAAL,GAAwB,KAAK,6BAAL,CADe;IAAxC;;;AA9dI,iBAweL,yDAAwB;AACvB,QAAK,cAAL,CAAoB,kBAApB,GADuB;AAEvB,QAAK,mBAAL,GAFuB;;;AAxenB,iBAqfL,iEAA2B,WAAW,WAAW;AAChD,QAAK,gBAAL,IAAyB,KAAK,GAAL,CAAS,SAAT,IAAsB,KAAK,GAAL,CAAS,SAAT,CAAtB,CADuB;AAEhD,UAAO,KAAK,gBAAL,IAAyB,KAAK,mBAAL,CAFgB;;;AArf5C,iBA8fL,mCAAa;AACZ,UAAO,KAAK,SAAL,CADK;;;AA9fR,iBAugBL,2CAAgB,SAAS;AACxB,OAAI,UAAU,KAAK,OAAL,CADU;AAExB,OAAI,CAAC,OAAD,EAAU;AACb,WAAO,IAAP,CADa;IAAd,MAEO,IAAI,YAAK,QAAL,CAAc,OAAd,CAAJ,EAA4B;AAClC,WAAO,cAAI,KAAJ,CAAU,OAAV,EAAmB,UAAU,IAAV,GAAiB,OAAjB,GAA2B,IAA3B,CAA1B,CADkC;IAA5B,MAEA;AACN,WAAO,cAAI,QAAJ,CAAa,OAAb,EAAsB,OAAtB,CAAP,CADM;IAFA;;;AA3gBH,iBAuhBL,2CAAgB,SAAS;AACxB,WAAQ,KAAR,CAAc,IAAd,GAAqB,KAAK,kBAAL,CAAwB,CAAxB,GAA4B,IAA5B,CADG;AAExB,WAAQ,KAAR,CAAc,GAAd,GAAoB,KAAK,kBAAL,CAAwB,CAAxB,GAA4B,IAA5B,CAFI;;;AAvhBpB,iBAiiBL,mDAAoB,KAAK;AACxB,OAAI,QAAQ,KAAR,EAAe;AAClB,WAAO,6BAAmB,GAAnB,CAAP,CADkB;IAAnB;;;AAliBI,iBA6iBL,+CAAkB,KAAK;AACtB,OAAI,YAAK,QAAL,CAAc,GAAd,CAAJ,EAAwB;AACvB,UAAM,cAAI,SAAJ,CAAc,GAAd,CAAN,CADuB;IAAxB;AAGA,UAAO,GAAP,CAJsB;;;AA7iBlB,iBA0jBL,+DAA0B,KAAK;AAC9B,QAAK,6BAAL,GAAqC,YAAK,QAAL,CAAc,GAAd,IAAqB,GAArB,GAA2B,IAA3B,CADP;AAE9B,OAAI,WAAW,KAAK,WAAL,CAAiB,GAAjB,CAAX,CAF0B;AAG9B,YAAS,IAAT,CAAc,QAAd,EAH8B;AAI9B,UAAO,QAAP,CAJ8B;;;AA1jB1B,iBAqkBL,2CAAiB;AAChB,QAAK,SAAL,GAAiB,IAAjB,CADgB;AAEhB,QAAK,4BAAL,GAFgB;AAGhB,iBAAI,UAAJ,CAAe,KAAK,sBAAL,EAA6B,KAAK,aAAL,CAA5C,CAHgB;AAIhB,QAAK,sBAAL,CAA4B,YAA5B,CAAyC,cAAzC,EAAyD,MAAzD,EAJgB;AAKhB,QAAK,IAAL,CAAU,KAAK,MAAL,CAAY,KAAZ,CAAV,CALgB;;;AArkBZ,iBAmlBL,mCAAY,mBAAmB;AAC9B,OAAI,YAAK,QAAL,CAAc,iBAAd,CAAJ,EAAsC;AACrC,QAAI,UAAU,KAAK,SAAL,CAAe,gBAAf,CAAgC,iBAAhC,CAAV,CADiC;AAErC,WAAO,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,OAA3B,EAAoC,CAApC,CAAP,CAFqC;IAAtC,MAGO,IAAI,iBAAJ,EAAuB;AAC7B,WAAO,CAAC,iBAAD,CAAP,CAD6B;IAAvB,MAEA;AACN,WAAO,EAAP,CADM;IAFA;;;AAvlBH,iBAkmBL,yCAAe,WAAW;AACzB,QAAK,UAAL,CAAgB,SAAhB,EADyB;AAEzB,OAAI,SAAS,UAAU,IAAV,GAAiB,KAAK,aAAL,CAAmB,IAAnB,CAFL;AAGzB,OAAI,SAAS,UAAU,GAAV,GAAgB,KAAK,aAAL,CAAmB,GAAnB,CAHJ;AAIzB,OAAI,WAAW,CAAX,IAAgB,WAAW,CAAX,EAAc;AACjC,SAAK,aAAL,GAAqB,SAArB,CADiC;AAEjC,SAAK,kBAAL,CAAwB,CAAxB,IAA6B,MAA7B,CAFiC;AAGjC,SAAK,kBAAL,CAAwB,CAAxB,IAA6B,MAA7B,CAHiC;AAIjC,SAAK,IAAL,CAAU,KAAK,MAAL,CAAY,IAAZ,EAAkB,KAAK,iBAAL,EAA5B,EAJiC;IAAlC;;;AAtmBI,iBAonBL,2DAAwB,QAAQ,QAAQ;AACvC,OAAI,YAAY,cAAO,KAAP,CAAa,EAAb,EAAiB,KAAK,aAAL,CAA7B,CADmC;AAEvC,aAAU,IAAV,IAAkB,MAAlB,CAFuC;AAGvC,aAAU,KAAV,IAAmB,MAAnB,CAHuC;AAIvC,aAAU,GAAV,IAAiB,MAAjB,CAJuC;AAKvC,aAAU,MAAV,IAAoB,MAApB,CALuC;AAMvC,QAAK,cAAL,CAAoB,SAApB,EANuC;;;AApnBnC,iBAgoBL,6DAA0B;AACzB,OAAI,YAAY;AACf,YAAQ,KAAK,aAAL,CAAmB,MAAnB;AACR,UAAM,KAAK,SAAL,CAAe,CAAf,GAAmB,KAAK,iBAAL,CAAuB,CAAvB;AACzB,SAAK,KAAK,SAAL,CAAe,CAAf,GAAmB,KAAK,iBAAL,CAAuB,CAAvB;AACxB,WAAO,KAAK,aAAL,CAAmB,KAAnB;IAJJ,CADqB;AAOzB,aAAU,KAAV,GAAkB,UAAU,IAAV,GAAiB,UAAU,KAAV,CAPV;AAQzB,aAAU,MAAV,GAAmB,UAAU,GAAV,GAAgB,UAAU,MAAV,CARV;AASzB,QAAK,cAAL,CAAoB,SAApB,EATyB;;;AAhoBrB,iBAkpBL,6DAAyB,KAAK;AAC7B,UAAO,YAAK,QAAL,CAAc,GAAd,KAAsB,YAAK,SAAL,CAAe,GAAf,CAAtB,CADsB;;;AAlpBzB,iBA4pBL,qDAAqB,KAAK;AACzB,UAAO,YAAK,QAAL,CAAc,GAAd,KAAsB,YAAK,QAAL,CAAc,GAAd,CAAtB,CADkB;;;SA5pBrB;;;;;;;;AAsqBN,MAAK,KAAL,GAAa;;;;;;;;;AASZ,cAAY;AACX,WAAQ,qBAAR;AACA,UAAO,KAAP;AACA,cAAW,IAAX;GAHD;;;;;;AAUA,QAAM;AACL,cAAW,YAAK,QAAL;GADZ;;;;;;;;;;AAYA,aAAW;AACV,WAAQ,mBAAR;AACA,cAAW,sBAAX;GAFD;;;;;;;;;AAYA,aAAW;AACV,WAAQ,cAAI,SAAJ;AACR,cAAW,0BAAX;AACA,UAAO,QAAP;GAHD;;;;;;;;AAYA,YAAU;AACT,cAAW,YAAK,SAAL;AACX,UAAO,KAAP;GAFD;;;;;;;AAUA,iBAAe;AACd,cAAW,YAAK,QAAL;AACX,UAAO,UAAP;GAFD;;;;;;;;;AAYA,mBAAiB;AAChB,cAAW,0BAAX;GADD;;;;;;;AASA,WAAS;AACR,cAAW,0BAAX;GADD;;;;;;;AASA,iBAAe;AACd,cAAW,YAAK,QAAL;AACX,UAAO,EAAP;GAFD;;;;;;;;AAWA,uBAAqB;AACpB,cAAW,YAAK,QAAL;AACX,UAAO,CAAP;AACA,cAAW,IAAX;GAHD;;;;;;;AAWA,oBAAkB;AACjB,WAAQ,2BAAR;AACA,cAAW,0BAAX;GAFD;;;;;;;AAUA,WAAS;AACR,cAAW,0BAAX;GADD;;;;;;;;;AAWA,SAAO;AACN,cAAW,YAAK,QAAL;AACX,YAAS,mBAAM;AACd,WAAO;AACN,QAAG,CAAH;AACA,QAAG,CAAH;KAFD,CADc;IAAN;GAFV;;;;;;;;;AAiBA,WAAS;AACR,UAAO,IAAP;GADD;EA3JD;;;;;;;AAqKA,MAAK,MAAL,GAAc;AACb,QAAM,MAAN;AACA,OAAK,KAAL;AACA,SAAO,OAAP;EAHD;;;;;;;AAWA,MAAK,WAAL,GAAmB;AAClB,SAAO,OAAP;EADD;;mBAIe","file":"../../../node_modules/metal-drag-drop/src/Drag.js","sourcesContent":["'use strict';\n\nimport { core, object } from 'metal';\nimport dom from 'metal-dom';\nimport DragAutoScroll from './helpers/DragAutoScroll';\nimport DragScrollDelta from './helpers/DragScrollDelta';\nimport DragShim from './helpers/DragShim';\nimport { EventHandler } from 'metal-events';\nimport Position from 'metal-position';\nimport State from 'metal-state';\n\n/**\n * Responsible for making elements draggable. Handles all the logic\n * for dragging elements. Dropping is handled by `DragDrop`.\n * @extends {State}\n */\nclass Drag extends State {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor(opt_config) {\n\t\tsuper(opt_config);\n\n\t\t/**\n\t\t * The drag placeholder that is active at the moment.\n\t\t * @type {Element}\n\t\t * @protected\n\t\t */\n\t\tthis.activeDragPlaceholder_ = null;\n\n\t\t/**\n\t\t * The drag source that is active at the moment.\n\t\t * @type {Element}\n\t\t * @protected\n\t\t */\n\t\tthis.activeDragSource_ = null;\n\n\t\t/**\n\t\t * The distance that has been dragged.\n\t\t * @type {number}\n\t\t * @protected\n\t\t */\n\t\tthis.distanceDragged_ = 0;\n\n\t\t/**\n\t\t * Flag indicating if one of the sources are being dragged.\n\t\t * @type {boolean}\n\t\t * @protected\n\t\t */\n\t\tthis.dragging_ = false;\n\n\t\t/**\n\t\t * The `EventHandler` instance that holds events that keep track of the drag action.\n\t\t * @type {!EventHandler}\n\t\t * @protected\n\t\t */\n\t\tthis.dragHandler_ = new EventHandler();\n\n\t\t/**\n\t\t * `DragScrollDelta` instance.\n\t\t * @type {!DragScrollDelta}\n\t\t * @protected\n\t\t */\n\t\tthis.dragScrollDelta_ = new DragScrollDelta();\n\n\t\t/**\n\t\t * The current x and y positions of the mouse (or null if not dragging).\n\t\t * @type {{x: number, y: number}}\n\t\t * @protected\n\t\t */\n\t\tthis.mousePos_ = null;\n\n\t\t/**\n\t\t * The distance between the mouse position and the dragged source position\n\t\t * (or null if not dragging).\n\t\t * @type {{x: number, y: number}}\n\t\t * @protected\n\t\t */\n\t\tthis.mouseSourceDelta_ = null;\n\n\t\t/**\n\t\t * The `EventHandler` instance that holds events for the source (or sources).\n\t\t * @type {!EventHandler}\n\t\t * @protected\n\t\t */\n\t\tthis.sourceHandler_ = new EventHandler();\n\n\t\t/**\n\t\t * The current region values of the element being dragged, relative to\n\t\t * the document (or null if not dragging).\n\t\t * @type {Object}\n\t\t * @protected\n\t\t */\n\t\tthis.sourceRegion_ = null;\n\n\t\t/**\n\t\t * The current x and y positions of the element being dragged relative to its\n\t\t * `offsetParent`, or to the viewport if there's no `offsetParent`\n\t\t * (or null if not dragging).\n\t\t * @type {{x: number, y: number}}\n\t\t * @protected\n\t\t */\n\t\tthis.sourceRelativePos_ = null;\n\n\t\tthis.attachSourceEvents_();\n\t\tthis.on(Drag.Events.DRAG, this.defaultDragFn_, true);\n\t\tthis.on(Drag.Events.END, this.defaultEndFn_, true);\n\t\tthis.on('sourcesChanged', this.handleSourcesChanged_.bind(this));\n\t\tthis.on('containerChanged', this.handleContainerChanged_.bind(this));\n\t\tthis.dragScrollDelta_.on('scrollDelta', this.handleScrollDelta_.bind(this));\n\t\tdom.on(document, 'keydown', this.handleKeyDown_.bind(this));\n\t}\n\n\t/**\n\t * Attaches the necessary events to the source (or sources).\n\t * @protected\n\t */\n\tattachSourceEvents_() {\n\t\tvar toAttach = {\n\t\t\tkeydown: this.handleSourceKeyDown_.bind(this),\n\t\t\tmousedown: this.handleDragStartEvent_.bind(this),\n\t\t\ttouchstart: this.handleDragStartEvent_.bind(this)\n\t\t};\n\t\tvar eventTypes = Object.keys(toAttach);\n\t\tfor (var i = 0; i < eventTypes.length; i++) {\n\t\t\tvar listenerFn = toAttach[eventTypes[i]];\n\t\t\tif (core.isString(this.sources)) {\n\t\t\t\tthis.sourceHandler_.add(dom.delegate(this.container, eventTypes[i], this.sources, listenerFn));\n\t\t\t} else {\n\t\t\t\tthis.sourceHandler_.add(dom.on(this.sources, eventTypes[i], listenerFn));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Builds the object with data to be passed to a drag event.\n\t * @return {!Object}\n\t * @protected\n\t */\n\tbuildEventObject_() {\n\t\treturn {\n\t\t\tplaceholder: this.activeDragPlaceholder_,\n\t\t\tsource: this.activeDragSource_,\n\t\t\trelativeX: this.sourceRelativePos_.x,\n\t\t\trelativeY: this.sourceRelativePos_.y,\n\t\t\tx: this.sourceRegion_.left,\n\t\t\ty: this.sourceRegion_.top\n\t\t};\n\t}\n\n\t/**\n\t * Calculates the initial positions for the drag action.\n\t * @param {!Event} event\n\t * @protected\n\t */\n\tcalculateInitialPosition_(event) {\n\t\tthis.sourceRegion_ = object.mixin({}, Position.getRegion(this.activeDragSource_, true));\n\t\tthis.sourceRelativePos_ = {\n\t\t\tx: this.activeDragSource_.offsetLeft,\n\t\t\ty: this.activeDragSource_.offsetTop\n\t\t};\n\t\tif (core.isDef(event.clientX)) {\n\t\t\tthis.mousePos_ = {\n\t\t\t\tx: event.clientX,\n\t\t\t\ty: event.clientY\n\t\t\t};\n\t\t\tthis.mouseSourceDelta_ = {\n\t\t\t\tx: this.sourceRegion_.left - this.mousePos_.x,\n\t\t\t\ty: this.sourceRegion_.top - this.mousePos_.y\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the given event can start a drag operation.\n\t * @param {!Event} event\n\t * @return {boolean}\n\t * @protected\n\t */\n\tcanStartDrag_(event) {\n\t\treturn !this.disabled &&\n\t\t\t(!core.isDef(event.button) || event.button === 0) &&\n\t\t\t!this.isDragging() &&\n\t\t\tthis.isWithinHandle_(event.target);\n\t}\n\n\t/**\n\t * Resets all variables to their initial values and detaches drag listeners.\n\t * @protected\n\t */\n\tcleanUpAfterDragging_() {\n\t\tif (this.activeDragPlaceholder_) {\n\t\t\tthis.activeDragPlaceholder_.setAttribute('aria-grabbed', 'false');\n\t\t\tdom.removeClasses(this.activeDragPlaceholder_, this.draggingClass);\n\t\t\tif (this.dragPlaceholder === Drag.Placeholder.CLONE) {\n\t\t\t\tdom.exitDocument(this.activeDragPlaceholder_);\n\t\t\t}\n\t\t}\n\t\tthis.activeDragPlaceholder_ = null;\n\t\tthis.activeDragSource_ = null;\n\t\tthis.sourceRegion_ = null;\n\t\tthis.sourceRelativePos_ = null;\n\t\tthis.mousePos_ = null;\n\t\tthis.mouseSourceDelta_ = null;\n\t\tthis.dragging_ = false;\n\t\tthis.dragHandler_.removeAllListeners();\n\t}\n\n\t/**\n\t * Clones the active drag source and adds the clone to the document.\n\t * @return {!Element}\n\t * @protected\n\t */\n\tcloneActiveDrag_() {\n\t\tvar placeholder = this.activeDragSource_.cloneNode(true);\n\t\tplaceholder.style.position = 'absolute';\n\t\tplaceholder.style.left = this.sourceRelativePos_.x + 'px';\n\t\tplaceholder.style.top = this.sourceRelativePos_.y + 'px';\n\t\tdom.append(this.activeDragSource_.parentNode, placeholder);\n\t\treturn placeholder;\n\t}\n\n\t/**\n\t * Constrains the given region according to the current state configuration.\n\t * @param {!Object} region\n\t * @protected\n\t */\n\tconstrain_(region) {\n\t\tthis.constrainToAxis_(region);\n\t\tthis.constrainToSteps_(region);\n\t\tthis.constrainToRegion_(region);\n\t}\n\n\t/**\n\t * Constrains the given region according to the chosen drag axis, if any.\n\t * @param {!Object} region\n\t * @protected\n\t */\n\tconstrainToAxis_(region) {\n\t\tif (this.axis === 'x') {\n\t\t\tregion.top = this.sourceRegion_.top;\n\t\t\tregion.bottom = this.sourceRegion_.bottom;\n\t\t} else if (this.axis === 'y') {\n\t\t\tregion.left = this.sourceRegion_.left;\n\t\t\tregion.right = this.sourceRegion_.right;\n\t\t}\n\t}\n\n\t/**\n\t * Constrains the given region within the region defined by the `constrain` state.\n\t * @param {!Object} region\n\t * @protected\n\t */\n\tconstrainToRegion_(region) {\n\t\tvar constrain = this.constrain;\n\t\tif (!constrain) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (core.isFunction(constrain)) {\n\t\t\tobject.mixin(region, constrain(region));\n\n\t\t} else {\n\t\t\tif (core.isElement(constrain)) {\n\t\t\t\tconstrain = Position.getRegion(constrain, true);\n\t\t\t}\n\t\t\tif (region.left < constrain.left) {\n\t\t\t\tregion.left = constrain.left;\n\t\t\t} else if (region.right > constrain.right) {\n\t\t\t\tregion.left -= region.right - constrain.right;\n\t\t\t}\n\t\t\tif (region.top < constrain.top) {\n\t\t\t\tregion.top = constrain.top;\n\t\t\t} else if (region.bottom > constrain.bottom) {\n\t\t\t\tregion.top -= region.bottom - constrain.bottom;\n\t\t\t}\n\t\t\tregion.right = region.left + region.width;\n\t\t\tregion.bottom = region.top + region.height;\n\t\t}\n\t}\n\n\t/**\n\t * Constrains the given region to change according to the `steps` state.\n\t * @param {!Object} region\n\t * @protected\n\t */\n\tconstrainToSteps_(region) {\n\t\tvar deltaX = region.left - this.sourceRegion_.left;\n\t\tvar deltaY = region.top - this.sourceRegion_.top;\n\t\tregion.left -= deltaX % this.steps.x;\n\t\tregion.right = region.left + region.width;\n\t\tregion.top -= deltaY % this.steps.y;\n\t\tregion.bottom = region.top + region.height;\n\t}\n\n\t/**\n\t * Creates the active drag placeholder, unless it already exists.\n\t * @protected\n\t */\n\tcreateActiveDragPlaceholder_() {\n\t\tvar dragPlaceholder = this.dragPlaceholder;\n\t\tif (dragPlaceholder === Drag.Placeholder.CLONE) {\n\t\t\tthis.activeDragPlaceholder_ = this.cloneActiveDrag_();\n\t\t} else if (core.isElement(dragPlaceholder)) {\n\t\t\tthis.activeDragPlaceholder_ = dragPlaceholder;\n\t\t} else {\n\t\t\tthis.activeDragPlaceholder_ = this.activeDragSource_;\n\t\t}\n\t}\n\n\t/**\n\t * The default behavior for the `Drag.Events.DRAG` event. Can be prevented\n\t * by calling the `preventDefault` function on the event's facade. Moves\n\t * the placeholder to the new calculated source position.\n\t * @protected\n\t */\n\tdefaultDragFn_() {\n\t\tthis.moveToPosition_(this.activeDragPlaceholder_);\n\t}\n\n\t/**\n\t * The default behavior for the `Drag.Events.END` event. Can be prevented\n\t * by calling the `preventDefault` function on the event's facade. Moves\n\t * the source element to the final calculated position.\n\t * @protected\n\t */\n\tdefaultEndFn_() {\n\t\tthis.moveToPosition_(this.activeDragSource_);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdisposeInternal() {\n\t\tthis.cleanUpAfterDragging_();\n\t\tthis.dragHandler_ = null;\n\t\tthis.dragScrollDelta_.dispose();\n\t\tthis.dragScrollDelta_ = null;\n\t\tthis.sourceHandler_.removeAllListeners();\n\t\tthis.sourceHandler_ = null;\n\t\tsuper.disposeInternal();\n\t}\n\n\t/**\n\t * Gets the active drag source.\n\t * @return {Element}\n\t */\n\tgetActiveDrag() {\n\t\treturn this.activeDragSource_;\n\t}\n\n\t/**\n\t * Handles events that can end a drag action, like \"mouseup\" and \"touchend\".\n\t * Triggered when the mouse drag action ends.\n\t * @protected\n\t */\n\thandleDragEndEvent_() {\n\t\tif (this.autoScroll) {\n\t\t\tthis.autoScroll.stop();\n\t\t}\n\t\tthis.dragScrollDelta_.stop();\n\t\tDragShim.hideDocShim();\n\t\tthis.emit(Drag.Events.END, this.buildEventObject_());\n\t\tthis.cleanUpAfterDragging_();\n\t}\n\n\t/**\n\t * Handles events that can move a draggable element, like \"mousemove\" and \"touchmove\".\n\t * Tracks the movement on the screen to update the drag action.\n\t * @param {!Event} event\n\t * @protected\n\t */\n\thandleDragMoveEvent_(event) {\n\t\tvar position = event.targetTouches ? event.targetTouches[0] : event;\n\t\tvar distanceX = position.clientX - this.mousePos_.x;\n\t\tvar distanceY = position.clientY - this.mousePos_.y;\n\t\tthis.mousePos_.x = position.clientX;\n\t\tthis.mousePos_.y = position.clientY;\n\t\tif (!this.isDragging() && !this.hasReachedMinimumDistance_(distanceX, distanceY)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.isDragging()) {\n\t\t\tthis.startDragging_();\n\t\t\tthis.dragScrollDelta_.start(this.activeDragPlaceholder_, this.scrollContainers);\n\t\t}\n\t\tif (this.autoScroll) {\n\t\t\tthis.autoScroll.scroll(this.scrollContainers, this.mousePos_.x, this.mousePos_.y);\n\t\t}\n\t\tthis.updatePositionFromMouse();\n\t}\n\n\t/**\n\t * Handles events that can start a drag action, like \"mousedown\" and \"touchstart\".\n\t * When this is triggered and the sources were not already being dragged, more\n\t * listeners will be attached to keep track of the drag action.\n\t * @param {!Event} event\n\t * @protected\n\t */\n\thandleDragStartEvent_(event) {\n\t\tthis.activeDragSource_ = event.delegateTarget || event.currentTarget;\n\n\t\tif (this.canStartDrag_(event)) {\n\t\t\tthis.calculateInitialPosition_(event.targetTouches ? event.targetTouches[0] : event);\n\t\t\tevent.preventDefault();\n\t\t\tif (event.type === 'keydown') {\n\t\t\t\tthis.startDragging_();\n\t\t\t} else {\n\t\t\t\tthis.dragHandler_.add.apply(\n\t\t\t\t\tthis.dragHandler_,\n\t\t\t\t\tDragShim.attachDocListeners(this.useShim, {\n\t\t\t\t\t\tmousemove: this.handleDragMoveEvent_.bind(this),\n\t\t\t\t\t\ttouchmove: this.handleDragMoveEvent_.bind(this),\n\t\t\t\t\t\tmouseup: this.handleDragEndEvent_.bind(this),\n\t\t\t\t\t\ttouchend: this.handleDragEndEvent_.bind(this)\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\tthis.distanceDragged_ = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Handles a `keydown` event on the document. Ends the drag if ESC was the pressed key.\n\t * @param {!Event} event\n\t * @protected\n\t */\n\thandleKeyDown_(event) {\n\t\tif (event.keyCode === 27 && this.isDragging()) {\n\t\t\tthis.handleDragEndEvent_();\n\t\t}\n\t}\n\n\t/**\n\t * Handles a \"scrollDelta\" event. Updates the position data for the source,\n\t * as well as the placeholder's position on the screen when \"move\" is set to true.\n\t * @param {!Object} event\n\t * @protected\n\t */\n\thandleScrollDelta_(event) {\n\t\tthis.mouseSourceDelta_.x += event.deltaX;\n\t\tthis.mouseSourceDelta_.y += event.deltaY;\n\t\tthis.updatePositionFromMouse();\n\t}\n\n\t/**\n\t * Handles a `keydown` event from `KeyboardDrag`. Does the appropriate drag action\n\t * for the pressed key.\n\t * @param {!Object} event\n\t * @protected\n\t */\n\thandleSourceKeyDown_(event) {\n\t\tif (this.isDragging()) {\n\t\t\tvar currentTarget = event.delegateTarget || event.currentTarget;\n\t\t\tif (currentTarget !== this.activeDragSource_) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (event.keyCode >= 37 && event.keyCode <= 40) {\n\t\t\t\t// Arrow keys during drag move the source.\n\t\t\t\tvar deltaX = 0;\n\t\t\t\tvar deltaY = 0;\n\t\t\t\tvar speedX = this.keyboardSpeed >= this.steps.x ? this.keyboardSpeed : this.steps.x;\n\t\t\t\tvar speedY = this.keyboardSpeed >= this.steps.y ? this.keyboardSpeed : this.steps.y;\n\t\t\t\tif (event.keyCode === 37) {\n\t\t\t\t\tdeltaX -= speedX;\n\t\t\t\t} else if (event.keyCode === 38) {\n\t\t\t\t\tdeltaY -= speedY;\n\t\t\t\t} else if (event.keyCode === 39) {\n\t\t\t\t\tdeltaX += speedX;\n\t\t\t\t} else {\n\t\t\t\t\tdeltaY += speedY;\n\t\t\t\t}\n\t\t\t\tthis.updatePositionFromDelta(deltaX, deltaY);\n\t\t\t\tevent.preventDefault();\n\t\t\t} else if (event.keyCode === 13 || event.keyCode === 32 || event.keyCode === 27) {\n\t\t\t\t// Enter, space or esc during drag will end it.\n\t\t\t\tthis.handleDragEndEvent_();\n\t\t\t}\n\t\t} else if (event.keyCode === 13 || event.keyCode === 32) {\n\t\t\t// Enter or space will start the drag action.\n\t\t\tthis.handleDragStartEvent_(event);\n\t\t}\n\t}\n\n\t/**\n\t * Triggers when the `container` state changes. Detaches events attached to the\n\t * previous container and attaches them to the new value instead.\n\t * @protected\n\t */\n\thandleContainerChanged_() {\n\t\tif (core.isString(this.sources)) {\n\t\t\tthis.sourceHandler_.removeAllListeners();\n\t\t\tthis.attachSourceEvents_();\n\t\t}\n\t\tif (this.prevScrollContainersSelector_) {\n\t\t\tthis.scrollContainers = this.prevScrollContainersSelector_;\n\t\t}\n\t}\n\n\t/**\n\t * Triggers when the `sources` state changes. Detaches events attached to the\n\t * previous sources and attaches them to the new value instead.\n\t * @protected\n\t */\n\thandleSourcesChanged_() {\n\t\tthis.sourceHandler_.removeAllListeners();\n\t\tthis.attachSourceEvents_();\n\t}\n\n\t/**\n\t * Checks if the minimum distance for dragging has been reached after\n\t * adding the given values.\n\t * @param {number} distanceX\n\t * @param {number} distanceY\n\t * @return {boolean}\n\t * @protected\n\t */\n\thasReachedMinimumDistance_(distanceX, distanceY) {\n\t\tthis.distanceDragged_ += Math.abs(distanceX) + Math.abs(distanceY);\n\t\treturn this.distanceDragged_ >= this.minimumDragDistance;\n\t}\n\n\t/**\n\t * Checks if one of the sources are being dragged.\n\t * @return {boolean}\n\t */\n\tisDragging() {\n\t\treturn this.dragging_;\n\t}\n\n\t/**\n\t * Checks if the given element is within a valid handle.\n\t * @param {!Element} element\n\t * @protected\n\t */\n\tisWithinHandle_(element) {\n\t\tvar handles = this.handles;\n\t\tif (!handles) {\n\t\t\treturn true;\n\t\t} else if (core.isString(handles)) {\n\t\t\treturn dom.match(element, handles + ', ' + handles + ' *');\n\t\t} else {\n\t\t\treturn dom.contains(handles, element);\n\t\t}\n\t}\n\n\t/**\n\t * Moves the given element to the current source coordinates.\n\t * @param {!Element} element\n\t * @protected\n\t */\n\tmoveToPosition_(element) {\n\t\telement.style.left = this.sourceRelativePos_.x + 'px';\n\t\telement.style.top = this.sourceRelativePos_.y + 'px';\n\t}\n\n\t/**\n\t * Setter for the `autoScroll` state key.\n\t * @param {*} val\n\t * @return {!DragAutoScroll}\n\t */\n\tsetterAutoScrollFn_(val) {\n\t\tif (val !== false) {\n\t\t\treturn new DragAutoScroll(val);\n\t\t}\n\t}\n\n\t/**\n\t * Setter for the `constrain` state key.\n\t * @param {!Element|Object|string} val\n\t * @return {!Element|Object}\n\t * @protected\n\t */\n\tsetterConstrainFn(val) {\n\t\tif (core.isString(val)) {\n\t\t\tval = dom.toElement(val);\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t * Sets the `scrollContainers` state key.\n\t * @param {Element|string} val\n\t * @return {!Array<!Element>}\n\t * @protected\n\t */\n\tsetterScrollContainersFn_(val) {\n\t\tthis.prevScrollContainersSelector_ = core.isString(val) ? val : null;\n\t\tvar elements = this.toElements_(val);\n\t\telements.push(document);\n\t\treturn elements;\n\t}\n\n\t/**\n\t * Starts dragging the selected source.\n\t * @protected\n\t */\n\tstartDragging_() {\n\t\tthis.dragging_ = true;\n\t\tthis.createActiveDragPlaceholder_();\n\t\tdom.addClasses(this.activeDragPlaceholder_, this.draggingClass);\n\t\tthis.activeDragPlaceholder_.setAttribute('aria-grabbed', 'true');\n\t\tthis.emit(Drag.Events.START);\n\t}\n\n\t/**\n\t * Converts the given element or selector into an array of elements.\n\t * @param {Element|string} elementOrSelector\n\t * @return {!Array<!Element>}\n\t * @protected\n\t */\n\ttoElements_(elementOrSelector) {\n\t\tif (core.isString(elementOrSelector)) {\n\t\t\tvar matched = this.container.querySelectorAll(elementOrSelector);\n\t\t\treturn Array.prototype.slice.call(matched, 0);\n\t\t} else if (elementOrSelector) {\n\t\t\treturn [elementOrSelector];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Updates the dragged element's position using the given calculated region.\n\t * @param {!Object} newRegion\n\t */\n\tupdatePosition(newRegion) {\n\t\tthis.constrain_(newRegion);\n\t\tvar deltaX = newRegion.left - this.sourceRegion_.left;\n\t\tvar deltaY = newRegion.top - this.sourceRegion_.top;\n\t\tif (deltaX !== 0 || deltaY !== 0) {\n\t\t\tthis.sourceRegion_ = newRegion;\n\t\t\tthis.sourceRelativePos_.x += deltaX;\n\t\t\tthis.sourceRelativePos_.y += deltaY;\n\t\t\tthis.emit(Drag.Events.DRAG, this.buildEventObject_());\n\t\t}\n\t}\n\n\t/**\n\t * Updates the dragged element's position, moving its placeholder if `move`\n\t * is set to true.\n\t * @param {number} deltaX\n\t * @param {number} deltaY\n\t */\n\tupdatePositionFromDelta(deltaX, deltaY) {\n\t\tvar newRegion = object.mixin({}, this.sourceRegion_);\n\t\tnewRegion.left += deltaX;\n\t\tnewRegion.right += deltaX;\n\t\tnewRegion.top += deltaY;\n\t\tnewRegion.bottom += deltaY;\n\t\tthis.updatePosition(newRegion);\n\t}\n\n\t/**\n\t * Updates the dragged element's position, according to the current mouse position.\n\t */\n\tupdatePositionFromMouse() {\n\t\tvar newRegion = {\n\t\t\theight: this.sourceRegion_.height,\n\t\t\tleft: this.mousePos_.x + this.mouseSourceDelta_.x,\n\t\t\ttop: this.mousePos_.y + this.mouseSourceDelta_.y,\n\t\t\twidth: this.sourceRegion_.width\n\t\t};\n\t\tnewRegion.right = newRegion.left + newRegion.width;\n\t\tnewRegion.bottom = newRegion.top + newRegion.height;\n\t\tthis.updatePosition(newRegion);\n\t}\n\n\t/**\n\t * Validates the given value, making sure that it's either an element or a string.\n\t * @param {*} val\n\t * @return {boolean}\n\t * @protected\n\t */\n\tvalidateElementOrString_(val) {\n\t\treturn core.isString(val) || core.isElement(val);\n\t}\n\n\t/**\n\t * Validates the value of the `constrain` state.\n\t * @param {*} val\n\t * @return {boolean}\n\t * @protected\n\t */\n\tvalidatorConstrainFn(val) {\n\t\treturn core.isString(val) || core.isObject(val);\n\t}\n}\n\n/**\n * State definition.\n * @type {!Object}\n * @static\n */\nDrag.STATE = {\n\t/**\n\t * Configuration object for the `DragAutoScroll` instance that will be used for\n\t * automatically scrolling the elements in `scrollContainers` during drag when\n\t * the mouse is near their boundaries. If set to `false`, auto scrolling will be\n\t * disabled (default).\n\t * @type {!Object|boolean}\n\t * @default false\n\t */\n\tautoScroll: {\n\t\tsetter: 'setterAutoScrollFn_',\n\t\tvalue: false,\n\t\twriteOnce: true\n\t},\n\n\t/**\n\t * The axis that allows dragging. Can be set to just x, just y or both (default).\n\t * @type {string}\n\t */\n\taxis: {\n\t\tvalidator: core.isString\n\t},\n\n\t/**\n\t * Object with the boundaries, that the dragged element should not leave\n\t * while being dragged. If not set, the element is free to be dragged\n\t * to anywhere on the page. Can be either already an object with the\n\t * boundaries relative to the document, or an element to use the boundaries\n\t * from, or even a selector for finding that element.\n\t * @type {!Element|Object|function()|string}\n\t */\n\tconstrain: {\n\t\tsetter: 'setterConstrainFn',\n\t\tvalidator: 'validatorConstrainFn'\n\t},\n\n\t/**\n\t * An element that contains all sources, targets and scroll containers. This\n\t * will be used when delegate events are attached or when looking for elements\n\t * by selector. Defaults to `document`.\n\t * @type {!Element|string}\n\t * @default document\n\t */\n\tcontainer: {\n\t\tsetter: dom.toElement,\n\t\tvalidator: 'validateElementOrString_',\n\t\tvalue: document\n\t},\n\n\t/**\n\t * Flag indicating if drag operations are disabled. When set to true, it\n\t * dragging won't work.\n\t * @type {boolean}\n\t * @default false\n\t */\n\tdisabled: {\n\t\tvalidator: core.isBoolean,\n\t\tvalue: false\n\t},\n\n\t/**\n\t * The CSS class that should be added to the node being dragged.\n\t * @type {string}\n\t * @default 'dragging'\n\t */\n\tdraggingClass: {\n\t\tvalidator: core.isString,\n\t\tvalue: 'dragging'\n\t},\n\n\t/**\n\t * The placeholder element that should be moved during drag. Can be either\n\t * an element or the \"clone\" string, indicating that a clone of the source\n\t * being dragged should be used. If nothing is set, the original source element\n\t * will be used.\n\t * @type {Element|?string}\n\t */\n\tdragPlaceholder: {\n\t\tvalidator: 'validateElementOrString_'\n\t},\n\n\t/**\n\t * Elements inside the source that should be the drag handles. Can be\n\t * either a single element or a selector for multiple elements.\n\t * @type {Element|?string}\n\t */\n\thandles: {\n\t\tvalidator: 'validateElementOrString_'\n\t},\n\n\t/**\n\t * The number of pixels that the source should move when dragged via\n\t * the keyboard controls.\n\t * @default 10\n\t */\n\tkeyboardSpeed: {\n\t\tvalidator: core.isNumber,\n\t\tvalue: 10\n\t},\n\n\t/**\n\t * The minimum distance, in pixels, that the mouse needs to move before\n\t * the action is considered a drag.\n\t * @type {number}\n\t * @default 5\n\t */\n\tminimumDragDistance: {\n\t\tvalidator: core.isNumber,\n\t\tvalue: 5,\n\t\twriteOnce: true\n\t},\n\n\t/**\n\t * Elements with scroll, besides the document, that contain any of the given\n\t * sources. Can be either a single element or a selector for multiple elements.\n\t * @type {Element|string}\n\t */\n\tscrollContainers: {\n\t\tsetter: 'setterScrollContainersFn_',\n\t\tvalidator: 'validateElementOrString_'\n\t},\n\n\t/**\n\t * Elements that should be draggable. Can be either a single element\n\t * or a selector for multiple elements.\n\t * @type {!Element|string}\n\t */\n\tsources: {\n\t\tvalidator: 'validateElementOrString_'\n\t},\n\n\t/**\n\t * The number of pixels that the source element should move at a time,\n\t * for each axis. When set to a value higher than 1, dragging won't be\n\t * a continuous movement, since the source element will move by multiple\n\t * pixels on each step.\n\t * @type {!{x: number, y: number}}\n\t */\n\tsteps: {\n\t\tvalidator: core.isObject,\n\t\tvalueFn: () => {\n\t\t\treturn {\n\t\t\t\tx: 1,\n\t\t\t\ty: 1\n\t\t\t};\n\t\t}\n\t},\n\n\t/**\n\t * Flag indicating if a shim should be used for capturing document events.\n\t * This is important for allowing dragging nodes over iframes. If false,\n\t * events will be listened in the document itself instead.\n\t * @type {boolean}\n\t * @default true\n\t */\n\tuseShim: {\n\t\tvalue: true\n\t}\n};\n\n/**\n * Holds the names of events that can be emitted by `Drag`.\n * @type {!Object}\n * @static\n */\nDrag.Events = {\n\tDRAG: 'drag',\n\tEND: 'end',\n\tSTART: 'start'\n};\n\n/**\n * Holds the values that can be passed to the `dragPlaceholder` state key.\n * @type {!Object}\n * @static\n */\nDrag.Placeholder = {\n\tCLONE: 'clone'\n};\n\nexport default Drag;\n"],"sourceRoot":"/source/"}