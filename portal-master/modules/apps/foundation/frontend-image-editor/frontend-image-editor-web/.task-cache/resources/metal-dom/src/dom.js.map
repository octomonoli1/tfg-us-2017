{"version":3,"sources":["dom.js"],"names":[],"mappings":"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","file":"../../../node_modules/metal-dom/src/dom.js","sourcesContent":["'use strict';\n\nimport { core, object } from 'metal';\nimport domData from './domData';\nimport DomDelegatedEventHandle from './DomDelegatedEventHandle';\nimport DomEventHandle from './DomEventHandle';\n\nconst NEXT_TARGET = '__metal_next_target__';\nconst USE_CAPTURE = {\n\tblur: true,\n\terror: true,\n\tfocus: true,\n\tinvalid: true,\n\tload: true,\n\tscroll: true\n};\n\nclass dom {\n\t/**\n\t * Adds the requested CSS classes to an element.\n\t * @param {!Element} element The element to add CSS classes to.\n\t * @param {string} classes CSS classes to add.\n\t */\n\tstatic addClasses(element, classes) {\n\t\tif (!core.isObject(element) || !core.isString(classes)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ('classList' in element) {\n\t\t\tdom.addClassesWithNative_(element, classes);\n\t\t} else {\n\t\t\tdom.addClassesWithoutNative_(element, classes);\n\t\t}\n\t}\n\n\t/**\n\t * Adds the requested CSS classes to an element using classList.\n\t * @param {!Element} element The element to add CSS classes to.\n\t * @param {string} classes CSS classes to add.\n\t * @protected\n\t */\n\tstatic addClassesWithNative_(element, classes) {\n\t\tclasses.split(' ').forEach(function(className) {\n\t\t\tif (className) {\n\t\t\t\telement.classList.add(className);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Adds the requested CSS classes to an element without using classList.\n\t * @param {!Element} element The element to add CSS classes to.\n\t * @param {string} classes CSS classes to add.\n\t * @protected\n\t */\n\tstatic addClassesWithoutNative_(element, classes) {\n\t\tvar elementClassName = ' ' + element.className + ' ';\n\t\tvar classesToAppend = '';\n\n\t\tclasses = classes.split(' ');\n\n\t\tfor (var i = 0; i < classes.length; i++) {\n\t\t\tvar className = classes[i];\n\n\t\t\tif (elementClassName.indexOf(' ' + className + ' ') === -1) {\n\t\t\t\tclassesToAppend += ' ' + className;\n\t\t\t}\n\t\t}\n\n\t\tif (classesToAppend) {\n\t\t\telement.className = element.className + classesToAppend;\n\t\t}\n\t}\n\n\t/**\n\t * Adds an event listener to the given element, to be triggered via delegate.\n\t * @param {!Element} element\n\t * @param {string} eventName\n\t * @param {!function()} listener\n\t * @protected\n\t */\n\tstatic addElementListener_(element, eventName, listener) {\n\t\tvar data = domData.get(element);\n\t\tdom.addToArr_(data.listeners, eventName, listener);\n\t}\n\n\t/**\n\t * Adds an event listener to the given element, to be triggered via delegate\n\t * selectors.\n\t * @param {!Element} element\n\t * @param {string} eventName\n\t * @param {string} selector\n\t * @param {!function()} listener\n\t * @protected\n\t */\n\tstatic addSelectorListener_(element, eventName, selector, listener) {\n\t\tvar data = domData.get(element);\n\t\tdom.addToArr_(data.delegating[eventName].selectors, selector, listener);\n\t}\n\n\t/**\n\t * Adds a value to an array inside an object, creating it first if it doesn't\n\t * yet exist.\n\t * @param {!Array} arr\n\t * @param {string} key\n\t * @param {*} value\n\t * @protected\n\t */\n\tstatic addToArr_(arr, key, value) {\n\t\tif (!arr[key]) {\n\t\t\tarr[key] = [];\n\t\t}\n\t\tarr[key].push(value);\n\t}\n\n\t/**\n\t * Attaches a delegate listener, unless there's already one attached.\n\t * @param {!Element} element\n\t * @param {string} eventName\n\t * @protected\n\t */\n\tstatic attachDelegateEvent_(element, eventName) {\n\t\tvar data = domData.get(element);\n\t\tif (!data.delegating[eventName]) {\n\t\t\tdata.delegating[eventName] = {\n\t\t\t\thandle: dom.on(\n\t\t\t\t\telement,\n\t\t\t\t\teventName,\n\t\t\t\t\tdom.handleDelegateEvent_,\n\t\t\t\t\t!!USE_CAPTURE[eventName]\n\t\t\t\t),\n\t\t\t\tselectors: {}\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Gets the closest element up the tree from the given element (including\n\t * itself) that matches the specified selector, or null if none match.\n\t * @param {Element} element\n\t * @param {string} selector\n\t * @return {Element}\n\t */\n\tstatic closest(element, selector) {\n\t\twhile (element && !dom.match(element, selector)) {\n\t\t\telement = element.parentNode;\n\t\t}\n\t\treturn element;\n\t}\n\n\t/**\n\t * Appends a child node with text or other nodes to a parent node. If\n\t * child is a HTML string it will be automatically converted to a document\n\t * fragment before appending it to the parent.\n\t * @param {!Element} parent The node to append nodes to.\n\t * @param {!(Element|NodeList|string)} child The thing to append to the parent.\n\t * @return {!Element} The appended child.\n\t */\n\tstatic append(parent, child) {\n\t\tif (core.isString(child)) {\n\t\t\tchild = dom.buildFragment(child);\n\t\t}\n\t\tif (child instanceof NodeList) {\n\t\t\tvar childArr = Array.prototype.slice.call(child);\n\t\t\tfor (var i = 0; i < childArr.length; i++) {\n\t\t\t\tparent.appendChild(childArr[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tparent.appendChild(child);\n\t\t}\n\t\treturn child;\n\t}\n\n\t/**\n\t * Helper for converting a HTML string into a document fragment.\n\t * @param {string} htmlString The HTML string to convert.\n\t * @return {!Element} The resulting document fragment.\n\t */\n\tstatic buildFragment(htmlString) {\n\t\tvar tempDiv = document.createElement('div');\n\t\ttempDiv.innerHTML = '<br>' + htmlString;\n\t\ttempDiv.removeChild(tempDiv.firstChild);\n\n\t\tvar fragment = document.createDocumentFragment();\n\t\twhile (tempDiv.firstChild) {\n\t\t\tfragment.appendChild(tempDiv.firstChild);\n\t\t}\n\t\treturn fragment;\n\t}\n\n\t/**\n\t * Checks if the first element contains the second one.\n\t * @param {!Element} element1\n\t * @param {!Element} element2\n\t * @return {boolean}\n\t */\n\tstatic contains(element1, element2) {\n\t\tif (core.isDocument(element1)) {\n\t\t\t// document.contains is not defined on IE9, so call it on documentElement instead.\n\t\t\treturn element1.documentElement.contains(element2);\n\t\t} else {\n\t\t\treturn element1.contains(element2);\n\t\t}\n\t}\n\n\t/**\n\t * Listens to the specified event on the given DOM element, but only calls the\n\t * given callback listener when it's triggered by elements that match the\n\t * given selector or target element.\n\t * @param {!Element} element The DOM element the event should be listened on.\n\t * @param {string} eventName The name of the event to listen to.\n\t * @param {!Element|string} selectorOrTarget Either an element or css selector\n\t *     that should match the event for the listener to be triggered.\n\t * @param {!function(!Object)} callback Function to be called when the event\n\t *     is triggered. It will receive the normalized event object.\n\t * @param {boolean=} opt_default Optional flag indicating if this is a default\n\t *     listener. That means that it would only be executed after all non\n\t *     default listeners, and only if the event isn't prevented via\n\t *     `preventDefault`.\n\t * @return {!EventHandle} Can be used to remove the listener.\n\t */\n\tstatic delegate(element, eventName, selectorOrTarget, callback, opt_default) {\n\t\tvar customConfig = dom.customEvents[eventName];\n\t\tif (customConfig && customConfig.delegate) {\n\t\t\teventName = customConfig.originalEvent;\n\t\t\tcallback = customConfig.handler.bind(customConfig, callback);\n\t\t}\n\n\t\tif (opt_default) {\n\t\t\t// Wrap callback so we don't set property directly on it.\n\t\t\tcallback = callback.bind();\n\t\t\tcallback.defaultListener_ = true;\n\t\t}\n\n\t\tdom.attachDelegateEvent_(element, eventName);\n\t\tif (core.isString(selectorOrTarget)) {\n\t\t\tdom.addSelectorListener_(element, eventName, selectorOrTarget, callback);\n\t\t} else {\n\t\t\tdom.addElementListener_(selectorOrTarget, eventName, callback);\n\t\t}\n\n\t\treturn new DomDelegatedEventHandle(\n\t\t\tcore.isString(selectorOrTarget) ? element : selectorOrTarget,\n\t\t\teventName,\n\t\t\tcallback,\n\t\t\tcore.isString(selectorOrTarget) ? selectorOrTarget : null\n\t\t);\n\t}\n\n\t/**\n\t * Inserts node in document as last element.\n\t * @param {Element} node Element to remove children from.\n\t */\n\tstatic enterDocument(node) {\n\t\tnode && dom.append(document.body, node);\n\t}\n\n\t/**\n\t * Removes node from document.\n\t * @param {Element} node Element to remove children from.\n\t */\n\tstatic exitDocument(node) {\n\t\tif (node && node.parentNode) {\n\t\t\tnode.parentNode.removeChild(node);\n\t\t}\n\t}\n\n\t/**\n\t * This is called when an event is triggered by a delegate listener. All\n\t * matching listeners of this event type from `target` to `currentTarget` will\n\t * be triggered.\n\t * @param {!Event} event The event payload.\n\t * @return {boolean} False if at least one of the triggered callbacks returns\n\t *     false, or true otherwise.\n\t * @protected\n\t */\n\tstatic handleDelegateEvent_(event) {\n\t\tdom.normalizeDelegateEvent_(event);\n\t\tvar currElement = core.isDef(event[NEXT_TARGET]) ?\n\t\t\tevent[NEXT_TARGET] :\n\t\t\tevent.target;\n\t\tvar ret = true;\n\t\tvar container = event.currentTarget;\n\t\tvar limit = event.currentTarget.parentNode;\n\t\tvar defFns = [];\n\n\t\twhile (currElement && currElement !== limit && !event.stopped) {\n\t\t\tevent.delegateTarget = currElement;\n\t\t\tret &= dom.triggerMatchedListeners_(container, currElement, event, defFns);\n\t\t\tcurrElement = currElement.parentNode;\n\t\t}\n\n\t\tfor (var i = 0; i < defFns.length && !event.defaultPrevented; i++) {\n\t\t\tevent.delegateTarget = defFns[i].element;\n\t\t\tret &= defFns[i].fn(event);\n\t\t}\n\n\t\tevent.delegateTarget = null;\n\t\tevent[NEXT_TARGET] = limit;\n\t\treturn ret;\n\t}\n\n\t/**\n\t * Checks if the given element has the requested css class.\n\t * @param {!Element} element\n\t * @param {string} className\n\t * @return {boolean}\n\t */\n\tstatic hasClass(element, className) {\n\t\tif ('classList' in element) {\n\t\t\treturn dom.hasClassWithNative_(element, className);\n\t\t} else {\n\t\t\treturn dom.hasClassWithoutNative_(element, className);\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the given element has the requested css class using classList.\n\t * @param {!Element} element\n\t * @param {string} className\n\t * @return {boolean}\n\t * @protected\n\t */\n\tstatic hasClassWithNative_(element, className) {\n\t\treturn element.classList.contains(className);\n\t}\n\n\t/**\n\t * Checks if the given element has the requested css class without using classList.\n\t * @param {!Element} element\n\t * @param {string} className\n\t * @return {boolean}\n\t * @protected\n\t */\n\tstatic hasClassWithoutNative_(element, className) {\n\t\treturn (' ' + element.className + ' ').indexOf(' ' + className + ' ') >= 0;\n\t}\n\n\t/**\n\t * Checks if the given element is empty or not.\n\t * @param {!Element} element\n\t * @return {boolean}\n\t */\n\tstatic isEmpty(element) {\n\t\treturn element.childNodes.length === 0;\n\t}\n\n\t/**\n\t * Check if an element matches a given selector.\n\t * @param {Element} element\n\t * @param {string} selector\n\t * @return {boolean}\n\t */\n\tstatic match(element, selector) {\n\t\tif (!element || element.nodeType !== 1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar p = Element.prototype;\n\t\tvar m = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || p.oMatchesSelector;\n\t\tif (m) {\n\t\t\treturn m.call(element, selector);\n\t\t}\n\n\t\treturn dom.matchFallback_(element, selector);\n\t}\n\n\t/**\n\t * Check if an element matches a given selector, using an internal implementation\n\t * instead of calling existing javascript functions.\n\t * @param {Element} element\n\t * @param {string} selector\n\t * @return {boolean}\n\t * @protected\n\t */\n\tstatic matchFallback_(element, selector) {\n\t\tvar nodes = document.querySelectorAll(selector, element.parentNode);\n\t\tfor (var i = 0; i < nodes.length; ++i) {\n\t\t\tif (nodes[i] === element) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns the next sibling of the given element that matches the specified\n\t * selector, or null if there is none.\n\t * @param {!Element} element\n\t * @param {?string} selector\n\t */\n\tstatic next(element, selector) {\n\t\tdo {\n\t\t\telement = element.nextSibling;\n\t\t\tif (element && dom.match(element, selector)) {\n\t\t\t\treturn element;\n\t\t\t}\n\t\t} while (element);\n\t\treturn null;\n\t}\n\n\t/**\n\t * Normalizes the event payload for delegate listeners.\n\t * @param {!Event} event\n\t */\n\tstatic normalizeDelegateEvent_(event) {\n\t\tevent.stopPropagation = dom.stopPropagation_;\n\t\tevent.stopImmediatePropagation = dom.stopImmediatePropagation_;\n\t}\n\n\t/**\n\t * Listens to the specified event on the given DOM element. This function normalizes\n\t * DOM event payloads and functions so they'll work the same way on all supported\n\t * browsers.\n\t * @param {!Element|string} element The DOM element to listen to the event on, or\n\t *   a selector that should be delegated on the entire document.\n\t * @param {string} eventName The name of the event to listen to.\n\t * @param {!function(!Object)} callback Function to be called when the event is\n\t *   triggered. It will receive the normalized event object.\n\t * @param {boolean} opt_capture Flag indicating if listener should be triggered\n\t *   during capture phase, instead of during the bubbling phase. Defaults to false.\n\t * @return {!DomEventHandle} Can be used to remove the listener.\n\t */\n\tstatic on(element, eventName, callback, opt_capture) {\n\t\tif (core.isString(element)) {\n\t\t\treturn dom.delegate(document, eventName, element, callback);\n\t\t}\n\t\tvar customConfig = dom.customEvents[eventName];\n\t\tif (customConfig && customConfig.event) {\n\t\t\teventName = customConfig.originalEvent;\n\t\t\tcallback = customConfig.handler.bind(customConfig, callback);\n\t\t}\n\t\telement.addEventListener(eventName, callback, opt_capture);\n\t\treturn new DomEventHandle(element, eventName, callback, opt_capture);\n\t}\n\n\t/**\n\t * Listens to the specified event on the given DOM element once. This\n\t * function normalizes DOM event payloads and functions so they'll work the\n\t * same way on all supported browsers.\n\t * @param {!Element} element The DOM element to listen to the event on.\n\t * @param {string} eventName The name of the event to listen to.\n\t * @param {!function(!Object)} callback Function to be called when the event\n\t *   is triggered. It will receive the normalized event object.\n\t * @return {!DomEventHandle} Can be used to remove the listener.\n\t */\n\tstatic once(element, eventName, callback) {\n\t\tvar domEventHandle = this.on(element, eventName, function() {\n\t\t\tdomEventHandle.removeListener();\n\t\t\treturn callback.apply(this, arguments);\n\t\t});\n\t\treturn domEventHandle;\n\t}\n\n\t/**\n\t * Gets the first parent from the given element that matches the specified\n\t * selector, or null if none match.\n\t * @param {!Element} element\n\t * @param {string} selector\n\t * @return {Element}\n\t */\n\tstatic parent(element, selector) {\n\t\treturn dom.closest(element.parentNode, selector);\n\t}\n\n\t/**\n\t * Registers a custom event.\n\t * @param {string} eventName The name of the custom event.\n\t * @param {!Object} customConfig An object with information about how the event\n\t *   should be handled.\n\t */\n\tstatic registerCustomEvent(eventName, customConfig) {\n\t\tdom.customEvents[eventName] = customConfig;\n\t}\n\n\t/**\n\t * Removes all the child nodes on a DOM node.\n\t * @param {Element} node Element to remove children from.\n\t */\n\tstatic removeChildren(node) {\n\t\tvar child;\n\t\twhile ((child = node.firstChild)) {\n\t\t\tnode.removeChild(child);\n\t\t}\n\t}\n\n\t/**\n\t * Removes the requested CSS classes from an element.\n\t * @param {!Element} element The element to remove CSS classes from.\n\t * @param {string} classes CSS classes to remove.\n\t */\n\tstatic removeClasses(element, classes) {\n\t\tif (!core.isObject(element) || !core.isString(classes)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ('classList' in element) {\n\t\t\tdom.removeClassesWithNative_(element, classes);\n\t\t} else {\n\t\t\tdom.removeClassesWithoutNative_(element, classes);\n\t\t}\n\t}\n\n\t/**\n\t * Removes the requested CSS classes from an element using classList.\n\t * @param {!Element} element The element to remove CSS classes from.\n\t * @param {string} classes CSS classes to remove.\n\t * @protected\n\t */\n\tstatic removeClassesWithNative_(element, classes) {\n\t\tclasses.split(' ').forEach(function(className) {\n\t\t\tif (className) {\n\t\t\t\telement.classList.remove(className);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Removes the requested CSS classes from an element without using classList.\n\t * @param {!Element} element The element to remove CSS classes from.\n\t * @param {string} classes CSS classes to remove.\n\t * @protected\n\t */\n\tstatic removeClassesWithoutNative_(element, classes) {\n\t\tvar elementClassName = ' ' + element.className + ' ';\n\n\t\tclasses = classes.split(' ');\n\n\t\tfor (var i = 0; i < classes.length; i++) {\n\t\t\telementClassName = elementClassName.replace(' ' + classes[i] + ' ', ' ');\n\t\t}\n\n\t\telement.className = elementClassName.trim();\n\t}\n\n\t/**\n\t * Replaces the first element with the second.\n\t * @param {Element} element1\n\t * @param {Element} element2\n\t */\n\tstatic replace(element1, element2) {\n\t\tif (element1 && element2 && element1 !== element2 && element1.parentNode) {\n\t\t\telement1.parentNode.insertBefore(element2, element1);\n\t\t\telement1.parentNode.removeChild(element1);\n\t\t}\n\t}\n\n\t/**\n\t * The function that replaces `stopImmediatePropagation_` for events.\n\t * @protected\n\t */\n\tstatic stopImmediatePropagation_() {\n\t\tthis.stopped = true;\n\t\tthis.stoppedImmediate = true;\n\t\tEvent.prototype.stopImmediatePropagation.call(this);\n\t}\n\n\t/**\n\t * The function that replaces `stopPropagation` for events.\n\t * @protected\n\t */\n\tstatic stopPropagation_() {\n\t\tthis.stopped = true;\n\t\tEvent.prototype.stopPropagation.call(this);\n\t}\n\n\t/**\n\t * Checks if the given element supports the given event type.\n\t * @param {!Element|string} element The DOM element or element tag name to check.\n\t * @param {string} eventName The name of the event to check.\n\t * @return {boolean}\n\t */\n\tstatic supportsEvent(element, eventName) {\n\t\tif (dom.customEvents[eventName]) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (core.isString(element)) {\n\t\t\tif (!elementsByTag[element]) {\n\t\t\t\telementsByTag[element] = document.createElement(element);\n\t\t\t}\n\t\t\telement = elementsByTag[element];\n\t\t}\n\t\treturn 'on' + eventName in element;\n\t}\n\n\t/**\n\t * Converts the given argument to a DOM element. Strings are assumed to\n\t * be selectors, and so a matched element will be returned. If the arg\n\t * is already a DOM element it will be the return value.\n\t * @param {string|Element|Document} selectorOrElement\n\t * @return {Element} The converted element, or null if none was found.\n\t */\n\tstatic toElement(selectorOrElement) {\n\t\tif (core.isElement(selectorOrElement) || core.isDocument(selectorOrElement)) {\n\t\t\treturn selectorOrElement;\n\t\t} else if (core.isString(selectorOrElement)) {\n\t\t\tif (selectorOrElement[0] === '#' && selectorOrElement.indexOf(' ') === -1) {\n\t\t\t\treturn document.getElementById(selectorOrElement.substr(1));\n\t\t\t} else {\n\t\t\t\treturn document.querySelector(selectorOrElement);\n\t\t\t}\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Adds or removes one or more classes from an element. If any of the classes\n\t * is present, it will be removed from the element, or added otherwise.\n\t * @param {!Element} element The element which classes will be toggled.\n\t * @param {string} classes The classes which have to added or removed from the element.\n\t */\n\tstatic toggleClasses(element, classes) {\n\t\tif (!core.isObject(element) || !core.isString(classes)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ('classList' in element) {\n\t\t\tdom.toggleClassesWithNative_(element, classes);\n\t\t} else {\n\t\t\tdom.toggleClassesWithoutNative_(element, classes);\n\t\t}\n\t}\n\n\t/**\n\t * Adds or removes one or more classes from an element using classList.\n\t * If any of the classes is present, it will be removed from the element,\n\t * or added otherwise.\n\t * @param {!Element} element The element which classes will be toggled.\n\t * @param {string} classes The classes which have to added or removed from the element.\n\t */\n\tstatic toggleClassesWithNative_(element, classes) {\n\t\tclasses.split(' ').forEach(function(className) {\n\t\t\telement.classList.toggle(className);\n\t\t});\n\t}\n\n\t/**\n\t * Adds or removes one or more classes from an element without using classList.\n\t * If any of the classes is present, it will be removed from the element,\n\t * or added otherwise.\n\t * @param {!Element} element The element which classes will be toggled.\n\t * @param {string} classes The classes which have to added or removed from the element.\n\t */\n\tstatic toggleClassesWithoutNative_(element, classes) {\n\t\tvar elementClassName = ' ' + element.className + ' ';\n\n\t\tclasses = classes.split(' ');\n\n\t\tfor (var i = 0; i < classes.length; i++) {\n\t\t\tvar className = ' ' + classes[i] + ' ';\n\t\t\tvar classIndex = elementClassName.indexOf(className);\n\n\t\t\tif (classIndex === -1) {\n\t\t\t\telementClassName = elementClassName + classes[i] + ' ';\n\t\t\t} else {\n\t\t\t\telementClassName = elementClassName.substring(0, classIndex) + ' ' +\n\t\t\t\t\telementClassName.substring(classIndex + className.length);\n\t\t\t}\n\t\t}\n\n\t\telement.className = elementClassName.trim();\n\t}\n\n\t/**\n\t * Triggers the specified event on the given element.\n\t * NOTE: This should mostly be used for testing, not on real code.\n\t * @param {!Element} element The node that should trigger the event.\n\t * @param {string} eventName The name of the event to be triggred.\n\t * @param {Object=} opt_eventObj An object with data that should be on the\n\t *   triggered event's payload.\n\t */\n\tstatic triggerEvent(element, eventName, opt_eventObj) {\n\t\tvar eventObj = document.createEvent('HTMLEvents');\n\t\teventObj.initEvent(eventName, true, true);\n\t\tobject.mixin(eventObj, opt_eventObj);\n\t\telement.dispatchEvent(eventObj);\n\t}\n\n\t/**\n\t * Triggers the given listeners array.\n\t * @param {Array<!function()} listeners\n\t * @param {!Event} event\n\t * @param {!Element} element\n\t * @param {!Array} defaultFns Array to collect default listeners in, instead\n\t *     of running them.\n\t * @return {boolean} False if at least one of the triggered callbacks returns\n\t *     false, or true otherwise.\n\t * @protected\n\t */\n\tstatic triggerListeners_(listeners, event, element, defaultFns) {\n\t\tvar ret = true;\n\t\tlisteners = listeners || [];\n\t\tfor (var i = 0; i < listeners.length && !event.stoppedImmediate; i++) {\n\t\t\tif (listeners[i].defaultListener_) {\n\t\t\t\tdefaultFns.push({\n\t\t\t\t\telement,\n\t\t\t\t\tfn: listeners[i]\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tret &= listeners[i](event);\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\t/**\n\t * Triggers all listeners for the given event type that are stored in the\n\t * specified element.\n\t * @param {!Element} container\n\t * @param {!Element} element\n\t * @param {!Event} event\n\t * @param {!Array} defaultFns Array to collect default listeners in, instead\n\t *     of running them.\n\t * @return {boolean} False if at least one of the triggered callbacks returns\n\t *     false, or true otherwise.\n\t * @protected\n\t */\n\tstatic triggerMatchedListeners_(container, element, event, defaultFns) {\n\t\tvar data = domData.get(element);\n\t\tvar listeners = data.listeners[event.type];\n\t\tvar ret = dom.triggerListeners_(listeners, event, element, defaultFns);\n\n\t\tvar selectorsMap = domData.get(container).delegating[event.type].selectors;\n\t\tvar selectors = Object.keys(selectorsMap);\n\t\tfor (var i = 0; i < selectors.length && !event.stoppedImmediate; i++) {\n\t\t\tif (dom.match(element, selectors[i])) {\n\t\t\t\tlisteners = selectorsMap[selectors[i]];\n\t\t\t\tret &= dom.triggerListeners_(listeners, event, element, defaultFns);\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t}\n}\n\nvar elementsByTag = {};\ndom.customEvents = {};\n\nexport default dom;\n"],"sourceRoot":"/source/"}