{"version":3,"sources":["/source/RotateComponent.es.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAYM;;;;;;;;;4BAIL,+BAAW;AACV,QAAK,MAAL,GAAc,EAAd,CADU;AAEV,QAAK,cAAL,GAAsB,CAAtB,CAFU;;;AAJN,4BAYL,+BAAW;AACV,QAAK,MAAL,GAAc,EAAd,CADU;;;AAZN,4BAsBL,2BAAQ,WAAW;AAClB,UAAO,KAAK,OAAL,CAAa,SAAb,CAAP,CADkB;;;AAtBd,4BAgCL,2BAAQ,WAAW;AAClB,OAAI,UAAU,KAAK,MAAL,CAAY,KAAK,cAAL,CAAtB,CADc;;AAGlB,OAAI,CAAC,OAAD,EAAU;AACb,cAAU,KAAK,OAAL,CAAa,SAAb,EAAwB,KAAK,cAAL,CAAlC,CADa;;AAGb,SAAK,MAAL,CAAY,KAAK,cAAL,CAAZ,GAAmC,OAAnC,CAHa;IAAd;;AAMA,UAAO,OAAP,CATkB;;;AAhCd,4BAoDL,2BAAQ,WAAW,eAAe;AACjC,OAAI,qBAAqB,gCAAuB,UAAC,OAAD,EAAU,MAAV,EAAqB;AACpE,QAAI,aAAa,UAAU,KAAV,CADmD;AAEpE,QAAI,cAAc,UAAU,MAAV,CAFkD;;AAIpE,QAAI,iBAAkB,aAAC,GAAgB,EAAhB,GAAsB,CAAvB,CAJ8C;;AAMpE,QAAI,cAAc,SAAS,aAAT,CAAuB,QAAvB,CAAd,CANgE;AAOpE,gBAAY,KAAZ,GAAoB,UAApB,CAPoE;AAQpE,gBAAY,MAAZ,GAAqB,WAArB,CARoE;AASpE,gBAAY,UAAZ,CAAuB,IAAvB,EAA6B,YAA7B,CAA0C,SAA1C,EAAqD,CAArD,EAAwD,CAAxD,EAToE;;AAWpE,QAAI,kBAAkB,SAAS,aAAT,CAAuB,QAAvB,CAAlB,CAXgE;AAYpE,oBAAgB,KAAhB,GAAwB,iBAAiB,WAAjB,GAA+B,UAA/B,CAZ4C;AAapE,oBAAgB,MAAhB,GAAyB,iBAAiB,UAAjB,GAA8B,WAA9B,CAb2C;;AAepE,QAAI,mBAAmB,gBAAgB,UAAhB,CAA2B,IAA3B,CAAnB,CAfgE;AAgBpE,qBAAiB,IAAjB,GAhBoE;AAiBpE,qBAAiB,SAAjB,CAA2B,gBAAgB,KAAhB,GAAwB,CAAxB,EAA2B,gBAAgB,MAAhB,GAAyB,CAAzB,CAAtD,CAjBoE;AAkBpE,qBAAiB,MAAjB,CAAwB,gBAAgB,KAAK,EAAL,GAAU,GAA1B,CAAxB,CAlBoE;AAmBpE,qBAAiB,SAAjB,CAA2B,WAA3B,EAAwC,CAAC,YAAY,KAAZ,GAAoB,CAArB,EAAwB,CAAC,YAAY,MAAZ,GAAqB,CAAtB,CAAhE,CAnBoE;AAoBpE,qBAAiB,OAAjB,GApBoE;;AAsBpE,YAAQ,iBAAiB,YAAjB,CAA8B,CAA9B,EAAiC,CAAjC,EAAoC,gBAAgB,KAAhB,EAAuB,gBAAgB,MAAhB,CAAnE,EAtBoE;IAArB,CAA5C,CAD6B;;AA0BjC,UAAO,kBAAP,CA1BiC;;;AApD7B,4BAoFL,mCAAa;AACZ,QAAK,cAAL,GAAsB,CAAC,KAAK,cAAL,GAAsB,EAAtB,CAAD,GAA6B,GAA7B,CADV;AAEZ,QAAK,yBAAL,GAFY;;;AApFR,4BA4FL,qCAAc;AACb,QAAK,cAAL,GAAsB,CAAC,KAAK,cAAL,GAAsB,EAAtB,CAAD,GAA6B,GAA7B,CADT;AAEb,QAAK,yBAAL,GAFa;;;SA5FT;;;;;;;;AAuGN,iBAAgB,KAAhB,GAAwB;;;;;AAKvB,cAAY;AACX,cAAW,eAAK,QAAL;GADZ;;;;;;;AASA,6BAA2B;AAC1B,cAAW,eAAK,UAAL;GADZ;EAdD;;;AAoBA,eAAI,QAAJ,CAAa,eAAb;;mBAEe","sourcesContent":["import Component from 'metal-component/src/Component';\nimport Soy from 'metal-soy/src/Soy';\n\nimport core from 'metal/src/core';\nimport { CancellablePromise } from 'metal-promise/src/promise/Promise';\n\nimport componentTemplates from './RotateComponent.soy';\nimport controlsTemplates from './RotateControls.soy';\n\n/**\n * Rotate Component\n */\nclass RotateComponent extends Component {\n\t/**\n\t * @inheritDoc\n\t */\n\tattached() {\n\t\tthis.cache_ = {};\n\t\tthis.rotationAngle_ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdetached() {\n\t\tthis.cache_ = {};\n\t}\n\n\t/**\n\t * Rotates the image to the current selected rotation angle.\n\t *\n\t * @param  {ImageData} imageData ImageData representation of the image.\n\t * @return {CancellablePromise} A promise that will resolve when the processing is complete.\n\t */\n\tpreview(imageData) {\n\t\treturn this.process(imageData);\n\t}\n\n\t/**\n\t * Rotates the image to the current selected rotation angle.\n\t *\n\t * @param  {ImageData} imageData ImageData representation of the image.\n\t * @return {CancellablePromise} A promise that will resolve when the processing is complete.\n\t */\n\tprocess(imageData) {\n\t\tlet promise = this.cache_[this.rotationAngle_];\n\n\t\tif (!promise) {\n\t\t\tpromise = this.rotate_(imageData, this.rotationAngle_);\n\n\t\t\tthis.cache_[this.rotationAngle_] = promise;\n\t\t}\n\n\t\treturn promise;\n\t}\n\n\t/**\n\t * Rotates the passed ImageData to the current rotation angle.\n\t *\n\t * @protected\n\t * @param  {ImageData} imageData The ImageData to rotate\n\t * @param  {number} rotationAngle Normalized rotation angle in degrees in the range [0-360)\n\t * @return {CancellablePromise} A promise to be fullfilled when the image has been rotated.\n\t */\n\trotate_(imageData, rotationAngle) {\n\t\tlet cancellablePromise = new CancellablePromise((resolve, reject) => {\n\t\t\tlet imageWidth = imageData.width;\n\t\t\tlet imageHeight = imageData.height;\n\n\t\t\tlet swapDimensions  = (rotationAngle / 90) % 2;\n\n\t\t\tlet imageCanvas = document.createElement('canvas');\n\t\t\timageCanvas.width = imageWidth;\n\t\t\timageCanvas.height = imageHeight;\n\t\t\timageCanvas.getContext('2d').putImageData(imageData, 0, 0);\n\n\t\t\tlet offscreenCanvas = document.createElement('canvas');\n\t\t\toffscreenCanvas.width = swapDimensions ? imageHeight : imageWidth;\n\t\t\toffscreenCanvas.height = swapDimensions ? imageWidth : imageHeight;\n\n\t\t\tlet offscreenContext = offscreenCanvas.getContext('2d');\n\t\t\toffscreenContext.save();\n\t\t\toffscreenContext.translate(offscreenCanvas.width / 2, offscreenCanvas.height / 2);\n\t\t\toffscreenContext.rotate(rotationAngle * Math.PI / 180);\n\t\t\toffscreenContext.drawImage(imageCanvas, -imageCanvas.width / 2, -imageCanvas.height / 2);\n\t\t\toffscreenContext.restore();\n\n\t\t\tresolve(offscreenContext.getImageData(0, 0, offscreenCanvas.width, offscreenCanvas.height));\n\t\t});\n\n\t\treturn cancellablePromise;\n\t}\n\n\t/**\n\t * Rotates the image 90º counter-clockwise.\n\t */\n\trotateLeft() {\n\t\tthis.rotationAngle_ = (this.rotationAngle_ - 90) % 360;\n\t\tthis.requestImageEditorPreview();\n\t}\n\n\t/**\n\t * Rotates the image 90º clockwise.\n\t */\n\trotateRight() {\n\t\tthis.rotationAngle_ = (this.rotationAngle_ + 90) % 360;\n\t\tthis.requestImageEditorPreview();\n\t}\n}\n\n/**\n * State definition.\n * @type {!Object}\n * @static\n */\nRotateComponent.STATE = {\n\t/**\n\t * Path of this module\n\t * @type {Function}\n\t */\n\tmodulePath: {\n\t\tvalidator: core.isString\n\t},\n\n\t/**\n\t * Injected method to notify the editor this component\n\t * wants to generate a preview version of the image.\n\t * @type {Function}\n\t */\n\trequestImageEditorPreview: {\n\t\tvalidator: core.isFunction\n\t}\n};\n\n// Register component\nSoy.register(RotateComponent, componentTemplates);\n\nexport default RotateComponent;"]}