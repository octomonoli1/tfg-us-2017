{"version":3,"sources":["HTML2IncDom.js"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;AAIA,KAAI,OAAJ;;KAEM;;;;;cAQE,2BAAQ,MAAM;AACpB,UAAO;WAAM,YAAY,GAAZ,CAAgB,IAAhB;IAAN,CADa;;;AARhB,cAgBE,iCAAY;AAClB,UAAO,WAAW,OAAO,UAAP,CADA;;;AAhBd,cAwBE,mBAAI,MAAM;AAChB,eAAY,SAAZ,GAAwB,IAAxB,EAA8B;AAC7B,WAAO,eAAS,GAAT,EAAc,KAAd,EAAqB,KAArB,EAA4B;AAClC,SAAI,KAAK,QAAQ,eAAe,WAAf,GAA6B,eAAe,WAAf,CADZ;AAElC,SAAI,OAAO,CACV,GADU,EAEV,IAFU,EAGV,EAHU,CAAP,CAF8B;AAOlC,UAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,MAAM,MAAN,EAAc,GAAlC,EAAuC;AACtC,WAAK,IAAL,CAAU,MAAM,CAAN,EAAS,IAAT,EAAe,MAAM,CAAN,EAAS,KAAT,CAAzB,CADsC;MAAvC;AAGA,QAAG,KAAH,CAAS,IAAT,EAAe,IAAf,EAVkC;KAA5B;;AAaP,SAAK,aAAS,GAAT,EAAc;AAClB,oBAAe,YAAf,CAA4B,GAA5B,EADkB;KAAd;;AAIL,WAAO,eAAS,IAAT,EAAe;AACrB,oBAAe,IAAf,CAAoB,IAApB,sBADqB;KAAf;IAlBR,EADgB;;;AAxBZ,cA0DE,+BAAU,WAAW;AAC3B,aAAU,SAAV,CAD2B;;;SA1DvB;;;mBA+DS","file":"../../../node_modules/html2incdom/src/HTML2IncDom.js","sourcesContent":["'use strict';\n\nimport unescape from './unescape';\n\nvar parser_;\n\nclass HTML2IncDom {\n\t/**\n\t * Should convert the given html string to a function with calls to\n\t * incremental dom methods.\n\t * @param {string} html\n\t * @return {!function()} Function with incremental dom calls for building\n\t *     the given html string.\n\t */\n\tstatic buildFn(html) {\n\t\treturn () => HTML2IncDom.run(html);\n\t}\n\n\t/**\n\t * Gets the html parser being currently used.\n\t * @return {!function()}\n\t */\n\tstatic getParser() {\n\t\treturn parser_ || window.HTMLParser;\n\t}\n\n\t/**\n\t * Should convert the given html string to calls to incremental dom methods.\n\t * @param {string} html\n\t */\n\tstatic run(html) {\n\t\tHTML2IncDom.getParser()(html, {\n\t\t\tstart: function(tag, attrs, unary) {\n\t\t\t\tvar fn = unary ? IncrementalDOM.elementVoid : IncrementalDOM.elementOpen;\n\t\t\t\tvar args = [\n\t\t\t\t\ttag,\n\t\t\t\t\tnull,\n\t\t\t\t\t[]\n\t\t\t\t];\n\t\t\t\tfor (var i = 0; i < attrs.length; i++) {\n\t\t\t\t\targs.push(attrs[i].name, attrs[i].value);\n\t\t\t\t}\n\t\t\t\tfn.apply(null, args);\n\t\t\t},\n\n\t\t\tend: function(tag) {\n\t\t\t\tIncrementalDOM.elementClose(tag);\n\t\t\t},\n\n\t\t\tchars: function(text) {\n\t\t\t\tIncrementalDOM.text(text, unescape);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Changes the function that will be used to parse html strings. By default\n\t * this will use the `HTMLParser` function from\n\t * https://github.com/blowsie/Pure-JavaScript-HTML5-Parser. This will accept\n\t * any function that follows that same api, basically accepting the html\n\t * string and an object with `start`, `end` and `chars` functions to be called\n\t * during the parsing.\n\t * @param {!function(string, !Object} newParser\n\t */\n\tstatic setParser(newParser) {\n\t\tparser_ = newParser;\n\t}\n}\n\nexport default HTML2IncDom;\n"],"sourceRoot":"/source/"}