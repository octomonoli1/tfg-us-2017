apply plugin: "com.liferay.lang.merger"

dependencies {
	provided group: "biz.aQute.bnd", name: "biz.aQute.bndlib", version: "3.1.0"
	provided group: "com.liferay", name: "com.liferay.dynamic.data.mapping.api", version: "3.0.0"
	provided group: "com.liferay", name: "com.liferay.dynamic.data.mapping.form.evaluator", version: "2.0.0"
	provided group: "com.liferay", name: "com.liferay.dynamic.data.mapping.form.field.type", version: "2.0.0"
	provided group: "com.liferay", name: "com.liferay.dynamic.data.mapping.io", version: "2.0.0"
	provided group: "com.liferay.portal", name: "com.liferay.portal.impl", version: "2.0.0"
	provided group: "com.liferay.portal", name: "com.liferay.portal.kernel", version: "2.2.0"
	provided group: "javax.servlet", name: "javax.servlet-api", version: "3.0.1"
	provided group: "org.osgi", name: "org.osgi.service.component.annotations", version: "1.3.0"

	testCompile group: "com.liferay", name: "com.liferay.dynamic.data.mapping.test.util", version: "2.0.0"
}

task wrapSoyTemplates

classes {
	dependsOn wrapSoyTemplates
}

transpileJS {
	soySrcIncludes = ""
	srcIncludes = "**/*.es.js"
}

wrapSoyTemplates {
	doLast {
		FileTree soyJsFileTree = fileTree(dir: "classes", include: "**/*.soy.js")

		String soyJsWrapperHeader = "AUI.add('liferay-ddm-form-soy', function(A) {"
		String soyJsWrapperFooter = "}, '', {requires: ['soyutils']});";

		soyJsFileTree.each {
			File soyJsFile ->

			soyJsFile.text = soyJsWrapperHeader + soyJsFile.text.replace("(typeof ddm == 'undefined') { var ddm = {}; }", "(typeof ddm == 'undefined') { window.ddm = {}; }") + soyJsWrapperFooter
		}
	}
}