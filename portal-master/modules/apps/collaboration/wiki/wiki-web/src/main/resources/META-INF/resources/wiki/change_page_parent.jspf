<%--
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<div class="alert alert-info">
	<liferay-ui:message key="use-the-form-below-to-move-a-page-and-all-of-its-history-to-be-the-child-of-a-new-parent-page" />
</div>

<%
String parentText = StringPool.BLANK;

WikiPage parentPage = wikiPage.getViewableParentPage();

if (parentPage == null) {
	parentText = StringPool.OPEN_PARENTHESIS + LanguageUtil.get(request, "none") + StringPool.CLOSE_PARENTHESIS;
}
else {
	parentText = parentPage.getTitle();

	parentPage = parentPage.getViewableParentPage();

	while (parentPage != null) {
		parentText = parentPage.getTitle() + " &raquo; " + parentText;

		parentPage = parentPage.getViewableParentPage();
	}
}

List<WikiPage> childPages = WikiPageLocalServiceUtil.getChildren(node.getNodeId(), true, StringPool.BLANK);

childPages = ListUtil.sort(childPages);

childPages.remove(wikiPage);
%>

<aui:fieldset>
	<aui:input name="redirect" type="hidden" value="<%= redirect %>" />

	<aui:input name="currentParent" type="resource" value="<%= parentText %>" />

	<%
	boolean newParentAvailable = true;

	if (childPages.isEmpty()) {
		newParentAvailable = false;
	%>

		<aui:select disabled="<%= true %>" label="new-parent" name="newParentTitle">
			<aui:option label="not-available" value="" />
		</aui:select>

	<%
	}
	else {
	%>

		<aui:select label="new-parent" name="newParentTitle">
			<aui:option label="none" selected="<%= Validator.isNull(wikiPage.getParentTitle()) %>" value="" />

			<%
			for (WikiPage childPage : childPages) {
				if (Validator.isNull(childPage.getRedirectTitle())) {
					request.setAttribute(WikiWebKeys.WIKI_TREE_WALKER_DEPTH, 1);
					request.setAttribute(WikiWebKeys.WIKI_TREE_WALKER_PAGE, wikiPage);
					request.setAttribute(WikiWebKeys.WIKI_TREE_WALKER_PARENT, childPage);
			%>

					<liferay-util:include page="/wiki/page_tree.jsp" servletContext="<%= application %>" />

			<%
				}
			}
			%>

		</aui:select>

	<%
	}
	%>

	<c:if test="<%= pending %>">
		<div class="alert alert-info">
			<liferay-ui:message key="there-is-a-publication-workflow-in-process" />
		</div>
	</c:if>

	<aui:button-row>
		<c:choose>
			<c:when test="<%= hasWorkflowDefinitionLink %>">
				<aui:button cssClass="btn-lg" disabled="<%= pending %>" name="publishButton" onClick='<%= renderResponse.getNamespace() + "publishPage();" %>' value="submit-for-publication" />
			</c:when>
			<c:otherwise>
				<aui:button cssClass="btn-lg" disabled="<%= !newParentAvailable %>" type="submit" value="change-parent" />
			</c:otherwise>
		</c:choose>

		<aui:button cssClass="btn-lg" href="<%= redirect %>" type="cancel" />
	</aui:button-row>
</aui:fieldset>

<aui:script>
	function <portlet:namespace />changeParent() {
		document.<portlet:namespace />fm.<portlet:namespace /><%= Constants.CMD %>.value = '<%= Constants.CHANGE_PARENT %>';

		submitForm(document.<portlet:namespace />fm);
	}

	function <portlet:namespace />publishPage() {
		document.<portlet:namespace />fm.<portlet:namespace />workflowAction.value = '<%= WorkflowConstants.ACTION_PUBLISH %>';

		<portlet:namespace />changeParent();
	}
</aui:script>